{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\quotation-extended\\quotation-extended.route.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\quotation-extended\\quotation-extended.route.ts","mtime":1625565387609},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar quotation_model_1 = require(\"app/shared/model/quotation.model\");\r\nvar quotation_1 = require(\"app/entities/quotation\");\r\nvar quotation_extended_component_1 = require(\"app/entities/quotation-extended/quotation-extended.component\");\r\nvar quotation_extended_detail_component_1 = require(\"app/entities/quotation-extended/quotation-extended-detail.component\");\r\nvar quotation_extended_update_component_1 = require(\"app/entities/quotation-extended/quotation-extended-update.component\");\r\nvar QuotationExtendedResolve = /** @class */ (function (_super) {\r\n    tslib_1.__extends(QuotationExtendedResolve, _super);\r\n    function QuotationExtendedResolve(service) {\r\n        var _this = _super.call(this, service) || this;\r\n        _this.service = service;\r\n        return _this;\r\n    }\r\n    QuotationExtendedResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        var requisitionId = route.params['requisitionId'] ? route.params['requisitionId'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (quotation) { return quotation.body; }));\r\n        }\r\n        else if (requisitionId) {\r\n            var quotation = new quotation_model_1.Quotation();\r\n            quotation.requisitionId = requisitionId;\r\n            return rxjs_1.of(quotation);\r\n        }\r\n        return rxjs_1.of(new quotation_model_1.Quotation());\r\n    };\r\n    var _a;\r\n    QuotationExtendedResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof quotation_1.QuotationService !== \"undefined\" && quotation_1.QuotationService) === \"function\" ? _a : Object])\r\n    ], QuotationExtendedResolve);\r\n    return QuotationExtendedResolve;\r\n}(quotation_1.QuotationResolve));\r\nexports.QuotationExtendedResolve = QuotationExtendedResolve;\r\nexports.quotationExtendedRoute = [\r\n    {\r\n        path: '',\r\n        component: quotation_extended_component_1.QuotationExtendedComponent,\r\n        resolve: {\r\n            pagingParams: ng_jhipster_1.JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            defaultSort: 'id,asc',\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':requisitionId/requisition',\r\n        component: quotation_extended_component_1.QuotationExtendedComponent,\r\n        resolve: {\r\n            pagingParams: ng_jhipster_1.JhiResolvePagingParams,\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            defaultSort: 'id,asc',\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: quotation_extended_detail_component_1.QuotationExtendedDetailComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':requisitionId/new',\r\n        component: quotation_extended_update_component_1.QuotationExtendedUpdateComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: quotation_extended_update_component_1.QuotationExtendedUpdateComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: quotation_extended_update_component_1.QuotationExtendedUpdateComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.quotationExtendedPopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: quotation_1.QuotationDeletePopupComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\quotation-extended\\quotation-extended.route.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\quotation-extended\\quotation-extended.route.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { JhiPaginationUtil, JhiResolvePagingParams } from 'ng-jhipster';\r\nimport { UserRouteAccessService } from 'app/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { Quotation } from 'app/shared/model/quotation.model';\r\nimport { IQuotation } from 'app/shared/model/quotation.model';\r\nimport { QuotationDeletePopupComponent, QuotationDetailComponent, QuotationResolve, QuotationService } from 'app/entities/quotation';\r\nimport { QuotationExtendedComponent } from 'app/entities/quotation-extended/quotation-extended.component';\r\nimport { QuotationExtendedDetailComponent } from 'app/entities/quotation-extended/quotation-extended-detail.component';\r\nimport { QuotationExtendedUpdateComponent } from 'app/entities/quotation-extended/quotation-extended-update.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class QuotationExtendedResolve extends QuotationResolve {\r\n    constructor(public service: QuotationService) {\r\n        super(service);\r\n    }\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IQuotation> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        const requisitionId = route.params['requisitionId'] ? route.params['requisitionId'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<Quotation>) => response.ok),\r\n                map((quotation: HttpResponse<Quotation>) => quotation.body)\r\n            );\r\n        } else if (requisitionId) {\r\n            const quotation = new Quotation();\r\n            quotation.requisitionId = requisitionId;\r\n            return of(quotation);\r\n        }\r\n        return of(new Quotation());\r\n    }\r\n}\r\n\r\nexport const quotationExtendedRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: QuotationExtendedComponent,\r\n        resolve: {\r\n            pagingParams: JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            defaultSort: 'id,asc',\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':requisitionId/requisition',\r\n        component: QuotationExtendedComponent,\r\n        resolve: {\r\n            pagingParams: JhiResolvePagingParams,\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            defaultSort: 'id,asc',\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: QuotationExtendedDetailComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':requisitionId/new',\r\n        component: QuotationExtendedUpdateComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: QuotationExtendedUpdateComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: QuotationExtendedUpdateComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n\r\nexport const quotationExtendedPopupRoute: Routes = [\r\n    {\r\n        path: ':id/delete',\r\n        component: QuotationDeletePopupComponent,\r\n        resolve: {\r\n            quotation: QuotationExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Quotations'\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n"]}]}