{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\requisition-messages-extended\\requisition-messages-extended.route.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\requisition-messages-extended\\requisition-messages-extended.route.ts","mtime":1625565387697},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar requisition_messages_model_1 = require(\"app/shared/model/requisition-messages.model\");\r\nvar requisition_messages_extended_service_1 = require(\"./requisition-messages-extended.service\");\r\nvar requisition_messages_extended_component_1 = require(\"./requisition-messages-extended.component\");\r\nvar requisition_messages_extended_detail_component_1 = require(\"./requisition-messages-extended-detail.component\");\r\nvar requisition_messages_extended_update_component_1 = require(\"./requisition-messages-extended-update.component\");\r\nvar requisition_messages_1 = require(\"app/entities/requisition-messages\");\r\nvar RequisitionMessagesExtendedResolve = /** @class */ (function () {\r\n    function RequisitionMessagesExtendedResolve(service) {\r\n        this.service = service;\r\n    }\r\n    RequisitionMessagesExtendedResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        var requisitionId = route.params['requisitionId'] ? route.params['requisitionId'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (requisitionMessages) { return requisitionMessages.body; }));\r\n        }\r\n        else if (requisitionId) {\r\n            var requisitionMessages = new requisition_messages_model_1.RequisitionMessages();\r\n            requisitionMessages.requisitionId = requisitionId;\r\n            return rxjs_1.of(requisitionMessages);\r\n        }\r\n        return rxjs_1.of(new requisition_messages_model_1.RequisitionMessages());\r\n    };\r\n    var _a;\r\n    RequisitionMessagesExtendedResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof requisition_messages_extended_service_1.RequisitionMessagesExtendedService !== \"undefined\" && requisition_messages_extended_service_1.RequisitionMessagesExtendedService) === \"function\" ? _a : Object])\r\n    ], RequisitionMessagesExtendedResolve);\r\n    return RequisitionMessagesExtendedResolve;\r\n}());\r\nexports.RequisitionMessagesExtendedResolve = RequisitionMessagesExtendedResolve;\r\nexports.requisitionMessagesExtendedRoute = [\r\n    {\r\n        path: '',\r\n        component: requisition_messages_extended_component_1.RequisitionMessagesExtendedComponent,\r\n        resolve: {\r\n            pagingParams: ng_jhipster_1.JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            defaultSort: 'id,asc',\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: requisition_messages_extended_detail_component_1.RequisitionMessagesExtendedDetailComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: requisition_messages_extended_update_component_1.RequisitionMessagesExtendedUpdateComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':requisitionId/new',\r\n        component: requisition_messages_extended_update_component_1.RequisitionMessagesExtendedUpdateComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: requisition_messages_extended_update_component_1.RequisitionMessagesExtendedUpdateComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.requisitionMessagesExtendedPopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: requisition_messages_1.RequisitionMessagesDeletePopupComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\requisition-messages-extended\\requisition-messages-extended.route.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\requisition-messages-extended\\requisition-messages-extended.route.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { JhiPaginationUtil, JhiResolvePagingParams } from 'ng-jhipster';\r\nimport { UserRouteAccessService } from 'app/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { RequisitionMessages } from 'app/shared/model/requisition-messages.model';\r\nimport { RequisitionMessagesExtendedService } from './requisition-messages-extended.service';\r\nimport { RequisitionMessagesExtendedComponent } from './requisition-messages-extended.component';\r\nimport { RequisitionMessagesExtendedDetailComponent } from './requisition-messages-extended-detail.component';\r\nimport { RequisitionMessagesExtendedUpdateComponent } from './requisition-messages-extended-update.component';\r\nimport { IRequisitionMessages } from 'app/shared/model/requisition-messages.model';\r\nimport { RequisitionMessagesDeletePopupComponent } from 'app/entities/requisition-messages';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RequisitionMessagesExtendedResolve implements Resolve<IRequisitionMessages> {\r\n    constructor(private service: RequisitionMessagesExtendedService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IRequisitionMessages> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        const requisitionId = route.params['requisitionId'] ? route.params['requisitionId'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<RequisitionMessages>) => response.ok),\r\n                map((requisitionMessages: HttpResponse<RequisitionMessages>) => requisitionMessages.body)\r\n            );\r\n        } else if (requisitionId) {\r\n            const requisitionMessages = new RequisitionMessages();\r\n            requisitionMessages.requisitionId = requisitionId;\r\n            return of(requisitionMessages);\r\n        }\r\n        return of(new RequisitionMessages());\r\n    }\r\n}\r\n\r\nexport const requisitionMessagesExtendedRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: RequisitionMessagesExtendedComponent,\r\n        resolve: {\r\n            pagingParams: JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            defaultSort: 'id,asc',\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: RequisitionMessagesExtendedDetailComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: RequisitionMessagesExtendedUpdateComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':requisitionId/new',\r\n        component: RequisitionMessagesExtendedUpdateComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: RequisitionMessagesExtendedUpdateComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n\r\nexport const requisitionMessagesExtendedPopupRoute: Routes = [\r\n    {\r\n        path: ':id/delete',\r\n        component: RequisitionMessagesDeletePopupComponent,\r\n        resolve: {\r\n            requisitionMessages: RequisitionMessagesExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'RequisitionMessages'\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n"]}]}