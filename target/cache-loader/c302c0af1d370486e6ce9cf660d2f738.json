{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\requisition-voucher-relation\\requisition-voucher-relation.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\requisition-voucher-relation\\requisition-voucher-relation.service.ts","mtime":1625565387727},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar moment = require(\"moment\");\r\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar RequisitionVoucherRelationService = /** @class */ (function () {\r\n    function RequisitionVoucherRelationService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/requisition-voucher-relations';\r\n        this.resourceSearchUrl = app_constants_1.SERVER_API_URL + 'api/_search/requisition-voucher-relations';\r\n    }\r\n    RequisitionVoucherRelationService.prototype.create = function (requisitionVoucherRelation) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(requisitionVoucherRelation);\r\n        return this.http\r\n            .post(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    RequisitionVoucherRelationService.prototype.update = function (requisitionVoucherRelation) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(requisitionVoucherRelation);\r\n        return this.http\r\n            .put(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    RequisitionVoucherRelationService.prototype.find = function (id) {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + \"/\" + id, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    RequisitionVoucherRelationService.prototype.query = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    RequisitionVoucherRelationService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    RequisitionVoucherRelationService.prototype.search = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceSearchUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    RequisitionVoucherRelationService.prototype.convertDateFromClient = function (requisitionVoucherRelation) {\r\n        var copy = Object.assign({}, requisitionVoucherRelation, {\r\n            modifiedOn: requisitionVoucherRelation.modifiedOn != null && requisitionVoucherRelation.modifiedOn.isValid()\r\n                ? requisitionVoucherRelation.modifiedOn.format(input_constants_1.DATE_FORMAT)\r\n                : null\r\n        });\r\n        return copy;\r\n    };\r\n    RequisitionVoucherRelationService.prototype.convertDateFromServer = function (res) {\r\n        if (res.body) {\r\n            res.body.modifiedOn = res.body.modifiedOn != null ? moment(res.body.modifiedOn) : null;\r\n        }\r\n        return res;\r\n    };\r\n    RequisitionVoucherRelationService.prototype.convertDateArrayFromServer = function (res) {\r\n        if (res.body) {\r\n            res.body.forEach(function (requisitionVoucherRelation) {\r\n                requisitionVoucherRelation.modifiedOn =\r\n                    requisitionVoucherRelation.modifiedOn != null ? moment(requisitionVoucherRelation.modifiedOn) : null;\r\n            });\r\n        }\r\n        return res;\r\n    };\r\n    var _a;\r\n    RequisitionVoucherRelationService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], RequisitionVoucherRelationService);\r\n    return RequisitionVoucherRelationService;\r\n}());\r\nexports.RequisitionVoucherRelationService = RequisitionVoucherRelationService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\requisition-voucher-relation\\requisition-voucher-relation.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\requisition-voucher-relation\\requisition-voucher-relation.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IRequisitionVoucherRelation } from 'app/shared/model/requisition-voucher-relation.model';\r\n\r\ntype EntityResponseType = HttpResponse<IRequisitionVoucherRelation>;\r\ntype EntityArrayResponseType = HttpResponse<IRequisitionVoucherRelation[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RequisitionVoucherRelationService {\r\n    public resourceUrl = SERVER_API_URL + 'api/requisition-voucher-relations';\r\n    public resourceSearchUrl = SERVER_API_URL + 'api/_search/requisition-voucher-relations';\r\n\r\n    constructor(protected http: HttpClient) {}\r\n\r\n    create(requisitionVoucherRelation: IRequisitionVoucherRelation): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(requisitionVoucherRelation);\r\n        return this.http\r\n            .post<IRequisitionVoucherRelation>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(requisitionVoucherRelation: IRequisitionVoucherRelation): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(requisitionVoucherRelation);\r\n        return this.http\r\n            .put<IRequisitionVoucherRelation>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    find(id: number): Observable<EntityResponseType> {\r\n        return this.http\r\n            .get<IRequisitionVoucherRelation>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    query(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<IRequisitionVoucherRelation[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    search(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<IRequisitionVoucherRelation[]>(this.resourceSearchUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    protected convertDateFromClient(requisitionVoucherRelation: IRequisitionVoucherRelation): IRequisitionVoucherRelation {\r\n        const copy: IRequisitionVoucherRelation = Object.assign({}, requisitionVoucherRelation, {\r\n            modifiedOn:\r\n                requisitionVoucherRelation.modifiedOn != null && requisitionVoucherRelation.modifiedOn.isValid()\r\n                    ? requisitionVoucherRelation.modifiedOn.format(DATE_FORMAT)\r\n                    : null\r\n        });\r\n        return copy;\r\n    }\r\n\r\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n        if (res.body) {\r\n            res.body.modifiedOn = res.body.modifiedOn != null ? moment(res.body.modifiedOn) : null;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n        if (res.body) {\r\n            res.body.forEach((requisitionVoucherRelation: IRequisitionVoucherRelation) => {\r\n                requisitionVoucherRelation.modifiedOn =\r\n                    requisitionVoucherRelation.modifiedOn != null ? moment(requisitionVoucherRelation.modifiedOn) : null;\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n}\r\n"]}]}