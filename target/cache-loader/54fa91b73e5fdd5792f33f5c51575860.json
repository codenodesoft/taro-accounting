{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\predefined-narration\\predefined-narration.route.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\predefined-narration\\predefined-narration.route.ts","mtime":1625565387420},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar predefined_narration_model_1 = require(\"app/shared/model/predefined-narration.model\");\r\nvar predefined_narration_service_1 = require(\"./predefined-narration.service\");\r\nvar predefined_narration_component_1 = require(\"./predefined-narration.component\");\r\nvar predefined_narration_detail_component_1 = require(\"./predefined-narration-detail.component\");\r\nvar predefined_narration_update_component_1 = require(\"./predefined-narration-update.component\");\r\nvar predefined_narration_delete_dialog_component_1 = require(\"./predefined-narration-delete-dialog.component\");\r\nvar PredefinedNarrationResolve = /** @class */ (function () {\r\n    function PredefinedNarrationResolve(service) {\r\n        this.service = service;\r\n    }\r\n    PredefinedNarrationResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (predefinedNarration) { return predefinedNarration.body; }));\r\n        }\r\n        return rxjs_1.of(new predefined_narration_model_1.PredefinedNarration());\r\n    };\r\n    var _a;\r\n    PredefinedNarrationResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof predefined_narration_service_1.PredefinedNarrationService !== \"undefined\" && predefined_narration_service_1.PredefinedNarrationService) === \"function\" ? _a : Object])\r\n    ], PredefinedNarrationResolve);\r\n    return PredefinedNarrationResolve;\r\n}());\r\nexports.PredefinedNarrationResolve = PredefinedNarrationResolve;\r\nexports.predefinedNarrationRoute = [\r\n    {\r\n        path: '',\r\n        component: predefined_narration_component_1.PredefinedNarrationComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: predefined_narration_detail_component_1.PredefinedNarrationDetailComponent,\r\n        resolve: {\r\n            predefinedNarration: PredefinedNarrationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: predefined_narration_update_component_1.PredefinedNarrationUpdateComponent,\r\n        resolve: {\r\n            predefinedNarration: PredefinedNarrationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: predefined_narration_update_component_1.PredefinedNarrationUpdateComponent,\r\n        resolve: {\r\n            predefinedNarration: PredefinedNarrationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.predefinedNarrationPopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: predefined_narration_delete_dialog_component_1.PredefinedNarrationDeletePopupComponent,\r\n        resolve: {\r\n            predefinedNarration: PredefinedNarrationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\predefined-narration\\predefined-narration.route.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\predefined-narration\\predefined-narration.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAAsC;AACtC,4CAA6C;AAC7C,0FAAkF;AAClF,+EAA4E;AAC5E,mFAAgF;AAChF,iGAA6F;AAC7F,iGAA6F;AAC7F,+GAAyG;AAIzG;IACI,oCAAoB,OAAmC;QAAnC,YAAO,GAAP,OAAO,CAA4B;IAAG,CAAC;IAE3D,4CAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7B,kBAAM,CAAC,UAAC,QAA2C,IAAK,OAAA,QAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,EACpE,eAAG,CAAC,UAAC,mBAAsD,IAAK,OAAA,mBAAmB,CAAC,IAAI,EAAxB,CAAwB,CAAC,CAC5F,CAAC;SACL;QACD,OAAO,SAAE,CAAC,IAAI,gDAAmB,EAAE,CAAC,CAAC;IACzC,CAAC;;IAZQ,0BAA0B;QADtC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,yDAA0B,oBAA1B,yDAA0B;OAD9C,0BAA0B,CAatC;IAAD,iCAAC;CAAA,AAbD,IAaC;AAbY,gEAA0B;AAe1B,QAAA,wBAAwB,GAAW;IAC5C;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAA4B;QACvC,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,sBAAsB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0EAAkC;QAC7C,OAAO,EAAE;YACL,mBAAmB,EAAE,0BAA0B;SAClD;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,sBAAsB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,0EAAkC;QAC7C,OAAO,EAAE;YACL,mBAAmB,EAAE,0BAA0B;SAClD;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,sBAAsB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0EAAkC;QAC7C,OAAO,EAAE;YACL,mBAAmB,EAAE,0BAA0B;SAClD;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,sBAAsB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,6BAA6B,GAAW;IACjD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,sFAAuC;QAClD,OAAO,EAAE;YACL,mBAAmB,EAAE,0BAA0B;SAClD;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,sBAAsB;SACpC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from 'app/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { PredefinedNarration } from 'app/shared/model/predefined-narration.model';\r\nimport { PredefinedNarrationService } from './predefined-narration.service';\r\nimport { PredefinedNarrationComponent } from './predefined-narration.component';\r\nimport { PredefinedNarrationDetailComponent } from './predefined-narration-detail.component';\r\nimport { PredefinedNarrationUpdateComponent } from './predefined-narration-update.component';\r\nimport { PredefinedNarrationDeletePopupComponent } from './predefined-narration-delete-dialog.component';\r\nimport { IPredefinedNarration } from 'app/shared/model/predefined-narration.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PredefinedNarrationResolve implements Resolve<IPredefinedNarration> {\r\n    constructor(private service: PredefinedNarrationService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IPredefinedNarration> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<PredefinedNarration>) => response.ok),\r\n                map((predefinedNarration: HttpResponse<PredefinedNarration>) => predefinedNarration.body)\r\n            );\r\n        }\r\n        return of(new PredefinedNarration());\r\n    }\r\n}\r\n\r\nexport const predefinedNarrationRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: PredefinedNarrationComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: PredefinedNarrationDetailComponent,\r\n        resolve: {\r\n            predefinedNarration: PredefinedNarrationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: PredefinedNarrationUpdateComponent,\r\n        resolve: {\r\n            predefinedNarration: PredefinedNarrationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: PredefinedNarrationUpdateComponent,\r\n        resolve: {\r\n            predefinedNarration: PredefinedNarrationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n\r\nexport const predefinedNarrationPopupRoute: Routes = [\r\n    {\r\n        path: ':id/delete',\r\n        component: PredefinedNarrationDeletePopupComponent,\r\n        resolve: {\r\n            predefinedNarration: PredefinedNarrationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'PredefinedNarrations'\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n"]}]}