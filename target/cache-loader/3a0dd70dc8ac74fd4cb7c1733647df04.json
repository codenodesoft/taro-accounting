{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\shared\\model\\account-balance.model.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\shared\\model\\account-balance.model.ts","mtime":1625565388345},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar BalanceType;\r\n(function (BalanceType) {\r\n    BalanceType[\"DEBIT\"] = \"DEBIT\";\r\n    BalanceType[\"CREDIT\"] = \"CREDIT\";\r\n})(BalanceType = exports.BalanceType || (exports.BalanceType = {}));\r\nvar AccountBalance = /** @class */ (function () {\r\n    function AccountBalance(id, yearOpenBalance, yearOpenBalanceType, totDebitTrans, totCreditTrans, modifiedOn, modifiedBy, financialAccountYearDurationStr, financialAccountYearId, accountName, accountId) {\r\n        this.id = id;\r\n        this.yearOpenBalance = yearOpenBalance;\r\n        this.yearOpenBalanceType = yearOpenBalanceType;\r\n        this.totDebitTrans = totDebitTrans;\r\n        this.totCreditTrans = totCreditTrans;\r\n        this.modifiedOn = modifiedOn;\r\n        this.modifiedBy = modifiedBy;\r\n        this.financialAccountYearDurationStr = financialAccountYearDurationStr;\r\n        this.financialAccountYearId = financialAccountYearId;\r\n        this.accountName = accountName;\r\n        this.accountId = accountId;\r\n    }\r\n    return AccountBalance;\r\n}());\r\nexports.AccountBalance = AccountBalance;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\shared\\model\\account-balance.model.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\shared\\model\\account-balance.model.ts"],"names":[],"mappings":";;AAEA,IAAkB,WAGjB;AAHD,WAAkB,WAAW;IACzB,8BAAe,CAAA;IACf,gCAAiB,CAAA;AACrB,CAAC,EAHiB,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAG5B;AAgBD;IACI,wBACW,EAAW,EACX,eAAwB,EACxB,mBAAiC,EACjC,aAAsB,EACtB,cAAuB,EACvB,UAAmB,EACnB,UAAmB,EACnB,+BAAwC,EACxC,sBAA+B,EAC/B,WAAoB,EACpB,SAAkB;QAVlB,OAAE,GAAF,EAAE,CAAS;QACX,oBAAe,GAAf,eAAe,CAAS;QACxB,wBAAmB,GAAnB,mBAAmB,CAAc;QACjC,kBAAa,GAAb,aAAa,CAAS;QACtB,mBAAc,GAAd,cAAc,CAAS;QACvB,eAAU,GAAV,UAAU,CAAS;QACnB,eAAU,GAAV,UAAU,CAAS;QACnB,oCAA+B,GAA/B,+BAA+B,CAAS;QACxC,2BAAsB,GAAtB,sBAAsB,CAAS;QAC/B,gBAAW,GAAX,WAAW,CAAS;QACpB,cAAS,GAAT,SAAS,CAAS;IAC1B,CAAC;IACR,qBAAC;AAAD,CAAC,AAdD,IAcC;AAdY,wCAAc","sourcesContent":["import { Moment } from 'moment';\r\n\r\nexport const enum BalanceType {\r\n    DEBIT = 'DEBIT',\r\n    CREDIT = 'CREDIT'\r\n}\r\n\r\nexport interface IAccountBalance {\r\n    id?: number;\r\n    yearOpenBalance?: number;\r\n    yearOpenBalanceType?: BalanceType;\r\n    totDebitTrans?: number;\r\n    totCreditTrans?: number;\r\n    modifiedOn?: Moment;\r\n    modifiedBy?: string;\r\n    financialAccountYearDurationStr?: string;\r\n    financialAccountYearId?: number;\r\n    accountName?: string;\r\n    accountId?: number;\r\n}\r\n\r\nexport class AccountBalance implements IAccountBalance {\r\n    constructor(\r\n        public id?: number,\r\n        public yearOpenBalance?: number,\r\n        public yearOpenBalanceType?: BalanceType,\r\n        public totDebitTrans?: number,\r\n        public totCreditTrans?: number,\r\n        public modifiedOn?: Moment,\r\n        public modifiedBy?: string,\r\n        public financialAccountYearDurationStr?: string,\r\n        public financialAccountYearId?: number,\r\n        public accountName?: string,\r\n        public accountId?: number\r\n    ) {}\r\n}\r\n"]}]}