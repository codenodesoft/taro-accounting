{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\admin\\user-management\\user-management.route.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\admin\\user-management\\user-management.route.ts","mtime":1625565386439},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar user_management_component_1 = require(\"./user-management.component\");\r\nvar user_management_detail_component_1 = require(\"./user-management-detail.component\");\r\nvar user_management_update_component_1 = require(\"./user-management-update.component\");\r\nvar employee_1 = require(\"app/entities/employee\");\r\nvar UserResolve = /** @class */ (function () {\r\n    function UserResolve(accountService) {\r\n        this.accountService = accountService;\r\n    }\r\n    UserResolve.prototype.canActivate = function () {\r\n        var _this = this;\r\n        return this.accountService.identity().then(function (account) { return _this.accountService.hasAnyAuthority(['ROLE_EMPLOYEE_MANAGEMENT']); });\r\n    };\r\n    var _a;\r\n    UserResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _a : Object])\r\n    ], UserResolve);\r\n    return UserResolve;\r\n}());\r\nexports.UserResolve = UserResolve;\r\nvar UserMgmtResolve = /** @class */ (function () {\r\n    function UserMgmtResolve(service, employeeService) {\r\n        this.service = service;\r\n        this.employeeService = employeeService;\r\n    }\r\n    UserMgmtResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['login'] ? route.params['login'] : null;\r\n        var employeeId = route.params['employeeId'] ? route.params['employeeId'] : null;\r\n        if (id) {\r\n            return this.service.find(id);\r\n        }\r\n        else if (employeeId) {\r\n            var user = new core_2.User();\r\n            user.login = employeeId;\r\n            return user;\r\n        }\r\n        return new core_2.User();\r\n    };\r\n    var _b, _c;\r\n    UserMgmtResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _b : Object, typeof (_c = typeof employee_1.EmployeeService !== \"undefined\" && employee_1.EmployeeService) === \"function\" ? _c : Object])\r\n    ], UserMgmtResolve);\r\n    return UserMgmtResolve;\r\n}());\r\nexports.UserMgmtResolve = UserMgmtResolve;\r\nexports.userMgmtRoute = [\r\n    {\r\n        path: 'user-management',\r\n        component: user_management_component_1.UserMgmtComponent,\r\n        resolve: {\r\n            pagingParams: ng_jhipster_1.JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            pageTitle: 'Users',\r\n            defaultSort: 'id,asc',\r\n            breadcrumb: 'User Management'\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/:login/view',\r\n        component: user_management_detail_component_1.UserMgmtDetailComponent,\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        },\r\n        data: {\r\n            pageTitle: 'Users',\r\n            breadcrumb: 'User Details'\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/new',\r\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\r\n        data: {\r\n            breadcrumb: 'New User'\r\n        },\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        }\r\n    },\r\n    {\r\n        path: ':employeeId/user-management/new',\r\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\r\n        data: {\r\n            breadcrumb: 'New User'\r\n        },\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/:login/edit',\r\n        component: user_management_update_component_1.UserMgmtUpdateComponent,\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        },\r\n        data: {\r\n            breadcrumb: 'Edit User'\r\n        }\r\n    }\r\n];\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\admin\\user-management\\user-management.route.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\admin\\user-management\\user-management.route.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes, CanActivate } from '@angular/router';\r\nimport { JhiPaginationUtil, JhiResolvePagingParams } from 'ng-jhipster';\r\n\r\nimport { AccountService, IUser, User, UserService } from 'app/core';\r\nimport { UserMgmtComponent } from './user-management.component';\r\nimport { UserMgmtDetailComponent } from './user-management-detail.component';\r\nimport { UserMgmtUpdateComponent } from './user-management-update.component';\r\nimport { EmployeeService } from 'app/entities/employee';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { IEmployee } from 'app/shared/model/employee.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserResolve implements CanActivate {\r\n    constructor(private accountService: AccountService) {}\r\n\r\n    canActivate() {\r\n        return this.accountService.identity().then(account => this.accountService.hasAnyAuthority(['ROLE_EMPLOYEE_MANAGEMENT']));\r\n    }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserMgmtResolve implements Resolve<any> {\r\n    constructor(private service: UserService, private employeeService: EmployeeService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const id = route.params['login'] ? route.params['login'] : null;\r\n        const employeeId = route.params['employeeId'] ? route.params['employeeId'] : null;\r\n        if (id) {\r\n            return this.service.find(id);\r\n        } else if (employeeId) {\r\n            const user: IUser = new User();\r\n            user.login = employeeId;\r\n            return user;\r\n        }\r\n        return new User();\r\n    }\r\n}\r\n\r\nexport const userMgmtRoute: Routes = [\r\n    {\r\n        path: 'user-management',\r\n        component: UserMgmtComponent,\r\n        resolve: {\r\n            pagingParams: JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            pageTitle: 'Users',\r\n            defaultSort: 'id,asc',\r\n            breadcrumb: 'User Management'\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/:login/view',\r\n        component: UserMgmtDetailComponent,\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        },\r\n        data: {\r\n            pageTitle: 'Users',\r\n            breadcrumb: 'User Details'\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/new',\r\n        component: UserMgmtUpdateComponent,\r\n        data: {\r\n            breadcrumb: 'New User'\r\n        },\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        }\r\n    },\r\n    {\r\n        path: ':employeeId/user-management/new',\r\n        component: UserMgmtUpdateComponent,\r\n        data: {\r\n            breadcrumb: 'New User'\r\n        },\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        }\r\n    },\r\n    {\r\n        path: 'user-management/:login/edit',\r\n        component: UserMgmtUpdateComponent,\r\n        resolve: {\r\n            user: UserMgmtResolve\r\n        },\r\n        data: {\r\n            breadcrumb: 'Edit User'\r\n        }\r\n    }\r\n];\r\n"]}]}