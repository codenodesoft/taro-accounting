{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\over-time-extended\\over-time-update-extended.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\over-time-extended\\over-time-update-extended.component.ts","mtime":1625565387344},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar over_time_extended_service_1 = require(\"./over-time-extended.service\");\r\nvar over_time_1 = require(\"app/entities/over-time\");\r\nvar core_2 = require(\"app/core\");\r\nvar manager_1 = require(\"app/entities/manager\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar employee_extended_1 = require(\"app/entities/employee-extended\");\r\nvar OverTimeUpdateExtendedComponent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OverTimeUpdateExtendedComponent, _super);\r\n    function OverTimeUpdateExtendedComponent(jhiAlertService, overTimeService, employeeService, activatedRoute, accountService, managerService) {\r\n        var _this = _super.call(this, jhiAlertService, overTimeService, employeeService, activatedRoute) || this;\r\n        _this.jhiAlertService = jhiAlertService;\r\n        _this.overTimeService = overTimeService;\r\n        _this.employeeService = employeeService;\r\n        _this.activatedRoute = activatedRoute;\r\n        _this.accountService = accountService;\r\n        _this.managerService = managerService;\r\n        return _this;\r\n    }\r\n    OverTimeUpdateExtendedComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var overTime = _a.overTime;\r\n            _this.overTime = overTime;\r\n            _this.fromTime = _this.overTime.fromTime != null ? _this.overTime.fromTime.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n            _this.toTime = _this.overTime.toTime != null ? _this.overTime.toTime.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n            _this.createdOn = _this.overTime.createdOn != null ? _this.overTime.createdOn.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n            _this.updatedOn = _this.overTime.updatedOn != null ? _this.overTime.updatedOn.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n        });\r\n        this.employeeService\r\n            .query()\r\n            .pipe(operators_1.filter(function (mayBeOk) { return mayBeOk.ok; }), operators_1.map(function (response) { return response.body; }))\r\n            .subscribe(function (res) { return (_this.employees = res); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    var _a, _b, _c, _d, _e, _f;\r\n    OverTimeUpdateExtendedComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-over-time-update-extended',\r\n            templateUrl: './over-time-update-extended.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof over_time_extended_service_1.OverTimeExtendedService !== \"undefined\" && over_time_extended_service_1.OverTimeExtendedService) === \"function\" ? _b : Object, typeof (_c = typeof employee_extended_1.EmployeeExtendedService !== \"undefined\" && employee_extended_1.EmployeeExtendedService) === \"function\" ? _c : Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _d : Object, typeof (_e = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _e : Object, typeof (_f = typeof manager_1.ManagerService !== \"undefined\" && manager_1.ManagerService) === \"function\" ? _f : Object])\r\n    ], OverTimeUpdateExtendedComponent);\r\n    return OverTimeUpdateExtendedComponent;\r\n}(over_time_1.OverTimeUpdateComponent));\r\nexports.OverTimeUpdateExtendedComponent = OverTimeUpdateExtendedComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\over-time-extended\\over-time-update-extended.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\over-time-extended\\over-time-update-extended.component.ts"],"names":[],"mappings":";;;AAAA,sCAA0C;AAC1C,0CAAiD;AAEjD,wEAAwE;AACxE,2CAA8C;AAC9C,2EAAuE;AAEvE,oDAAiE;AAEjE,iCAAmD;AACnD,gDAAsD;AACtD,4CAA6C;AAC7C,oEAAyE;AAMzE;IAAqD,2DAAuB;IAKxE,yCACc,eAAgC,EAChC,eAAwC,EACxC,eAAwC,EACxC,cAA8B,EAC9B,cAA8B,EAC9B,cAA8B;QAN5C,YAQI,kBAAM,eAAe,EAAE,eAAe,EAAE,eAAe,EAAE,cAAc,CAAC,SAC3E;QARa,qBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAe,GAAf,eAAe,CAAyB;QACxC,qBAAe,GAAf,eAAe,CAAyB;QACxC,oBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAc,GAAd,cAAc,CAAgB;;IAG5C,CAAC;IAED,kDAAQ,GAAR;QAAA,iBAgBC;QAfG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,EAAY;gBAAV,sBAAQ;YAC1C,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,kCAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACxG,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,kCAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAClG,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,kCAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3G,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,kCAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/G,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe;aACf,KAAK,EAAE;aACP,IAAI,CACD,kBAAM,CAAC,UAAC,OAAkC,IAAK,OAAA,OAAO,CAAC,EAAE,EAAV,CAAU,CAAC,EAC1D,eAAG,CAAC,UAAC,QAAmC,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAb,CAAa,CAAC,CAC9D;aACA,SAAS,CAAC,UAAC,GAAgB,IAAK,OAAA,CAAC,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,EAAtB,CAAsB,EAAE,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CAAC,CAAC;IACxH,CAAC;;IAhCQ,+BAA+B;QAJ3C,gBAAS,CAAC;YACP,QAAQ,EAAE,+BAA+B;YACzC,WAAW,EAAE,4CAA4C;SAC5D,CAAC;qEAOiC,6BAAe,oBAAf,6BAAe,oDACf,oDAAuB,oBAAvB,oDAAuB,oDACvB,2CAAuB,oBAAvB,2CAAuB,oDACxB,uBAAc,oBAAd,uBAAc,oDACd,qBAAc,oBAAd,qBAAc,oDACd,wBAAc,oBAAd,wBAAc;OAXnC,+BAA+B,CAiC3C;IAAD,sCAAC;CAAA,AAjCD,CAAqD,mCAAuB,GAiC3E;AAjCY,0EAA+B","sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { JhiAlertService } from 'ng-jhipster';\r\nimport { OverTimeExtendedService } from './over-time-extended.service';\r\nimport { IEmployee } from 'app/shared/model/employee.model';\r\nimport { OverTimeUpdateComponent } from 'app/entities/over-time';\r\nimport { IManager } from 'app/shared/model/manager.model';\r\nimport { Account, AccountService } from 'app/core';\r\nimport { ManagerService } from 'app/entities/manager';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { EmployeeExtendedService } from 'app/entities/employee-extended';\r\n\r\n@Component({\r\n    selector: 'jhi-over-time-update-extended',\r\n    templateUrl: './over-time-update-extended.component.html'\r\n})\r\nexport class OverTimeUpdateExtendedComponent extends OverTimeUpdateComponent {\r\n    currentAccount: Account;\r\n    currentEmployee: IEmployee;\r\n    employeesUnderSupervisor: IManager[];\r\n\r\n    constructor(\r\n        protected jhiAlertService: JhiAlertService,\r\n        protected overTimeService: OverTimeExtendedService,\r\n        protected employeeService: EmployeeExtendedService,\r\n        protected activatedRoute: ActivatedRoute,\r\n        protected accountService: AccountService,\r\n        protected managerService: ManagerService\r\n    ) {\r\n        super(jhiAlertService, overTimeService, employeeService, activatedRoute);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ overTime }) => {\r\n            this.overTime = overTime;\r\n            this.fromTime = this.overTime.fromTime != null ? this.overTime.fromTime.format(DATE_TIME_FORMAT) : null;\r\n            this.toTime = this.overTime.toTime != null ? this.overTime.toTime.format(DATE_TIME_FORMAT) : null;\r\n            this.createdOn = this.overTime.createdOn != null ? this.overTime.createdOn.format(DATE_TIME_FORMAT) : null;\r\n            this.updatedOn = this.overTime.updatedOn != null ? this.overTime.updatedOn.format(DATE_TIME_FORMAT) : null;\r\n        });\r\n        this.employeeService\r\n            .query()\r\n            .pipe(\r\n                filter((mayBeOk: HttpResponse<IEmployee[]>) => mayBeOk.ok),\r\n                map((response: HttpResponse<IEmployee[]>) => response.body)\r\n            )\r\n            .subscribe((res: IEmployee[]) => (this.employees = res), (res: HttpErrorResponse) => this.onError(res.message));\r\n    }\r\n}\r\n"]}]}