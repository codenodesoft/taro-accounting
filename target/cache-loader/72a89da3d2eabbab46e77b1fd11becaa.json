{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\core\\login\\login.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\core\\login\\login.service.ts","mtime":1625565386457},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar account_service_1 = require(\"app/core/auth/account.service\");\r\nvar auth_session_service_1 = require(\"app/core/auth/auth-session.service\");\r\nvar tracker_service_1 = require(\"app/core/tracker/tracker.service\");\r\nvar LoginService = /** @class */ (function () {\r\n    function LoginService(accountService, trackerService, authServerProvider) {\r\n        this.accountService = accountService;\r\n        this.trackerService = trackerService;\r\n        this.authServerProvider = authServerProvider;\r\n    }\r\n    LoginService.prototype.login = function (credentials, callback) {\r\n        var _this = this;\r\n        var cb = callback || function () { };\r\n        return new Promise(function (resolve, reject) {\r\n            _this.authServerProvider.login(credentials).subscribe(function (data) {\r\n                _this.accountService.identity(true).then(function (account) {\r\n                    _this.trackerService.sendActivity();\r\n                    resolve(data);\r\n                });\r\n                return cb();\r\n            }, function (err) {\r\n                _this.logout();\r\n                reject(err);\r\n                return cb(err);\r\n            });\r\n        });\r\n    };\r\n    LoginService.prototype.logout = function () {\r\n        this.authServerProvider.logout().subscribe();\r\n        this.accountService.authenticate(null);\r\n    };\r\n    var _a, _b, _c;\r\n    LoginService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof account_service_1.AccountService !== \"undefined\" && account_service_1.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof tracker_service_1.JhiTrackerService !== \"undefined\" && tracker_service_1.JhiTrackerService) === \"function\" ? _b : Object, typeof (_c = typeof auth_session_service_1.AuthServerProvider !== \"undefined\" && auth_session_service_1.AuthServerProvider) === \"function\" ? _c : Object])\r\n    ], LoginService);\r\n    return LoginService;\r\n}());\r\nexports.LoginService = LoginService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\core\\login\\login.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\core\\login\\login.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAE3C,iEAA+D;AAC/D,2EAAwE;AACxE,oEAAqE;AAGrE;IACI,sBACY,cAA8B,EAC9B,cAAiC,EACjC,kBAAsC;QAFtC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAmB;QACjC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC/C,CAAC;IAEJ,4BAAK,GAAL,UAAM,WAAW,EAAE,QAAS;QAA5B,iBAmBC;QAlBG,IAAM,EAAE,GAAG,QAAQ,IAAI,cAAY,CAAC,CAAC;QAErC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAChD,UAAA,IAAI;gBACA,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;oBAC3C,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;oBACnC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;gBACH,OAAO,EAAE,EAAE,CAAC;YAChB,CAAC,EACD,UAAA,GAAG;gBACC,KAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6BAAM,GAAN;QACI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,CAAC;QAC7C,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;;IA/BQ,YAAY;QADxB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAGH,gCAAc,oBAAd,gCAAc,oDACd,mCAAiB,oBAAjB,mCAAiB,oDACb,yCAAkB,oBAAlB,yCAAkB;OAJzC,YAAY,CAgCxB;IAAD,mBAAC;CAAA,AAhCD,IAgCC;AAhCY,oCAAY","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { AuthServerProvider } from 'app/core/auth/auth-session.service';\r\nimport { JhiTrackerService } from 'app/core/tracker/tracker.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n    constructor(\r\n        private accountService: AccountService,\r\n        private trackerService: JhiTrackerService,\r\n        private authServerProvider: AuthServerProvider\r\n    ) {}\r\n\r\n    login(credentials, callback?) {\r\n        const cb = callback || function() {};\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.authServerProvider.login(credentials).subscribe(\r\n                data => {\r\n                    this.accountService.identity(true).then(account => {\r\n                        this.trackerService.sendActivity();\r\n                        resolve(data);\r\n                    });\r\n                    return cb();\r\n                },\r\n                err => {\r\n                    this.logout();\r\n                    reject(err);\r\n                    return cb(err);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        this.authServerProvider.logout().subscribe();\r\n        this.accountService.authenticate(null);\r\n    }\r\n}\r\n"]}]}