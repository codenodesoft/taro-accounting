{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\monthly-salary-extended\\monthly-salary-extended.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\monthly-salary-extended\\monthly-salary-extended.service.ts","mtime":1625565387268},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar monthly_salary_1 = require(\"app/entities/monthly-salary\");\r\nvar SoptorshiUtil_1 = require(\"app/shared/util/SoptorshiUtil\");\r\nvar MonthlySalaryExtendedService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MonthlySalaryExtendedService, _super);\r\n    function MonthlySalaryExtendedService(http) {\r\n        var _this = _super.call(this, http) || this;\r\n        _this.http = http;\r\n        _this.resourceUrlExtended = app_constants_1.SERVER_API_URL + 'api/extended/monthly-salaries';\r\n        return _this;\r\n    }\r\n    MonthlySalaryExtendedService.prototype.createSalaryVouchers = function (officeId, year, monthType) {\r\n        return this.http\r\n            .get(this.resourceUrlExtended + \"/\" + officeId + \"/\" + year + \"/\" + monthType, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return res; }));\r\n    };\r\n    MonthlySalaryExtendedService.prototype.createPayrollReport = function (officeId, year, monthType) {\r\n        this.http\r\n            .get(this.resourceUrlExtended + \"/salary-report/\" + officeId + \"/\" + year + \"/\" + monthType, { observe: 'response' })\r\n            .subscribe(function (data) {\r\n            SoptorshiUtil_1.SoptorshiUtil.writeFileContent(data, 'application/pdf', 'Salary Report');\r\n        });\r\n    };\r\n    MonthlySalaryExtendedService.prototype.getTotalWorkingDays = function (month, year) {\r\n        return this.http\r\n            .get(app_constants_1.SERVER_API_URL + 'api/extended/payroll-support/totalWorkDays/month/' + month + '/year/' + year, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return res; }));\r\n    };\r\n    MonthlySalaryExtendedService.prototype.getTotalPresent = function (employeeId, month, year) {\r\n        return this.http\r\n            .get(app_constants_1.SERVER_API_URL + 'api/extended/payroll-support/totalPresent/employeeId/' + employeeId + '/month/' + month + '/year/' + year, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return res; }));\r\n    };\r\n    MonthlySalaryExtendedService.prototype.getTotalPresentWithoutPay = function (employeeId, month, year) {\r\n        return this.http\r\n            .get(app_constants_1.SERVER_API_URL +\r\n            'api/extended/payroll-support/totalPresentWithoutPay/employeeId/' +\r\n            employeeId +\r\n            '/month/' +\r\n            month +\r\n            '/year/' +\r\n            year, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return res; }));\r\n    };\r\n    var _a;\r\n    MonthlySalaryExtendedService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], MonthlySalaryExtendedService);\r\n    return MonthlySalaryExtendedService;\r\n}(monthly_salary_1.MonthlySalaryService));\r\nexports.MonthlySalaryExtendedService = MonthlySalaryExtendedService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\monthly-salary-extended\\monthly-salary-extended.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\monthly-salary-extended\\monthly-salary-extended.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAgE;AAIhE,4CAAqC;AAErC,mDAAmD;AAGnD,8DAAmE;AACnE,+DAA8D;AAM9D;IAAkD,wDAAoB;IAGlE,sCAAsB,IAAgB;QAAtC,YACI,kBAAM,IAAI,CAAC,SACd;QAFqB,UAAI,GAAJ,IAAI,CAAY;QAF/B,yBAAmB,GAAG,8BAAc,GAAG,+BAA+B,CAAC;;IAI9E,CAAC;IAED,2DAAoB,GAApB,UAAqB,QAAgB,EAAE,IAAY,EAAE,SAAoB;QACrE,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAoB,IAAI,CAAC,mBAAmB,SAAI,QAAQ,SAAI,IAAI,SAAI,SAAW,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC5G,IAAI,CAAC,eAAG,CAAC,UAAC,GAAuB,IAAK,OAAA,GAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,0DAAmB,GAAnB,UAAoB,QAAgB,EAAE,IAAY,EAAE,SAAoB;QACpE,IAAI,CAAC,IAAI;aACJ,GAAG,CAAI,IAAI,CAAC,mBAAmB,uBAAkB,QAAQ,SAAI,IAAI,SAAI,SAAW,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC1G,SAAS,CAAC,UAAC,IAAS;YACjB,6BAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,iBAAiB,EAAE,eAAe,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACX,CAAC;IAED,0DAAmB,GAAnB,UAAoB,KAAgB,EAAE,IAAY;QAC9C,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAC,8BAAc,GAAG,mDAAmD,GAAG,KAAK,GAAG,QAAQ,GAAG,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC5H,IAAI,CAAC,eAAG,CAAC,UAAC,GAAyB,IAAK,OAAA,GAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,sDAAe,GAAf,UAAgB,UAAkB,EAAE,KAAgB,EAAE,IAAY;QAC9D,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CACA,8BAAc,GAAG,uDAAuD,GAAG,UAAU,GAAG,SAAS,GAAG,KAAK,GAAG,QAAQ,GAAG,IAAI,EAC3H,EAAE,OAAO,EAAE,UAAU,EAAE,CAC1B;aACA,IAAI,CAAC,eAAG,CAAC,UAAC,GAAyB,IAAK,OAAA,GAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,gEAAyB,GAAzB,UAA0B,UAAkB,EAAE,KAAgB,EAAE,IAAY;QACxE,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CACA,8BAAc;YACV,iEAAiE;YACjE,UAAU;YACV,SAAS;YACT,KAAK;YACL,QAAQ;YACR,IAAI,EACR,EAAE,OAAO,EAAE,UAAU,EAAE,CAC1B;aACA,IAAI,CAAC,eAAG,CAAC,UAAC,GAAyB,IAAK,OAAA,GAAG,EAAH,CAAG,CAAC,CAAC,CAAC;IACvD,CAAC;;IAjDQ,4BAA4B;QADxC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAIH,iBAAU,oBAAV,iBAAU;OAH7B,4BAA4B,CAkDxC;IAAD,mCAAC;CAAA,AAlDD,CAAkD,qCAAoB,GAkDrE;AAlDY,oEAA4B","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IMonthlySalary, MonthType } from 'app/shared/model/monthly-salary.model';\r\nimport { MonthlySalaryService } from 'app/entities/monthly-salary';\r\nimport { SoptorshiUtil } from 'app/shared/util/SoptorshiUtil';\r\n\r\ntype EntityResponseType = HttpResponse<IMonthlySalary>;\r\ntype EntityArrayResponseType = HttpResponse<IMonthlySalary[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MonthlySalaryExtendedService extends MonthlySalaryService {\r\n    public resourceUrlExtended = SERVER_API_URL + 'api/extended/monthly-salaries';\r\n\r\n    constructor(protected http: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    createSalaryVouchers(officeId: number, year: number, monthType: MonthType): Observable<EntityResponseType> {\r\n        return this.http\r\n            .get<IMonthlySalary>(`${this.resourceUrlExtended}/${officeId}/${year}/${monthType}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => res));\r\n    }\r\n\r\n    createPayrollReport(officeId: number, year: number, monthType: MonthType): void {\r\n        this.http\r\n            .get(`${this.resourceUrlExtended}/salary-report/${officeId}/${year}/${monthType}`, { observe: 'response' })\r\n            .subscribe((data: any) => {\r\n                SoptorshiUtil.writeFileContent(data, 'application/pdf', 'Salary Report');\r\n            });\r\n    }\r\n\r\n    getTotalWorkingDays(month: MonthType, year: number): Observable<HttpResponse<number>> {\r\n        return this.http\r\n            .get(SERVER_API_URL + 'api/extended/payroll-support/totalWorkDays/month/' + month + '/year/' + year, { observe: 'response' })\r\n            .pipe(map((res: HttpResponse<number>) => res));\r\n    }\r\n\r\n    getTotalPresent(employeeId: number, month: MonthType, year: number): Observable<HttpResponse<number>> {\r\n        return this.http\r\n            .get(\r\n                SERVER_API_URL + 'api/extended/payroll-support/totalPresent/employeeId/' + employeeId + '/month/' + month + '/year/' + year,\r\n                { observe: 'response' }\r\n            )\r\n            .pipe(map((res: HttpResponse<number>) => res));\r\n    }\r\n\r\n    getTotalPresentWithoutPay(employeeId: number, month: MonthType, year: number): Observable<HttpResponse<number>> {\r\n        return this.http\r\n            .get(\r\n                SERVER_API_URL +\r\n                    'api/extended/payroll-support/totalPresentWithoutPay/employeeId/' +\r\n                    employeeId +\r\n                    '/month/' +\r\n                    month +\r\n                    '/year/' +\r\n                    year,\r\n                { observe: 'response' }\r\n            )\r\n            .pipe(map((res: HttpResponse<number>) => res));\r\n    }\r\n}\r\n"]}]}