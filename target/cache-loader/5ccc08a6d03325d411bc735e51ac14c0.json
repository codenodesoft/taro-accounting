{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\inventory-location\\inventory-location.route.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\inventory-location\\inventory-location.route.ts","mtime":1625565387103},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar inventory_location_model_1 = require(\"app/shared/model/inventory-location.model\");\r\nvar inventory_location_service_1 = require(\"./inventory-location.service\");\r\nvar inventory_location_component_1 = require(\"./inventory-location.component\");\r\nvar inventory_location_detail_component_1 = require(\"./inventory-location-detail.component\");\r\nvar inventory_location_update_component_1 = require(\"./inventory-location-update.component\");\r\nvar inventory_location_delete_dialog_component_1 = require(\"./inventory-location-delete-dialog.component\");\r\nvar InventoryLocationResolve = /** @class */ (function () {\r\n    function InventoryLocationResolve(service) {\r\n        this.service = service;\r\n    }\r\n    InventoryLocationResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (inventoryLocation) { return inventoryLocation.body; }));\r\n        }\r\n        return rxjs_1.of(new inventory_location_model_1.InventoryLocation());\r\n    };\r\n    var _a;\r\n    InventoryLocationResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof inventory_location_service_1.InventoryLocationService !== \"undefined\" && inventory_location_service_1.InventoryLocationService) === \"function\" ? _a : Object])\r\n    ], InventoryLocationResolve);\r\n    return InventoryLocationResolve;\r\n}());\r\nexports.InventoryLocationResolve = InventoryLocationResolve;\r\nexports.inventoryLocationRoute = [\r\n    {\r\n        path: '',\r\n        component: inventory_location_component_1.InventoryLocationComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: inventory_location_detail_component_1.InventoryLocationDetailComponent,\r\n        resolve: {\r\n            inventoryLocation: InventoryLocationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: inventory_location_update_component_1.InventoryLocationUpdateComponent,\r\n        resolve: {\r\n            inventoryLocation: InventoryLocationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: inventory_location_update_component_1.InventoryLocationUpdateComponent,\r\n        resolve: {\r\n            inventoryLocation: InventoryLocationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.inventoryLocationPopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: inventory_location_delete_dialog_component_1.InventoryLocationDeletePopupComponent,\r\n        resolve: {\r\n            inventoryLocation: InventoryLocationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\inventory-location\\inventory-location.route.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\inventory-location\\inventory-location.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAAsC;AACtC,4CAA6C;AAC7C,sFAA8E;AAC9E,2EAAwE;AACxE,+EAA4E;AAC5E,6FAAyF;AACzF,6FAAyF;AACzF,2GAAqG;AAIrG;IACI,kCAAoB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;IAAG,CAAC;IAEzD,0CAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7B,kBAAM,CAAC,UAAC,QAAyC,IAAK,OAAA,QAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,EAClE,eAAG,CAAC,UAAC,iBAAkD,IAAK,OAAA,iBAAiB,CAAC,IAAI,EAAtB,CAAsB,CAAC,CACtF,CAAC;SACL;QACD,OAAO,SAAE,CAAC,IAAI,4CAAiB,EAAE,CAAC,CAAC;IACvC,CAAC;;IAZQ,wBAAwB;QADpC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,qDAAwB,oBAAxB,qDAAwB;OAD5C,wBAAwB,CAapC;IAAD,+BAAC;CAAA,AAbD,IAaC;AAbY,4DAAwB;AAexB,QAAA,sBAAsB,GAAW;IAC1C;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAA0B;QACrC,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,oBAAoB;SAClC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,sEAAgC;QAC3C,OAAO,EAAE;YACL,iBAAiB,EAAE,wBAAwB;SAC9C;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,oBAAoB;SAClC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,sEAAgC;QAC3C,OAAO,EAAE;YACL,iBAAiB,EAAE,wBAAwB;SAC9C;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,oBAAoB;SAClC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,sEAAgC;QAC3C,OAAO,EAAE;YACL,iBAAiB,EAAE,wBAAwB;SAC9C;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,oBAAoB;SAClC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,2BAA2B,GAAW;IAC/C;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,kFAAqC;QAChD,OAAO,EAAE;YACL,iBAAiB,EAAE,wBAAwB;SAC9C;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,oBAAoB;SAClC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from 'app/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { InventoryLocation } from 'app/shared/model/inventory-location.model';\r\nimport { InventoryLocationService } from './inventory-location.service';\r\nimport { InventoryLocationComponent } from './inventory-location.component';\r\nimport { InventoryLocationDetailComponent } from './inventory-location-detail.component';\r\nimport { InventoryLocationUpdateComponent } from './inventory-location-update.component';\r\nimport { InventoryLocationDeletePopupComponent } from './inventory-location-delete-dialog.component';\r\nimport { IInventoryLocation } from 'app/shared/model/inventory-location.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class InventoryLocationResolve implements Resolve<IInventoryLocation> {\r\n    constructor(private service: InventoryLocationService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IInventoryLocation> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<InventoryLocation>) => response.ok),\r\n                map((inventoryLocation: HttpResponse<InventoryLocation>) => inventoryLocation.body)\r\n            );\r\n        }\r\n        return of(new InventoryLocation());\r\n    }\r\n}\r\n\r\nexport const inventoryLocationRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: InventoryLocationComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: InventoryLocationDetailComponent,\r\n        resolve: {\r\n            inventoryLocation: InventoryLocationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: InventoryLocationUpdateComponent,\r\n        resolve: {\r\n            inventoryLocation: InventoryLocationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: InventoryLocationUpdateComponent,\r\n        resolve: {\r\n            inventoryLocation: InventoryLocationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n\r\nexport const inventoryLocationPopupRoute: Routes = [\r\n    {\r\n        path: ':id/delete',\r\n        component: InventoryLocationDeletePopupComponent,\r\n        resolve: {\r\n            inventoryLocation: InventoryLocationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'InventoryLocations'\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n"]}]}