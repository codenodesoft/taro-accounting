{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\payment-voucher-extended\\payment-voucher-transaction-update.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\payment-voucher-extended\\payment-voucher-transaction-update.component.ts","mtime":1625565387363},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar dt_transaction_model_1 = require(\"app/shared/model/dt-transaction.model\");\r\nvar mst_account_1 = require(\"app/entities/mst-account\");\r\nvar voucher_1 = require(\"app/entities/voucher\");\r\nvar currency_1 = require(\"app/entities/currency\");\r\nvar dt_transaction_1 = require(\"app/entities/dt-transaction\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar system_group_map_1 = require(\"app/entities/system-group-map\");\r\nvar system_group_map_model_1 = require(\"app/shared/model/system-group-map.model\");\r\nvar PaymentVoucherTransactionUpdateComponent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PaymentVoucherTransactionUpdateComponent, _super);\r\n    function PaymentVoucherTransactionUpdateComponent(jhiAlertService, dtTransactionService, mstAccountService, voucherService, currencyService, activatedRoute, activeModal, jhiEventManager, systemGroupMapService) {\r\n        var _this = _super.call(this, jhiAlertService, dtTransactionService, mstAccountService, voucherService, currencyService, activatedRoute) || this;\r\n        _this.jhiAlertService = jhiAlertService;\r\n        _this.dtTransactionService = dtTransactionService;\r\n        _this.mstAccountService = mstAccountService;\r\n        _this.voucherService = voucherService;\r\n        _this.currencyService = currencyService;\r\n        _this.activatedRoute = activatedRoute;\r\n        _this.activeModal = activeModal;\r\n        _this.jhiEventManager = jhiEventManager;\r\n        _this.systemGroupMapService = systemGroupMapService;\r\n        _this.accountNameList = [];\r\n        _this.focus$ = new rxjs_1.Subject();\r\n        _this.click$ = new rxjs_1.Subject();\r\n        _this.search = function (text$) {\r\n            var debouncedText$ = text$.pipe(operators_1.debounceTime(200), operators_1.distinctUntilChanged());\r\n            var clicksWithClosedPopup$ = _this.click$.pipe(operators_1.filter(function () { return !_this.instance.isPopupOpen(); }));\r\n            var inputFocus$ = _this.focus$;\r\n            return rxjs_1.merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(operators_1.map(function (term) {\r\n                return (term === ''\r\n                    ? _this.accountNameList\r\n                    : _this.accountNameList.filter(function (v) { return v.toLowerCase().indexOf(term.toLowerCase()) > -1; })).slice(0, 10);\r\n            }));\r\n        };\r\n        return _this;\r\n    }\r\n    PaymentVoucherTransactionUpdateComponent.prototype.accountSelected = function () {\r\n        var selectedAccount = this.accountNameMapAccount[this.selectedAccountName];\r\n        if (this.groupTypeWithSystemGroupMap[system_group_map_model_1.GroupType.SUNDRY_DEBTOR] &&\r\n            selectedAccount.groupId == this.groupTypeWithSystemGroupMap[system_group_map_model_1.GroupType.SUNDRY_DEBTOR].groupId) {\r\n            this.showInvoice = true;\r\n            this.showCheque = false;\r\n        }\r\n        else if (this.groupTypeWithSystemGroupMap[system_group_map_model_1.GroupType.SUNDRY_CREDITOR] &&\r\n            selectedAccount.groupId == this.groupTypeWithSystemGroupMap[system_group_map_model_1.GroupType.SUNDRY_CREDITOR].groupId) {\r\n            this.showCheque = true;\r\n            this.showInvoice = false;\r\n        }\r\n        else {\r\n            this.showCheque = false;\r\n            this.showInvoice = false;\r\n        }\r\n        this.dtTransaction.accountId = selectedAccount.id;\r\n    };\r\n    PaymentVoucherTransactionUpdateComponent.prototype.fetchBankAndCostTypeGroups = function () {\r\n        var _this = this;\r\n        this.systemGroupMapService\r\n            .query({\r\n            size: 100\r\n        })\r\n            .subscribe(function (response) {\r\n            _this.groupTypeWithSystemGroupMap = {};\r\n            response.body.forEach(function (s) {\r\n                _this.groupTypeWithSystemGroupMap[s.groupType] = s;\r\n            });\r\n        }, function (response) {\r\n            console.log(response.message);\r\n        }, function () {\r\n            _this.mstAccountService\r\n                .query({\r\n                size: 50000\r\n            })\r\n                .pipe(operators_1.filter(function (mayBeOk) { return mayBeOk.ok; }), operators_1.map(function (response) { return response.body; }))\r\n                .subscribe(function (res) {\r\n                _this.mstaccounts = [];\r\n                _this.accountNameList = [];\r\n                _this.accountNameMapAccount = {};\r\n                res.forEach(function (a) {\r\n                    if (a.groupId !== _this.groupTypeWithSystemGroupMap[system_group_map_model_1.GroupType.BANK_ACCOUNTS].groupId &&\r\n                        a.groupId !== _this.groupTypeWithSystemGroupMap[system_group_map_model_1.GroupType.CASH_IN_HAND].groupId) {\r\n                        _this.mstaccounts.push(a);\r\n                        var accountName = a.name + ' (' + a.groupName + ')';\r\n                        _this.accountNameList.push(accountName);\r\n                        _this.accountNameMapAccount[accountName] = a;\r\n                        if (a.id == _this.dtTransaction.accountId)\r\n                            _this.selectedAccountName = accountName;\r\n                    }\r\n                });\r\n            }, function (res) { return _this.onError(res.message); });\r\n        });\r\n    };\r\n    PaymentVoucherTransactionUpdateComponent.prototype.ngOnInit = function () {\r\n        this.isSaving = false;\r\n        this.fetchBankAndCostTypeGroups();\r\n    };\r\n    PaymentVoucherTransactionUpdateComponent.prototype.previousState = function () {\r\n        this.jhiEventManager.broadcast({\r\n            name: 'dtTransactionListModification',\r\n            content: 'Deleted an dtTransaction'\r\n        });\r\n        this.activeModal.dismiss(true);\r\n    };\r\n    PaymentVoucherTransactionUpdateComponent.prototype.save = function () {\r\n        this.isSaving = true;\r\n        if (this.dtTransaction.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.dtTransactionService.update(this.dtTransaction));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.dtTransactionService.create(this.dtTransaction));\r\n        }\r\n    };\r\n    PaymentVoucherTransactionUpdateComponent.prototype.onSaveSuccess = function () {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\r\n    tslib_1.__decorate([\r\n        core_1.Input(),\r\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof dt_transaction_model_1.IDtTransaction !== \"undefined\" && dt_transaction_model_1.IDtTransaction) === \"function\" ? _a : Object)\r\n    ], PaymentVoucherTransactionUpdateComponent.prototype, \"dtTransaction\", void 0);\r\n    tslib_1.__decorate([\r\n        core_1.ViewChild('instance'),\r\n        tslib_1.__metadata(\"design:type\", typeof (_b = typeof ng_bootstrap_1.NgbTypeahead !== \"undefined\" && ng_bootstrap_1.NgbTypeahead) === \"function\" ? _b : Object)\r\n    ], PaymentVoucherTransactionUpdateComponent.prototype, \"instance\", void 0);\r\n    PaymentVoucherTransactionUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-payment-voucher-transaction-update',\r\n            templateUrl: './payment-voucher-transaction-update.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_c = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _c : Object, typeof (_d = typeof dt_transaction_1.DtTransactionService !== \"undefined\" && dt_transaction_1.DtTransactionService) === \"function\" ? _d : Object, typeof (_e = typeof mst_account_1.MstAccountService !== \"undefined\" && mst_account_1.MstAccountService) === \"function\" ? _e : Object, typeof (_f = typeof voucher_1.VoucherService !== \"undefined\" && voucher_1.VoucherService) === \"function\" ? _f : Object, typeof (_g = typeof currency_1.CurrencyService !== \"undefined\" && currency_1.CurrencyService) === \"function\" ? _g : Object, typeof (_h = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _h : Object, typeof (_j = typeof ng_bootstrap_1.NgbActiveModal !== \"undefined\" && ng_bootstrap_1.NgbActiveModal) === \"function\" ? _j : Object, typeof (_k = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _k : Object, typeof (_l = typeof system_group_map_1.SystemGroupMapService !== \"undefined\" && system_group_map_1.SystemGroupMapService) === \"function\" ? _l : Object])\r\n    ], PaymentVoucherTransactionUpdateComponent);\r\n    return PaymentVoucherTransactionUpdateComponent;\r\n}(dt_transaction_1.DtTransactionUpdateComponent));\r\nexports.PaymentVoucherTransactionUpdateComponent = PaymentVoucherTransactionUpdateComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\payment-voucher-extended\\payment-voucher-transaction-update.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\payment-voucher-extended\\payment-voucher-transaction-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { JhiAlertService, JhiEventManager } from 'ng-jhipster';\r\nimport { IDtTransaction } from 'app/shared/model/dt-transaction.model';\r\nimport { IMstAccount } from 'app/shared/model/mst-account.model';\r\nimport { MstAccountService } from 'app/entities/mst-account';\r\nimport { IVoucher } from 'app/shared/model/voucher.model';\r\nimport { VoucherService } from 'app/entities/voucher';\r\nimport { ICurrency } from 'app/shared/model/currency.model';\r\nimport { CurrencyService } from 'app/entities/currency';\r\nimport { DtTransactionService, DtTransactionUpdateComponent } from 'app/entities/dt-transaction';\r\nimport { NgbActiveModal, NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SystemGroupMapService } from 'app/entities/system-group-map';\r\nimport { GroupType, ISystemGroupMap } from 'app/shared/model/system-group-map.model';\r\n\r\n@Component({\r\n    selector: 'jhi-payment-voucher-transaction-update',\r\n    templateUrl: './payment-voucher-transaction-update.component.html'\r\n})\r\nexport class PaymentVoucherTransactionUpdateComponent extends DtTransactionUpdateComponent implements OnInit {\r\n    @Input()\r\n    dtTransaction: IDtTransaction;\r\n\r\n    groupTypeWithSystemGroupMap: any;\r\n    accountNameList: string[] = [];\r\n    accountNameMapAccount: any;\r\n    selectedAccountName: string;\r\n    showInvoice: boolean;\r\n    showCheque: boolean;\r\n\r\n    @ViewChild('instance') instance: NgbTypeahead;\r\n    focus$ = new Subject<string>();\r\n    click$ = new Subject<string>();\r\n\r\n    constructor(\r\n        protected jhiAlertService: JhiAlertService,\r\n        protected dtTransactionService: DtTransactionService,\r\n        protected mstAccountService: MstAccountService,\r\n        protected voucherService: VoucherService,\r\n        protected currencyService: CurrencyService,\r\n        protected activatedRoute: ActivatedRoute,\r\n        protected activeModal: NgbActiveModal,\r\n        protected jhiEventManager: JhiEventManager,\r\n        protected systemGroupMapService: SystemGroupMapService\r\n    ) {\r\n        super(jhiAlertService, dtTransactionService, mstAccountService, voucherService, currencyService, activatedRoute);\r\n    }\r\n\r\n    accountSelected() {\r\n        const selectedAccount: IMstAccount = this.accountNameMapAccount[this.selectedAccountName];\r\n        if (\r\n            this.groupTypeWithSystemGroupMap[GroupType.SUNDRY_DEBTOR] &&\r\n            selectedAccount.groupId == this.groupTypeWithSystemGroupMap[GroupType.SUNDRY_DEBTOR].groupId\r\n        ) {\r\n            this.showInvoice = true;\r\n            this.showCheque = false;\r\n        } else if (\r\n            this.groupTypeWithSystemGroupMap[GroupType.SUNDRY_CREDITOR] &&\r\n            selectedAccount.groupId == this.groupTypeWithSystemGroupMap[GroupType.SUNDRY_CREDITOR].groupId\r\n        ) {\r\n            this.showCheque = true;\r\n            this.showInvoice = false;\r\n        } else {\r\n            this.showCheque = false;\r\n            this.showInvoice = false;\r\n        }\r\n\r\n        this.dtTransaction.accountId = selectedAccount.id;\r\n    }\r\n\r\n    fetchBankAndCostTypeGroups() {\r\n        this.systemGroupMapService\r\n            .query({\r\n                size: 100\r\n            })\r\n            .subscribe(\r\n                (response: HttpResponse<ISystemGroupMap[]>) => {\r\n                    this.groupTypeWithSystemGroupMap = {};\r\n                    response.body.forEach((s: ISystemGroupMap) => {\r\n                        this.groupTypeWithSystemGroupMap[s.groupType] = s;\r\n                    });\r\n                },\r\n                (response: HttpErrorResponse) => {\r\n                    console.log(response.message);\r\n                },\r\n                () => {\r\n                    this.mstAccountService\r\n                        .query({\r\n                            size: 50000\r\n                        })\r\n                        .pipe(\r\n                            filter((mayBeOk: HttpResponse<IMstAccount[]>) => mayBeOk.ok),\r\n                            map((response: HttpResponse<IMstAccount[]>) => response.body)\r\n                        )\r\n                        .subscribe(\r\n                            (res: IMstAccount[]) => {\r\n                                this.mstaccounts = [];\r\n                                this.accountNameList = [];\r\n                                this.accountNameMapAccount = {};\r\n                                res.forEach((a: IMstAccount) => {\r\n                                    if (\r\n                                        a.groupId !== this.groupTypeWithSystemGroupMap[GroupType.BANK_ACCOUNTS].groupId &&\r\n                                        a.groupId !== this.groupTypeWithSystemGroupMap[GroupType.CASH_IN_HAND].groupId\r\n                                    ) {\r\n                                        this.mstaccounts.push(a);\r\n                                        const accountName = a.name + ' (' + a.groupName + ')';\r\n                                        this.accountNameList.push(accountName);\r\n                                        this.accountNameMapAccount[accountName] = a;\r\n                                        if (a.id == this.dtTransaction.accountId) this.selectedAccountName = accountName;\r\n                                    }\r\n                                });\r\n                            },\r\n                            (res: HttpErrorResponse) => this.onError(res.message)\r\n                        );\r\n                }\r\n            );\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.fetchBankAndCostTypeGroups();\r\n    }\r\n\r\n    previousState() {\r\n        this.jhiEventManager.broadcast({\r\n            name: 'dtTransactionListModification',\r\n            content: 'Deleted an dtTransaction'\r\n        });\r\n        this.activeModal.dismiss(true);\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n        if (this.dtTransaction.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.dtTransactionService.update(this.dtTransaction));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.dtTransactionService.create(this.dtTransaction));\r\n        }\r\n    }\r\n\r\n    protected onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n\r\n    search = (text$: Observable<string>) => {\r\n        const debouncedText$ = text$.pipe(\r\n            debounceTime(200),\r\n            distinctUntilChanged()\r\n        );\r\n        const clicksWithClosedPopup$ = this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\r\n        const inputFocus$ = this.focus$;\r\n\r\n        return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\r\n            map(term =>\r\n                (term === ''\r\n                    ? this.accountNameList\r\n                    : this.accountNameList.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1)\r\n                ).slice(0, 10)\r\n            )\r\n        );\r\n    };\r\n}\r\n"]}]}