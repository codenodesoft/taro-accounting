{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\experience-information-attachment\\experience-information-attachment.route.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\experience-information-attachment\\experience-information-attachment.route.ts","mtime":1625565386978},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar experience_information_attachment_model_1 = require(\"app/shared/model/experience-information-attachment.model\");\r\nvar experience_information_attachment_service_1 = require(\"./experience-information-attachment.service\");\r\nvar experience_information_attachment_component_1 = require(\"./experience-information-attachment.component\");\r\nvar experience_information_attachment_detail_component_1 = require(\"./experience-information-attachment-detail.component\");\r\nvar experience_information_attachment_update_component_1 = require(\"./experience-information-attachment-update.component\");\r\nvar experience_information_attachment_delete_dialog_component_1 = require(\"./experience-information-attachment-delete-dialog.component\");\r\nvar ExperienceInformationAttachmentResolve = /** @class */ (function () {\r\n    function ExperienceInformationAttachmentResolve(service) {\r\n        this.service = service;\r\n    }\r\n    ExperienceInformationAttachmentResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        var employeeId = route.params['employeeId'] ? route.params['employeeId'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (experienceInformationAttachment) { return experienceInformationAttachment.body; }));\r\n        }\r\n        else if (employeeId) {\r\n            var experienceInformationAttachment = new experience_information_attachment_model_1.ExperienceInformationAttachment();\r\n            experienceInformationAttachment.employeeId = employeeId;\r\n            return rxjs_1.of(experienceInformationAttachment);\r\n        }\r\n        return rxjs_1.of(new experience_information_attachment_model_1.ExperienceInformationAttachment());\r\n    };\r\n    var _a;\r\n    ExperienceInformationAttachmentResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof experience_information_attachment_service_1.ExperienceInformationAttachmentService !== \"undefined\" && experience_information_attachment_service_1.ExperienceInformationAttachmentService) === \"function\" ? _a : Object])\r\n    ], ExperienceInformationAttachmentResolve);\r\n    return ExperienceInformationAttachmentResolve;\r\n}());\r\nexports.ExperienceInformationAttachmentResolve = ExperienceInformationAttachmentResolve;\r\nexports.experienceInformationAttachmentRoute = [\r\n    {\r\n        path: '',\r\n        component: experience_information_attachment_component_1.ExperienceInformationAttachmentComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: experience_information_attachment_detail_component_1.ExperienceInformationAttachmentDetailComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: experience_information_attachment_update_component_1.ExperienceInformationAttachmentUpdateComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: experience_information_attachment_update_component_1.ExperienceInformationAttachmentUpdateComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':employeeId/new',\r\n        component: experience_information_attachment_update_component_1.ExperienceInformationAttachmentUpdateComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.experienceInformationAttachmentPopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: experience_information_attachment_delete_dialog_component_1.ExperienceInformationAttachmentDeletePopupComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\experience-information-attachment\\experience-information-attachment.route.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\experience-information-attachment\\experience-information-attachment.route.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from 'app/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ExperienceInformationAttachment } from 'app/shared/model/experience-information-attachment.model';\r\nimport { ExperienceInformationAttachmentService } from './experience-information-attachment.service';\r\nimport { ExperienceInformationAttachmentComponent } from './experience-information-attachment.component';\r\nimport { ExperienceInformationAttachmentDetailComponent } from './experience-information-attachment-detail.component';\r\nimport { ExperienceInformationAttachmentUpdateComponent } from './experience-information-attachment-update.component';\r\nimport { ExperienceInformationAttachmentDeletePopupComponent } from './experience-information-attachment-delete-dialog.component';\r\nimport { IExperienceInformationAttachment } from 'app/shared/model/experience-information-attachment.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ExperienceInformationAttachmentResolve implements Resolve<IExperienceInformationAttachment> {\r\n    constructor(private service: ExperienceInformationAttachmentService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IExperienceInformationAttachment> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        const employeeId = route.params['employeeId'] ? route.params['employeeId'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<ExperienceInformationAttachment>) => response.ok),\r\n                map(\r\n                    (experienceInformationAttachment: HttpResponse<ExperienceInformationAttachment>) => experienceInformationAttachment.body\r\n                )\r\n            );\r\n        } else if (employeeId) {\r\n            const experienceInformationAttachment: IExperienceInformationAttachment = new ExperienceInformationAttachment();\r\n            experienceInformationAttachment.employeeId = employeeId;\r\n            return of(experienceInformationAttachment);\r\n        }\r\n        return of(new ExperienceInformationAttachment());\r\n    }\r\n}\r\n\r\nexport const experienceInformationAttachmentRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: ExperienceInformationAttachmentComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: ExperienceInformationAttachmentDetailComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: ExperienceInformationAttachmentUpdateComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: ExperienceInformationAttachmentUpdateComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':employeeId/new',\r\n        component: ExperienceInformationAttachmentUpdateComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n\r\nexport const experienceInformationAttachmentPopupRoute: Routes = [\r\n    {\r\n        path: ':id/delete',\r\n        component: ExperienceInformationAttachmentDeletePopupComponent,\r\n        resolve: {\r\n            experienceInformationAttachment: ExperienceInformationAttachmentResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'ExperienceInformationAttachments'\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n"]}]}