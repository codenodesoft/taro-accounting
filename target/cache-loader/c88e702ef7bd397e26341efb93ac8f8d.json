{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\holiday-type\\holiday-type-update.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\holiday-type\\holiday-type-update.component.ts","mtime":1625565387072},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar moment = require(\"moment\");\r\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nvar holiday_type_service_1 = require(\"./holiday-type.service\");\r\nvar HolidayTypeUpdateComponent = /** @class */ (function () {\r\n    function HolidayTypeUpdateComponent(holidayTypeService, activatedRoute) {\r\n        this.holidayTypeService = holidayTypeService;\r\n        this.activatedRoute = activatedRoute;\r\n    }\r\n    HolidayTypeUpdateComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var holidayType = _a.holidayType;\r\n            _this.holidayType = holidayType;\r\n            _this.createdOn = _this.holidayType.createdOn != null ? _this.holidayType.createdOn.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n            _this.updatedOn = _this.holidayType.updatedOn != null ? _this.holidayType.updatedOn.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n        });\r\n    };\r\n    HolidayTypeUpdateComponent.prototype.previousState = function () {\r\n        window.history.back();\r\n    };\r\n    HolidayTypeUpdateComponent.prototype.save = function () {\r\n        this.isSaving = true;\r\n        this.holidayType.createdOn = this.createdOn != null ? moment(this.createdOn, input_constants_1.DATE_TIME_FORMAT) : null;\r\n        this.holidayType.updatedOn = this.updatedOn != null ? moment(this.updatedOn, input_constants_1.DATE_TIME_FORMAT) : null;\r\n        if (this.holidayType.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.holidayTypeService.update(this.holidayType));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.holidayTypeService.create(this.holidayType));\r\n        }\r\n    };\r\n    HolidayTypeUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\r\n        var _this = this;\r\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\r\n    };\r\n    HolidayTypeUpdateComponent.prototype.onSaveSuccess = function () {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    };\r\n    HolidayTypeUpdateComponent.prototype.onSaveError = function () {\r\n        this.isSaving = false;\r\n    };\r\n    var _a, _b;\r\n    HolidayTypeUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-holiday-type-update',\r\n            templateUrl: './holiday-type-update.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof holiday_type_service_1.HolidayTypeService !== \"undefined\" && holiday_type_service_1.HolidayTypeService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _b : Object])\r\n    ], HolidayTypeUpdateComponent);\r\n    return HolidayTypeUpdateComponent;\r\n}());\r\nexports.HolidayTypeUpdateComponent = HolidayTypeUpdateComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\holiday-type\\holiday-type-update.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\holiday-type\\holiday-type-update.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAClD,0CAAiD;AAIjD,+BAAiC;AACjC,wEAAwE;AAExE,+DAA4D;AAM5D;IAMI,oCAAsB,kBAAsC,EAAY,cAA8B;QAAhF,uBAAkB,GAAlB,kBAAkB,CAAoB;QAAY,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAE1G,6CAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,EAAe;gBAAb,4BAAW;YAC7C,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,kCAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACjH,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,WAAW,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,kCAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAa,GAAb;QACI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,yCAAI,GAAJ;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,kCAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtG,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,kCAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACtG,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,KAAK,SAAS,EAAE;YACnC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAClF;aAAM;YACH,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAClF;IACL,CAAC;IAES,4DAAuB,GAAjC,UAAkC,MAA8C;QAAhF,iBAEC;QADG,MAAM,CAAC,SAAS,CAAC,UAAC,GAA+B,IAAK,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,EAAE,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IAChI,CAAC;IAES,kDAAa,GAAvB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAES,gDAAW,GAArB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;;IA3CQ,0BAA0B;QAJtC,gBAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE,sCAAsC;SACtD,CAAC;qEAO4C,yCAAkB,oBAAlB,yCAAkB,oDAA4B,uBAAc,oBAAd,uBAAc;OAN7F,0BAA0B,CA4CtC;IAAD,iCAAC;CAAA,AA5CD,IA4CC;AA5CY,gEAA0B","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { IHolidayType } from 'app/shared/model/holiday-type.model';\r\nimport { HolidayTypeService } from './holiday-type.service';\r\n\r\n@Component({\r\n    selector: 'jhi-holiday-type-update',\r\n    templateUrl: './holiday-type-update.component.html'\r\n})\r\nexport class HolidayTypeUpdateComponent implements OnInit {\r\n    holidayType: IHolidayType;\r\n    isSaving: boolean;\r\n    createdOn: string;\r\n    updatedOn: string;\r\n\r\n    constructor(protected holidayTypeService: HolidayTypeService, protected activatedRoute: ActivatedRoute) {}\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ holidayType }) => {\r\n            this.holidayType = holidayType;\r\n            this.createdOn = this.holidayType.createdOn != null ? this.holidayType.createdOn.format(DATE_TIME_FORMAT) : null;\r\n            this.updatedOn = this.holidayType.updatedOn != null ? this.holidayType.updatedOn.format(DATE_TIME_FORMAT) : null;\r\n        });\r\n    }\r\n\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n        this.holidayType.createdOn = this.createdOn != null ? moment(this.createdOn, DATE_TIME_FORMAT) : null;\r\n        this.holidayType.updatedOn = this.updatedOn != null ? moment(this.updatedOn, DATE_TIME_FORMAT) : null;\r\n        if (this.holidayType.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.holidayTypeService.update(this.holidayType));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.holidayTypeService.create(this.holidayType));\r\n        }\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<IHolidayType>>) {\r\n        result.subscribe((res: HttpResponse<IHolidayType>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\r\n    }\r\n\r\n    protected onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n\r\n    protected onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n}\r\n"]}]}