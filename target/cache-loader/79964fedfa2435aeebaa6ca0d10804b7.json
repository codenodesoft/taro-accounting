{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\over-time\\over-time-update.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\over-time\\over-time-update.component.ts","mtime":1625565387351},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar moment = require(\"moment\");\r\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar over_time_service_1 = require(\"./over-time.service\");\r\nvar employee_1 = require(\"app/entities/employee\");\r\nvar OverTimeUpdateComponent = /** @class */ (function () {\r\n    function OverTimeUpdateComponent(jhiAlertService, overTimeService, employeeService, activatedRoute) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.overTimeService = overTimeService;\r\n        this.employeeService = employeeService;\r\n        this.activatedRoute = activatedRoute;\r\n    }\r\n    OverTimeUpdateComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var overTime = _a.overTime;\r\n            _this.overTime = overTime;\r\n            _this.fromTime = _this.overTime.fromTime != null ? _this.overTime.fromTime.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n            _this.toTime = _this.overTime.toTime != null ? _this.overTime.toTime.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n            _this.createdOn = _this.overTime.createdOn != null ? _this.overTime.createdOn.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n            _this.updatedOn = _this.overTime.updatedOn != null ? _this.overTime.updatedOn.format(input_constants_1.DATE_TIME_FORMAT) : null;\r\n        });\r\n        this.employeeService\r\n            .query()\r\n            .pipe(operators_1.filter(function (mayBeOk) { return mayBeOk.ok; }), operators_1.map(function (response) { return response.body; }))\r\n            .subscribe(function (res) { return (_this.employees = res); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    OverTimeUpdateComponent.prototype.previousState = function () {\r\n        window.history.back();\r\n    };\r\n    OverTimeUpdateComponent.prototype.save = function () {\r\n        this.isSaving = true;\r\n        this.overTime.fromTime = this.fromTime != null ? moment(this.fromTime, input_constants_1.DATE_TIME_FORMAT) : null;\r\n        this.overTime.toTime = this.toTime != null ? moment(this.toTime, input_constants_1.DATE_TIME_FORMAT) : null;\r\n        this.overTime.createdOn = this.createdOn != null ? moment(this.createdOn, input_constants_1.DATE_TIME_FORMAT) : null;\r\n        this.overTime.updatedOn = this.updatedOn != null ? moment(this.updatedOn, input_constants_1.DATE_TIME_FORMAT) : null;\r\n        if (this.overTime.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.overTimeService.update(this.overTime));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.overTimeService.create(this.overTime));\r\n        }\r\n    };\r\n    OverTimeUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\r\n        var _this = this;\r\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\r\n    };\r\n    OverTimeUpdateComponent.prototype.onSaveSuccess = function () {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    };\r\n    OverTimeUpdateComponent.prototype.onSaveError = function () {\r\n        this.isSaving = false;\r\n    };\r\n    OverTimeUpdateComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    OverTimeUpdateComponent.prototype.trackEmployeeById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    var _a, _b, _c, _d;\r\n    OverTimeUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-over-time-update',\r\n            templateUrl: './over-time-update.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof over_time_service_1.OverTimeService !== \"undefined\" && over_time_service_1.OverTimeService) === \"function\" ? _b : Object, typeof (_c = typeof employee_1.EmployeeService !== \"undefined\" && employee_1.EmployeeService) === \"function\" ? _c : Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _d : Object])\r\n    ], OverTimeUpdateComponent);\r\n    return OverTimeUpdateComponent;\r\n}());\r\nexports.OverTimeUpdateComponent = OverTimeUpdateComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\over-time\\over-time-update.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\over-time\\over-time-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { JhiAlertService } from 'ng-jhipster';\r\nimport { IOverTime } from 'app/shared/model/over-time.model';\r\nimport { OverTimeService } from './over-time.service';\r\nimport { IEmployee } from 'app/shared/model/employee.model';\r\nimport { EmployeeService } from 'app/entities/employee';\r\n\r\n@Component({\r\n    selector: 'jhi-over-time-update',\r\n    templateUrl: './over-time-update.component.html'\r\n})\r\nexport class OverTimeUpdateComponent implements OnInit {\r\n    overTime: IOverTime;\r\n    isSaving: boolean;\r\n\r\n    employees: IEmployee[];\r\n    overTimeDateDp: any;\r\n    fromTime: string;\r\n    toTime: string;\r\n    createdOn: string;\r\n    updatedOn: string;\r\n\r\n    constructor(\r\n        protected jhiAlertService: JhiAlertService,\r\n        protected overTimeService: OverTimeService,\r\n        protected employeeService: EmployeeService,\r\n        protected activatedRoute: ActivatedRoute\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ overTime }) => {\r\n            this.overTime = overTime;\r\n            this.fromTime = this.overTime.fromTime != null ? this.overTime.fromTime.format(DATE_TIME_FORMAT) : null;\r\n            this.toTime = this.overTime.toTime != null ? this.overTime.toTime.format(DATE_TIME_FORMAT) : null;\r\n            this.createdOn = this.overTime.createdOn != null ? this.overTime.createdOn.format(DATE_TIME_FORMAT) : null;\r\n            this.updatedOn = this.overTime.updatedOn != null ? this.overTime.updatedOn.format(DATE_TIME_FORMAT) : null;\r\n        });\r\n        this.employeeService\r\n            .query()\r\n            .pipe(\r\n                filter((mayBeOk: HttpResponse<IEmployee[]>) => mayBeOk.ok),\r\n                map((response: HttpResponse<IEmployee[]>) => response.body)\r\n            )\r\n            .subscribe((res: IEmployee[]) => (this.employees = res), (res: HttpErrorResponse) => this.onError(res.message));\r\n    }\r\n\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n        this.overTime.fromTime = this.fromTime != null ? moment(this.fromTime, DATE_TIME_FORMAT) : null;\r\n        this.overTime.toTime = this.toTime != null ? moment(this.toTime, DATE_TIME_FORMAT) : null;\r\n        this.overTime.createdOn = this.createdOn != null ? moment(this.createdOn, DATE_TIME_FORMAT) : null;\r\n        this.overTime.updatedOn = this.updatedOn != null ? moment(this.updatedOn, DATE_TIME_FORMAT) : null;\r\n        if (this.overTime.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.overTimeService.update(this.overTime));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.overTimeService.create(this.overTime));\r\n        }\r\n    }\r\n\r\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<IOverTime>>) {\r\n        result.subscribe((res: HttpResponse<IOverTime>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\r\n    }\r\n\r\n    protected onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n\r\n    protected onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    trackEmployeeById(index: number, item: IEmployee) {\r\n        return item.id;\r\n    }\r\n}\r\n"]}]}