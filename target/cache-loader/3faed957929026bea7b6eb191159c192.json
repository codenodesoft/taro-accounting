{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\mst-account-extended\\mst-account-extended.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\mst-account-extended\\mst-account-extended.service.ts","mtime":1625565387297},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar mst_account_1 = require(\"app/entities/mst-account\");\r\nvar SoptorshiUtil_1 = require(\"app/shared/util/SoptorshiUtil\");\r\nvar MstAccountExtendedService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MstAccountExtendedService, _super);\r\n    function MstAccountExtendedService(http) {\r\n        var _this = _super.call(this, http) || this;\r\n        _this.http = http;\r\n        _this.resourceExtendedUrl = app_constants_1.SERVER_API_URL + 'api/extended/mst-accounts';\r\n        return _this;\r\n    }\r\n    MstAccountExtendedService.prototype.create = function (mstAccount) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(mstAccount);\r\n        return this.http\r\n            .post(this.resourceExtendedUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    MstAccountExtendedService.prototype.update = function (mstAccount) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(mstAccount);\r\n        return this.http\r\n            .put(this.resourceExtendedUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    MstAccountExtendedService.prototype.chartsOfAccount = function () {\r\n        return this.http.get(this.resourceExtendedUrl + \"/charts-of-account/excel\", { responseType: 'blob' }).subscribe(function (data) {\r\n            SoptorshiUtil_1.SoptorshiUtil.writeFileContent(data, 'application/vnd.ms-excel', 'ChartsofAccounts');\r\n        });\r\n    };\r\n    MstAccountExtendedService.prototype.profitAndLoss = function (fromDate, toDate) {\r\n        return this.http\r\n            .get(this.resourceExtendedUrl + \"/profit-and-loss/excel/\" + fromDate + \"/\" + toDate, { responseType: 'blob' })\r\n            .subscribe(function (data) {\r\n            SoptorshiUtil_1.SoptorshiUtil.writeFileContent(data, 'application/vnd.ms-excel', 'ProfitAndLoss');\r\n        });\r\n    };\r\n    MstAccountExtendedService.prototype.cashFlow = function (fromDate, toDate) {\r\n        return this.http\r\n            .get(this.resourceExtendedUrl + \"/cash-flow/excel/\" + fromDate + \"/\" + toDate, { responseType: 'blob' })\r\n            .subscribe(function (data) {\r\n            SoptorshiUtil_1.SoptorshiUtil.writeFileContent(data, 'application/vnd.ms-excel', 'CashFlow');\r\n        });\r\n    };\r\n    var _a;\r\n    MstAccountExtendedService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], MstAccountExtendedService);\r\n    return MstAccountExtendedService;\r\n}(mst_account_1.MstAccountService));\r\nexports.MstAccountExtendedService = MstAccountExtendedService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\mst-account-extended\\mst-account-extended.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\mst-account-extended\\mst-account-extended.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAgE;AAIhE,4CAAqC;AAErC,mDAAmD;AAGnD,wDAA6D;AAC7D,+DAA8D;AAM9D;IAA+C,qDAAiB;IAG5D,mCAAsB,IAAgB;QAAtC,YACI,kBAAM,IAAI,CAAC,SACd;QAFqB,UAAI,GAAJ,IAAI,CAAY;QAF/B,yBAAmB,GAAG,8BAAc,GAAG,2BAA2B,CAAC;;IAI1E,CAAC;IAED,0CAAM,GAAN,UAAO,UAAuB;QAA9B,iBAKC;QAJG,IAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAc,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC1E,IAAI,CAAC,eAAG,CAAC,UAAC,GAAuB,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,0CAAM,GAAN,UAAO,UAAuB;QAA9B,iBAKC;QAJG,IAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QACpD,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAc,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aACzE,IAAI,CAAC,eAAG,CAAC,UAAC,GAAuB,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,mDAAe,GAAf;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,mBAAmB,6BAA0B,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACtH,6BAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,0BAA0B,EAAE,kBAAkB,CAAC,CAAC;QACzF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAa,GAAb,UAAc,QAAa,EAAE,MAAW;QACpC,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAI,IAAI,CAAC,mBAAmB,+BAA0B,QAAQ,SAAI,MAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aACxG,SAAS,CAAC,UAAC,IAAS;YACjB,6BAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,0BAA0B,EAAE,eAAe,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACX,CAAC;IAED,4CAAQ,GAAR,UAAS,QAAa,EAAE,MAAW;QAC/B,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAI,IAAI,CAAC,mBAAmB,yBAAoB,QAAQ,SAAI,MAAQ,EAAE,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC;aAClG,SAAS,CAAC,UAAC,IAAS;YACjB,6BAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,0BAA0B,EAAE,UAAU,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC;IACX,CAAC;;IAzCQ,yBAAyB;QADrC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAIH,iBAAU,oBAAV,iBAAU;OAH7B,yBAAyB,CA0CrC;IAAD,gCAAC;CAAA,AA1CD,CAA+C,+BAAiB,GA0C/D;AA1CY,8DAAyB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IMstAccount } from 'app/shared/model/mst-account.model';\r\nimport { MstAccountService } from 'app/entities/mst-account';\r\nimport { SoptorshiUtil } from 'app/shared/util/SoptorshiUtil';\r\n\r\ntype EntityResponseType = HttpResponse<IMstAccount>;\r\ntype EntityArrayResponseType = HttpResponse<IMstAccount[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MstAccountExtendedService extends MstAccountService {\r\n    public resourceExtendedUrl = SERVER_API_URL + 'api/extended/mst-accounts';\r\n\r\n    constructor(protected http: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    create(mstAccount: IMstAccount): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(mstAccount);\r\n        return this.http\r\n            .post<IMstAccount>(this.resourceExtendedUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(mstAccount: IMstAccount): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(mstAccount);\r\n        return this.http\r\n            .put<IMstAccount>(this.resourceExtendedUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    chartsOfAccount(): any {\r\n        return this.http.get(`${this.resourceExtendedUrl}/charts-of-account/excel`, { responseType: 'blob' }).subscribe((data: any) => {\r\n            SoptorshiUtil.writeFileContent(data, 'application/vnd.ms-excel', 'ChartsofAccounts');\r\n        });\r\n    }\r\n\r\n    profitAndLoss(fromDate: any, toDate: any): any {\r\n        return this.http\r\n            .get(`${this.resourceExtendedUrl}/profit-and-loss/excel/${fromDate}/${toDate}`, { responseType: 'blob' })\r\n            .subscribe((data: any) => {\r\n                SoptorshiUtil.writeFileContent(data, 'application/vnd.ms-excel', 'ProfitAndLoss');\r\n            });\r\n    }\r\n\r\n    cashFlow(fromDate: any, toDate: any): any {\r\n        return this.http\r\n            .get(`${this.resourceExtendedUrl}/cash-flow/excel/${fromDate}/${toDate}`, { responseType: 'blob' })\r\n            .subscribe((data: any) => {\r\n                SoptorshiUtil.writeFileContent(data, 'application/vnd.ms-excel', 'CashFlow');\r\n            });\r\n    }\r\n}\r\n"]}]}