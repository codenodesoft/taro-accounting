{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-group-map-extended\\system-group-map-extended.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-group-map-extended\\system-group-map-extended.service.ts","mtime":1625565388155},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar system_group_map_1 = require(\"app/entities/system-group-map\");\r\nvar SystemGroupMapExtendedService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SystemGroupMapExtendedService, _super);\r\n    function SystemGroupMapExtendedService(http) {\r\n        var _this = _super.call(this, http) || this;\r\n        _this.http = http;\r\n        _this.resourceExtendedUrl = app_constants_1.SERVER_API_URL + 'api/extended/system-group-maps';\r\n        return _this;\r\n    }\r\n    SystemGroupMapExtendedService.prototype.create = function (systemGroupMap) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(systemGroupMap);\r\n        return this.http\r\n            .post(this.resourceExtendedUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    SystemGroupMapExtendedService.prototype.update = function (systemGroupMap) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(systemGroupMap);\r\n        return this.http\r\n            .put(this.resourceExtendedUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    var _a;\r\n    SystemGroupMapExtendedService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], SystemGroupMapExtendedService);\r\n    return SystemGroupMapExtendedService;\r\n}(system_group_map_1.SystemGroupMapService));\r\nexports.SystemGroupMapExtendedService = SystemGroupMapExtendedService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-group-map-extended\\system-group-map-extended.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-group-map-extended\\system-group-map-extended.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAgE;AAIhE,4CAAqC;AAErC,mDAAmD;AAGnD,kEAAsE;AAMtE;IAAmD,yDAAqB;IAGpE,uCAAsB,IAAgB;QAAtC,YACI,kBAAM,IAAI,CAAC,SACd;QAFqB,UAAI,GAAJ,IAAI,CAAY;QAF/B,yBAAmB,GAAG,8BAAc,GAAG,gCAAgC,CAAC;;IAI/E,CAAC;IAED,8CAAM,GAAN,UAAO,cAA+B;QAAtC,iBAKC;QAJG,IAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI;aACX,IAAI,CAAkB,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC9E,IAAI,CAAC,eAAG,CAAC,UAAC,GAAuB,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAC,CAAC;IACjF,CAAC;IAED,8CAAM,GAAN,UAAO,cAA+B;QAAtC,iBAKC;QAJG,IAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAkB,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;aAC7E,IAAI,CAAC,eAAG,CAAC,UAAC,GAAuB,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,EAA/B,CAA+B,CAAC,CAAC,CAAC;IACjF,CAAC;;IAnBQ,6BAA6B;QADzC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAIH,iBAAU,oBAAV,iBAAU;OAH7B,6BAA6B,CAoBzC;IAAD,oCAAC;CAAA,AApBD,CAAmD,wCAAqB,GAoBvE;AApBY,sEAA6B","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { ISystemGroupMap } from 'app/shared/model/system-group-map.model';\r\nimport { SystemGroupMapService } from 'app/entities/system-group-map';\r\n\r\ntype EntityResponseType = HttpResponse<ISystemGroupMap>;\r\ntype EntityArrayResponseType = HttpResponse<ISystemGroupMap[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SystemGroupMapExtendedService extends SystemGroupMapService {\r\n    public resourceExtendedUrl = SERVER_API_URL + 'api/extended/system-group-maps';\r\n\r\n    constructor(protected http: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    create(systemGroupMap: ISystemGroupMap): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(systemGroupMap);\r\n        return this.http\r\n            .post<ISystemGroupMap>(this.resourceExtendedUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(systemGroupMap: ISystemGroupMap): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(systemGroupMap);\r\n        return this.http\r\n            .put<ISystemGroupMap>(this.resourceExtendedUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n}\r\n"]}]}