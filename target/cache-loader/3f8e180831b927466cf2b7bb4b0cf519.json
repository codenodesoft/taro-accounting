{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\stock-in-item\\stock-in-item.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\stock-in-item\\stock-in-item.service.ts","mtime":1625565387833},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar moment = require(\"moment\");\r\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar StockInItemService = /** @class */ (function () {\r\n    function StockInItemService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/stock-in-items';\r\n        this.resourceSearchUrl = app_constants_1.SERVER_API_URL + 'api/_search/stock-in-items';\r\n    }\r\n    StockInItemService.prototype.create = function (stockInItem) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(stockInItem);\r\n        return this.http\r\n            .post(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    StockInItemService.prototype.update = function (stockInItem) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(stockInItem);\r\n        return this.http\r\n            .put(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    StockInItemService.prototype.find = function (id) {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + \"/\" + id, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    StockInItemService.prototype.query = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    StockInItemService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    StockInItemService.prototype.search = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceSearchUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    StockInItemService.prototype.convertDateFromClient = function (stockInItem) {\r\n        var copy = Object.assign({}, stockInItem, {\r\n            mfgDate: stockInItem.mfgDate != null && stockInItem.mfgDate.isValid() ? stockInItem.mfgDate.format(input_constants_1.DATE_FORMAT) : null,\r\n            expiryDate: stockInItem.expiryDate != null && stockInItem.expiryDate.isValid() ? stockInItem.expiryDate.format(input_constants_1.DATE_FORMAT) : null,\r\n            stockInDate: stockInItem.stockInDate != null && stockInItem.stockInDate.isValid() ? stockInItem.stockInDate.toJSON() : null\r\n        });\r\n        return copy;\r\n    };\r\n    StockInItemService.prototype.convertDateFromServer = function (res) {\r\n        if (res.body) {\r\n            res.body.mfgDate = res.body.mfgDate != null ? moment(res.body.mfgDate) : null;\r\n            res.body.expiryDate = res.body.expiryDate != null ? moment(res.body.expiryDate) : null;\r\n            res.body.stockInDate = res.body.stockInDate != null ? moment(res.body.stockInDate) : null;\r\n        }\r\n        return res;\r\n    };\r\n    StockInItemService.prototype.convertDateArrayFromServer = function (res) {\r\n        if (res.body) {\r\n            res.body.forEach(function (stockInItem) {\r\n                stockInItem.mfgDate = stockInItem.mfgDate != null ? moment(stockInItem.mfgDate) : null;\r\n                stockInItem.expiryDate = stockInItem.expiryDate != null ? moment(stockInItem.expiryDate) : null;\r\n                stockInItem.stockInDate = stockInItem.stockInDate != null ? moment(stockInItem.stockInDate) : null;\r\n            });\r\n        }\r\n        return res;\r\n    };\r\n    var _a;\r\n    StockInItemService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], StockInItemService);\r\n    return StockInItemService;\r\n}());\r\nexports.StockInItemService = StockInItemService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\stock-in-item\\stock-in-item.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\stock-in-item\\stock-in-item.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IStockInItem } from 'app/shared/model/stock-in-item.model';\r\n\r\ntype EntityResponseType = HttpResponse<IStockInItem>;\r\ntype EntityArrayResponseType = HttpResponse<IStockInItem[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StockInItemService {\r\n    public resourceUrl = SERVER_API_URL + 'api/stock-in-items';\r\n    public resourceSearchUrl = SERVER_API_URL + 'api/_search/stock-in-items';\r\n\r\n    constructor(protected http: HttpClient) {}\r\n\r\n    create(stockInItem: IStockInItem): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(stockInItem);\r\n        return this.http\r\n            .post<IStockInItem>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(stockInItem: IStockInItem): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(stockInItem);\r\n        return this.http\r\n            .put<IStockInItem>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    find(id: number): Observable<EntityResponseType> {\r\n        return this.http\r\n            .get<IStockInItem>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    query(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<IStockInItem[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    search(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<IStockInItem[]>(this.resourceSearchUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    protected convertDateFromClient(stockInItem: IStockInItem): IStockInItem {\r\n        const copy: IStockInItem = Object.assign({}, stockInItem, {\r\n            mfgDate: stockInItem.mfgDate != null && stockInItem.mfgDate.isValid() ? stockInItem.mfgDate.format(DATE_FORMAT) : null,\r\n            expiryDate:\r\n                stockInItem.expiryDate != null && stockInItem.expiryDate.isValid() ? stockInItem.expiryDate.format(DATE_FORMAT) : null,\r\n            stockInDate: stockInItem.stockInDate != null && stockInItem.stockInDate.isValid() ? stockInItem.stockInDate.toJSON() : null\r\n        });\r\n        return copy;\r\n    }\r\n\r\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n        if (res.body) {\r\n            res.body.mfgDate = res.body.mfgDate != null ? moment(res.body.mfgDate) : null;\r\n            res.body.expiryDate = res.body.expiryDate != null ? moment(res.body.expiryDate) : null;\r\n            res.body.stockInDate = res.body.stockInDate != null ? moment(res.body.stockInDate) : null;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n        if (res.body) {\r\n            res.body.forEach((stockInItem: IStockInItem) => {\r\n                stockInItem.mfgDate = stockInItem.mfgDate != null ? moment(stockInItem.mfgDate) : null;\r\n                stockInItem.expiryDate = stockInItem.expiryDate != null ? moment(stockInItem.expiryDate) : null;\r\n                stockInItem.stockInDate = stockInItem.stockInDate != null ? moment(stockInItem.stockInDate) : null;\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n}\r\n"]}]}