{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\experience-information\\experience-information.route.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\experience-information\\experience-information.route.ts","mtime":1625565386987},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar experience_information_model_1 = require(\"app/shared/model/experience-information.model\");\r\nvar experience_information_service_1 = require(\"./experience-information.service\");\r\nvar experience_information_component_1 = require(\"./experience-information.component\");\r\nvar experience_information_detail_component_1 = require(\"./experience-information-detail.component\");\r\nvar experience_information_update_component_1 = require(\"./experience-information-update.component\");\r\nvar experience_information_delete_dialog_component_1 = require(\"./experience-information-delete-dialog.component\");\r\nvar ExperienceInformationResolve = /** @class */ (function () {\r\n    function ExperienceInformationResolve(service) {\r\n        this.service = service;\r\n    }\r\n    ExperienceInformationResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        var employeeId = route.params['employeeId'] ? route.params['employeeId'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (experienceInformation) { return experienceInformation.body; }));\r\n        }\r\n        else if (employeeId) {\r\n            var experienceInformation = new experience_information_model_1.ExperienceInformation();\r\n            experienceInformation.employeeId = employeeId;\r\n            return rxjs_1.of(experienceInformation);\r\n        }\r\n        return rxjs_1.of(new experience_information_model_1.ExperienceInformation());\r\n    };\r\n    var _a;\r\n    ExperienceInformationResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof experience_information_service_1.ExperienceInformationService !== \"undefined\" && experience_information_service_1.ExperienceInformationService) === \"function\" ? _a : Object])\r\n    ], ExperienceInformationResolve);\r\n    return ExperienceInformationResolve;\r\n}());\r\nexports.ExperienceInformationResolve = ExperienceInformationResolve;\r\nexports.experienceInformationRoute = [\r\n    {\r\n        path: '',\r\n        component: experience_information_component_1.ExperienceInformationComponent,\r\n        resolve: {\r\n            pagingParams: ng_jhipster_1.JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            defaultSort: 'id,asc',\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: experience_information_detail_component_1.ExperienceInformationDetailComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: experience_information_update_component_1.ExperienceInformationUpdateComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':employeeId/new',\r\n        component: experience_information_update_component_1.ExperienceInformationUpdateComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: experience_information_update_component_1.ExperienceInformationUpdateComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.experienceInformationPopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: experience_information_delete_dialog_component_1.ExperienceInformationDeletePopupComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\experience-information\\experience-information.route.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\experience-information\\experience-information.route.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { JhiPaginationUtil, JhiResolvePagingParams } from 'ng-jhipster';\r\nimport { UserRouteAccessService } from 'app/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ExperienceInformation } from 'app/shared/model/experience-information.model';\r\nimport { ExperienceInformationService } from './experience-information.service';\r\nimport { ExperienceInformationComponent } from './experience-information.component';\r\nimport { ExperienceInformationDetailComponent } from './experience-information-detail.component';\r\nimport { ExperienceInformationUpdateComponent } from './experience-information-update.component';\r\nimport { ExperienceInformationDeletePopupComponent } from './experience-information-delete-dialog.component';\r\nimport { IExperienceInformation } from 'app/shared/model/experience-information.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ExperienceInformationResolve implements Resolve<IExperienceInformation> {\r\n    constructor(private service: ExperienceInformationService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IExperienceInformation> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        const employeeId = route.params['employeeId'] ? route.params['employeeId'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<ExperienceInformation>) => response.ok),\r\n                map((experienceInformation: HttpResponse<ExperienceInformation>) => experienceInformation.body)\r\n            );\r\n        } else if (employeeId) {\r\n            const experienceInformation: IExperienceInformation = new ExperienceInformation();\r\n            experienceInformation.employeeId = employeeId;\r\n            return of(experienceInformation);\r\n        }\r\n        return of(new ExperienceInformation());\r\n    }\r\n}\r\n\r\nexport const experienceInformationRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: ExperienceInformationComponent,\r\n        resolve: {\r\n            pagingParams: JhiResolvePagingParams\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            defaultSort: 'id,asc',\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: ExperienceInformationDetailComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: ExperienceInformationUpdateComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':employeeId/new',\r\n        component: ExperienceInformationUpdateComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: ExperienceInformationUpdateComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n\r\nexport const experienceInformationPopupRoute: Routes = [\r\n    {\r\n        path: ':id/delete',\r\n        component: ExperienceInformationDeletePopupComponent,\r\n        resolve: {\r\n            experienceInformation: ExperienceInformationResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_EMPLOYEE_MANAGEMENT', 'ROLE_ADMIN'],\r\n            pageTitle: 'ExperienceInformations'\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n"]}]}