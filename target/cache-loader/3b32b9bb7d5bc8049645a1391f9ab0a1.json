{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\payroll-management\\payroll-management.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\payroll-management\\payroll-management.component.ts","mtime":1625565387384},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar payroll_management_model_1 = require(\"app/shared/model/payroll-management.model\");\r\nvar core_2 = require(\"app/core\");\r\nvar payroll_management_service_1 = require(\"./payroll-management.service\");\r\nvar office_1 = require(\"app/entities/office\");\r\nvar designation_1 = require(\"app/entities/designation\");\r\nvar employee_1 = require(\"app/entities/employee\");\r\nvar monthly_salary_model_1 = require(\"app/shared/model/monthly-salary.model\");\r\nvar salary_extended_1 = require(\"app/entities/salary-extended\");\r\nvar monthly_salary_extended_service_1 = require(\"app/entities/monthly-salary-extended/monthly-salary-extended.service\");\r\nvar PayrollManagementComponent = /** @class */ (function () {\r\n    function PayrollManagementComponent(jhiAlertService, eventManager, activatedRoute, accountService, officeService, designationService, employeeService, parseLinks, monthlySalaryService, salaryService, router, payrollManagementService) {\r\n        var _this = this;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.eventManager = eventManager;\r\n        this.activatedRoute = activatedRoute;\r\n        this.accountService = accountService;\r\n        this.officeService = officeService;\r\n        this.designationService = designationService;\r\n        this.employeeService = employeeService;\r\n        this.parseLinks = parseLinks;\r\n        this.monthlySalaryService = monthlySalaryService;\r\n        this.salaryService = salaryService;\r\n        this.router = router;\r\n        this.payrollManagementService = payrollManagementService;\r\n        this.predicate = 'id';\r\n        this.reverse = false;\r\n        this.itemsPerPage = 5000;\r\n        this.routeData = this.activatedRoute.data.subscribe(function (data) {\r\n            _this.page = data.pagingParams.page;\r\n            _this.previousPage = data.pagingParams.page;\r\n            _this.reverse = data.pagingParams.ascending;\r\n            _this.predicate = data.pagingParams.predicate;\r\n        });\r\n        /*this.activatedRoute.data.subscribe(({ payrollManagement }) => {\r\n            this.payrollManagementService.payrollManagement = payrollManagement;\r\n        });*/\r\n        if (this.payrollManagementService.payrollManagement == null) {\r\n            this.payrollManagementService.payrollManagement = new payroll_management_model_1.PayrollManagement();\r\n        }\r\n        else {\r\n            this.fetch();\r\n        }\r\n        /*       this.page = 1;\r\n        this.itemsPerPage = 15;*/\r\n    }\r\n    PayrollManagementComponent.prototype.fetch = function () {\r\n        var _this = this;\r\n        this.monthlySalaryMapWithEmployeeId = {};\r\n        if (this.payrollManagementService.payrollManagement.designationId) {\r\n            this.employeeService\r\n                .query({\r\n                page: this.page - 1,\r\n                size: this.itemsPerPage,\r\n                'designationId.equals': this.payrollManagementService.payrollManagement.designationId,\r\n                'officeId.equals': this.payrollManagementService.payrollManagement.officeId,\r\n                'employeeStatus.equals': 'ACTIVE'\r\n            })\r\n                .subscribe(function (res) {\r\n                _this.paginateEmployees(res.body, res.headers);\r\n                _this.getMonthlySalaries(res.body);\r\n            }, function (res) { return _this.onError(res.message); });\r\n        }\r\n        else {\r\n            this.employeeService\r\n                .query({\r\n                page: this.page - 1,\r\n                size: this.itemsPerPage,\r\n                // 'designationId.equals': this.payrollManagementService.payrollManagement.designationId!,\r\n                'officeId.equals': this.payrollManagementService.payrollManagement.officeId,\r\n                'employeeStatus.equals': 'ACTIVE'\r\n            })\r\n                .subscribe(function (res) {\r\n                _this.paginateEmployees(res.body, res.headers);\r\n                _this.getMonthlySalaries(res.body);\r\n            }, function (res) { return _this.onError(res.message); });\r\n        }\r\n    };\r\n    PayrollManagementComponent.prototype.downloadSalaryReport = function () {\r\n        this.salaryService.createPayrollReport(this.payrollManagementService.payrollManagement.officeId, this.year, this.payrollManagementService.payrollManagement.monthType);\r\n    };\r\n    PayrollManagementComponent.prototype.generateVouchers = function () {\r\n        var _this = this;\r\n        this.monthlySalaryService\r\n            .createSalaryVouchers(this.payrollManagementService.payrollManagement.officeId, this.year, this.payrollManagementService.payrollManagement.monthType)\r\n            .subscribe(function (response) {\r\n            _this.jhiAlertService.success('Vouchers successfully generated for valid salaries');\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.showGeneratedVouchers = function () {\r\n        var officeId = this.payrollManagementService.payrollManagement.officeId;\r\n        this.router.navigate([\r\n            '/salary-voucher-relation',\r\n            this.payrollManagementService.payrollManagement.officeId,\r\n            this.year,\r\n            this.payrollManagementService.payrollManagement.monthType,\r\n            'home'\r\n        ]);\r\n    };\r\n    PayrollManagementComponent.prototype.generatePayroll = function () {\r\n        var _this = this;\r\n        this.salaryService\r\n            .generatePayroll(this.payrollManagementService.payrollManagement.officeId, this.payrollManagementService.payrollManagement.designationId, this.year, this.payrollManagementService.payrollManagement.monthType)\r\n            .subscribe(function (res) {\r\n            _this.jhiAlertService.success('Payroll successfully generated');\r\n            _this.fetch();\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.generatePayrollEmployeeSpecific = function (employeeId, name) {\r\n        var _this = this;\r\n        this.salaryService\r\n            .generatePayrollEmployeeSpecific(this.payrollManagementService.payrollManagement.officeId, this.year, this.payrollManagementService.payrollManagement.monthType, employeeId)\r\n            .subscribe(function (res) {\r\n            _this.jhiAlertService.success('Payroll successfully generated for employee: ' + name);\r\n            _this.fetch();\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.getMonthlySalaries = function (employees) {\r\n        var _this = this;\r\n        var employeeIds = [];\r\n        employees.forEach(function (e) {\r\n            employeeIds.push(e.id);\r\n        });\r\n        this.monthlySalaryMapWithEmployeeId = {};\r\n        this.monthlySalaryService\r\n            .query({\r\n            'year.equals': this.year,\r\n            'month.equals': this.payrollManagementService.payrollManagement.monthType,\r\n            'employeeId.in': employeeIds\r\n        })\r\n            .subscribe(function (res) {\r\n            if (res.body.length === 0) {\r\n                _this.payrollGenerated = false;\r\n            }\r\n            else {\r\n                _this.payrollGenerated = true;\r\n                _this.monthlySalaryMapWithEmployeeId = {};\r\n                res.body.forEach(function (m) {\r\n                    _this.monthlySalaryMapWithEmployeeId[m.employeeId] = m;\r\n                    console.log('###########');\r\n                    console.log(m);\r\n                });\r\n            }\r\n        }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    PayrollManagementComponent.prototype.paginateEmployees = function (data, headers) {\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.employees = data;\r\n    };\r\n    PayrollManagementComponent.prototype.loadPage = function (page) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    };\r\n    PayrollManagementComponent.prototype.transition = function () {\r\n        this.router.navigate(['/payroll-managements'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                search: this.currentSearch,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    };\r\n    PayrollManagementComponent.prototype.loadAll = function () {\r\n        var _this = this;\r\n        this.reverse = true;\r\n        this.officeService\r\n            .query({\r\n            page: 0,\r\n            size: 200,\r\n            sort: this.sort()\r\n        })\r\n            .subscribe(function (res) {\r\n            _this.officeList = res.body;\r\n            if (!_this.payrollManagementService.payrollManagement.officeId)\r\n                _this.payrollManagementService.payrollManagement.officeId = _this.officeList[0].id;\r\n        }, function (res) { return _this.onError(res.message); });\r\n        this.designationService\r\n            .query({\r\n            page: 0,\r\n            size: 200,\r\n            sort: this.sort()\r\n        })\r\n            .subscribe(function (res) {\r\n            _this.designationList = res.body;\r\n        }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    PayrollManagementComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        var date = new Date();\r\n        this.year = date.getFullYear();\r\n        this.loadAll();\r\n        this.accountService.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n        });\r\n        this.registerChangeInPayrollManagements();\r\n        if (!this.payrollManagementService.payrollManagement.monthType)\r\n            this.payrollManagementService.payrollManagement.monthType = monthly_salary_model_1.MonthType.AUGUST;\r\n    };\r\n    PayrollManagementComponent.prototype.registerChangeInPayrollManagements = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.eventManager.subscribe('payrollManagementListModification', function (response) { return _this.loadAll(); });\r\n    };\r\n    PayrollManagementComponent.prototype.sort = function () {\r\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    };\r\n    PayrollManagementComponent.prototype.ngOnDestroy = function () {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    };\r\n    PayrollManagementComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    PayrollManagementComponent.prototype.approvedByManager = function (monthlySalary) {\r\n        monthlySalary.status = monthly_salary_model_1.MonthlySalaryStatus.APPROVED_BY_MANAGER;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe(function (res) {\r\n            monthlySalary = res.body;\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.approvedByAccounts = function (monthlySalary) {\r\n        monthlySalary.status = monthly_salary_model_1.MonthlySalaryStatus.APPROVED_BY_ACCOUNTS;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe(function (res) {\r\n            monthlySalary = res.body;\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.modificationRequestByAccounts = function (monthlySalary) {\r\n        monthlySalary.status = monthly_salary_model_1.MonthlySalaryStatus.MODIFICATION_REQUEST_BY_ACCOUNTS;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe(function (res) {\r\n            monthlySalary = res.body;\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.approvedByCFO = function (monthlySalary) {\r\n        monthlySalary.status = monthly_salary_model_1.MonthlySalaryStatus.APPROVED_BY_CFO;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe(function (res) {\r\n            monthlySalary = res.body;\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.modificationRequestByCFO = function (monthlySalary) {\r\n        monthlySalary.status = monthly_salary_model_1.MonthlySalaryStatus.MODIFICATION_REQUEST_BY_CFO;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe(function (res) {\r\n            monthlySalary = res.body;\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.approvedByMD = function (monthlySalary) {\r\n        monthlySalary.status = monthly_salary_model_1.MonthlySalaryStatus.APPROVED_BY_MD;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe(function (res) {\r\n            monthlySalary = res.body;\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.modificationRequestByMD = function (monthlySalary) {\r\n        monthlySalary.status = monthly_salary_model_1.MonthlySalaryStatus.APPROVED_BY_MD;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe(function (res) {\r\n            monthlySalary = res.body;\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.approveAll = function () {\r\n        var _this = this;\r\n        this.salaryService\r\n            .approveAll(this.payrollManagementService.payrollManagement.officeId, this.payrollManagementService.payrollManagement.designationId, this.year, this.payrollManagementService.payrollManagement.monthType)\r\n            .subscribe(function (res) {\r\n            _this.fetch();\r\n        });\r\n    };\r\n    PayrollManagementComponent.prototype.rejectAll = function () {\r\n        var _this = this;\r\n        this.salaryService\r\n            .rejectAll(this.payrollManagementService.payrollManagement.officeId, this.payrollManagementService.payrollManagement.designationId, this.year, this.payrollManagementService.payrollManagement.monthType)\r\n            .subscribe(function (res) {\r\n            _this.fetch();\r\n        });\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n    PayrollManagementComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-payroll-management',\r\n            templateUrl: './payroll-management.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _b : Object, typeof (_c = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _c : Object, typeof (_d = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _d : Object, typeof (_e = typeof office_1.OfficeService !== \"undefined\" && office_1.OfficeService) === \"function\" ? _e : Object, typeof (_f = typeof designation_1.DesignationService !== \"undefined\" && designation_1.DesignationService) === \"function\" ? _f : Object, typeof (_g = typeof employee_1.EmployeeService !== \"undefined\" && employee_1.EmployeeService) === \"function\" ? _g : Object, typeof (_h = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _h : Object, typeof (_j = typeof monthly_salary_extended_service_1.MonthlySalaryExtendedService !== \"undefined\" && monthly_salary_extended_service_1.MonthlySalaryExtendedService) === \"function\" ? _j : Object, typeof (_k = typeof salary_extended_1.SalaryExtendedService !== \"undefined\" && salary_extended_1.SalaryExtendedService) === \"function\" ? _k : Object, typeof (_l = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _l : Object, typeof (_m = typeof payroll_management_service_1.PayrollManagementService !== \"undefined\" && payroll_management_service_1.PayrollManagementService) === \"function\" ? _m : Object])\r\n    ], PayrollManagementComponent);\r\n    return PayrollManagementComponent;\r\n}());\r\nexports.PayrollManagementComponent = PayrollManagementComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\payroll-management\\payroll-management.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\payroll-management\\payroll-management.component.ts"],"names":[],"mappings":";;;AAAA,sCAA6D;AAE7D,0CAAyD;AAEzD,2CAA8E;AAE9E,sFAA8E;AAC9E,iCAA0C;AAC1C,2EAAwE;AAGxE,8CAAoD;AACpD,wDAA8D;AAC9D,kDAAwD;AAGxD,8EAAsH;AACtH,gEAAqE;AACrE,wHAAoH;AAOpH;IAoBI,oCACc,eAAgC,EAChC,YAA6B,EAC7B,cAA8B,EAC9B,cAA8B,EAC9B,aAA4B,EAC5B,kBAAsC,EACtC,eAAgC,EAChC,UAAyB,EACzB,oBAAkD,EAClD,aAAoC,EACpC,MAAc,EACjB,wBAAkD;QAZ7D,iBAiCC;QAhCa,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,eAAU,GAAV,UAAU,CAAe;QACzB,yBAAoB,GAApB,oBAAoB,CAA8B;QAClD,kBAAa,GAAb,aAAa,CAAuB;QACpC,WAAM,GAAN,MAAM,CAAQ;QACjB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAEzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAA,IAAI;YACpD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC3C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;YAC3C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QACjD,CAAC,CAAC,CAAC;QACH;;aAEK;QACL,IAAI,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,IAAI,IAAI,EAAE;YACzD,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,GAAG,IAAI,4CAAiB,EAAE,CAAC;SAC7E;aAAM;YACH,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;QACD;iCACyB;IAC7B,CAAC;IAED,0CAAK,GAAL;QAAA,iBAmCC;QAlCG,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;QACzC,IAAI,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,aAAa,EAAE;YAC/D,IAAI,CAAC,eAAe;iBACf,KAAK,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC;gBACnB,IAAI,EAAE,IAAI,CAAC,YAAY;gBACvB,sBAAsB,EAAE,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,aAAc;gBACtF,iBAAiB,EAAE,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ;gBAC3E,uBAAuB,EAAE,QAAQ;aACpC,CAAC;iBACD,SAAS,CACN,UAAC,GAA8B;gBAC3B,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC9C,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;SACT;aAAM;YACH,IAAI,CAAC,eAAe;iBACf,KAAK,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC;gBACnB,IAAI,EAAE,IAAI,CAAC,YAAY;gBACvB,0FAA0F;gBAC1F,iBAAiB,EAAE,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ;gBAC3E,uBAAuB,EAAE,QAAQ;aACpC,CAAC;iBACD,SAAS,CACN,UAAC,GAA8B;gBAC3B,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC9C,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACtC,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;SACT;IACL,CAAC;IAEM,yDAAoB,GAA3B;QACI,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAClC,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,EACxD,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS,CAC5D,CAAC;IACN,CAAC;IAEM,qDAAgB,GAAvB;QAAA,iBAUC;QATG,IAAI,CAAC,oBAAoB;aACpB,oBAAoB,CACjB,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,EACxD,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS,CAC5D;aACA,SAAS,CAAC,UAAC,QAAa;YACrB,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,oDAAoD,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,0DAAqB,GAA5B;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,CAAC;QAC1E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACjB,0BAA0B;YAC1B,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ;YACxD,IAAI,CAAC,IAAI;YACT,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS;YACzD,MAAM;SACT,CAAC,CAAC;IACP,CAAC;IAEM,oDAAe,GAAtB;QAAA,iBAYC;QAXG,IAAI,CAAC,aAAa;aACb,eAAe,CACZ,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,EACxD,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,aAAa,EAC7D,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS,CAC5D;aACA,SAAS,CAAC,UAAC,GAAQ;YAChB,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;YAC/D,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACX,CAAC;IAEM,oEAA+B,GAAtC,UAAuC,UAAkB,EAAE,IAAY;QAAvE,iBAYC;QAXG,IAAI,CAAC,aAAa;aACb,+BAA+B,CAC5B,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,EACxD,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS,EACzD,UAAU,CACb;aACA,SAAS,CAAC,UAAC,GAAQ;YAChB,KAAI,CAAC,eAAe,CAAC,OAAO,CAAC,+CAA+C,GAAG,IAAI,CAAC,CAAC;YACrF,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACX,CAAC;IAES,uDAAkB,GAA5B,UAA6B,SAAsB;QAAnD,iBA6BC;QA5BG,IAAM,WAAW,GAAa,EAAE,CAAC;QACjC,SAAS,CAAC,OAAO,CAAC,UAAA,CAAC;YACf,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;QAEzC,IAAI,CAAC,oBAAoB;aACpB,KAAK,CAAC;YACH,aAAa,EAAE,IAAI,CAAC,IAAI;YACxB,cAAc,EAAE,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS;YACzE,eAAe,EAAE,WAAW;SAC/B,CAAC;aACD,SAAS,CACN,UAAC,GAAmC;YAChC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACvB,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aACjC;iBAAM;gBACH,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,KAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;gBACzC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC;oBACd,KAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;oBACtD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;aACN;QACL,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;IACV,CAAC;IAES,sDAAiB,GAA3B,UAA4B,IAAiB,EAAE,OAAoB;QAC/D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,6CAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAED,+CAAU,GAAV;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,CAAC,EAAE;YAC3C,WAAW,EAAE;gBACT,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,YAAY;gBACvB,MAAM,EAAE,IAAI,CAAC,aAAa;gBAC1B,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;aAC/D;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,4CAAO,GAAP;QAAA,iBA6BC;QA5BG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa;aACb,KAAK,CAAC;YACH,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;SACpB,CAAC;aACD,SAAS,CACN,UAAC,GAA2B;YACxB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC;YAC3B,IAAI,CAAC,KAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ;gBACzD,KAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACzF,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;QAEN,IAAI,CAAC,kBAAkB;aAClB,KAAK,CAAC;YACH,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;SACpB,CAAC;aACD,SAAS,CACN,UAAC,GAAgC;YAC7B,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC,IAAI,CAAC;QACpC,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;IACV,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAUC;QATG,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACvC,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kCAAkC,EAAE,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS;YAC1D,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS,GAAG,gCAAS,CAAC,MAAM,CAAC;IACrF,CAAC;IAED,uEAAkC,GAAlC;QAAA,iBAEC;QADG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,mCAAmC,EAAE,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,OAAO,EAAE,EAAd,CAAc,CAAC,CAAC;IACxH,CAAC;IAED,yCAAI,GAAJ;QACI,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACxE,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,gDAAW,GAAX;QACI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC;IAES,4CAAO,GAAjB,UAAkB,YAAoB;QAClC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAED,sDAAiB,GAAjB,UAAkB,aAA6B;QAC3C,aAAa,CAAC,MAAM,GAAG,0CAAmB,CAAC,mBAAmB,CAAC;QAC/D,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiC;YACxF,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uDAAkB,GAAlB,UAAmB,aAA6B;QAC5C,aAAa,CAAC,MAAM,GAAG,0CAAmB,CAAC,oBAAoB,CAAC;QAChE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiC;YACxF,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kEAA6B,GAA7B,UAA8B,aAA6B;QACvD,aAAa,CAAC,MAAM,GAAG,0CAAmB,CAAC,gCAAgC,CAAC;QAC5E,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiC;YACxF,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAa,GAAb,UAAc,aAA6B;QACvC,aAAa,CAAC,MAAM,GAAG,0CAAmB,CAAC,eAAe,CAAC;QAC3D,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiC;YACxF,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6DAAwB,GAAxB,UAAyB,aAA6B;QAClD,aAAa,CAAC,MAAM,GAAG,0CAAmB,CAAC,2BAA2B,CAAC;QACvE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiC;YACxF,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iDAAY,GAAZ,UAAa,aAA6B;QACtC,aAAa,CAAC,MAAM,GAAG,0CAAmB,CAAC,cAAc,CAAC;QAC1D,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiC;YACxF,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4DAAuB,GAAvB,UAAwB,aAA6B;QACjD,aAAa,CAAC,MAAM,GAAG,0CAAmB,CAAC,cAAc,CAAC;QAC1D,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,GAAiC;YACxF,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,+CAAU,GAAV;QAAA,iBAWC;QAVG,IAAI,CAAC,aAAa;aACb,UAAU,CACP,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,EACxD,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,aAAa,EAC7D,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS,CAC5D;aACA,SAAS,CAAC,UAAA,GAAG;YACV,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACX,CAAC;IAED,8CAAS,GAAT;QAAA,iBAWC;QAVG,IAAI,CAAC,aAAa;aACb,SAAS,CACN,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,QAAQ,EACxD,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,aAAa,EAC7D,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,SAAS,CAC5D;aACA,SAAS,CAAC,UAAA,GAAG;YACV,KAAI,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACX,CAAC;;IAvVQ,0BAA0B;QAJtC,gBAAS,CAAC;YACP,QAAQ,EAAE,wBAAwB;YAClC,WAAW,EAAE,qCAAqC;SACrD,CAAC;qEAsBiC,6BAAe,oBAAf,6BAAe,oDAClB,6BAAe,oBAAf,6BAAe,oDACb,uBAAc,oBAAd,uBAAc,oDACd,qBAAc,oBAAd,qBAAc,oDACf,sBAAa,oBAAb,sBAAa,oDACR,gCAAkB,oBAAlB,gCAAkB,oDACrB,0BAAe,oBAAf,0BAAe,oDACpB,2BAAa,oBAAb,2BAAa,oDACH,8DAA4B,oBAA5B,8DAA4B,oDACnC,uCAAqB,oBAArB,uCAAqB,oDAC5B,eAAM,oBAAN,eAAM,oDACS,qDAAwB,oBAAxB,qDAAwB;OAhCpD,0BAA0B,CAwVtC;IAAD,iCAAC;CAAA,AAxVD,IAwVC;AAxVY,gEAA0B","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { JhiAlertService, JhiEventManager, JhiParseLinks } from 'ng-jhipster';\r\n\r\nimport { PayrollManagement } from 'app/shared/model/payroll-management.model';\r\nimport { AccountService } from 'app/core';\r\nimport { PayrollManagementService } from './payroll-management.service';\r\nimport { Office } from 'app/shared/model/office.model';\r\nimport { Designation } from 'app/shared/model/designation.model';\r\nimport { OfficeService } from 'app/entities/office';\r\nimport { DesignationService } from 'app/entities/designation';\r\nimport { EmployeeService } from 'app/entities/employee';\r\nimport { Employee, IEmployee } from 'app/shared/model/employee.model';\r\nimport { MonthlySalaryService } from 'app/entities/monthly-salary';\r\nimport { IMonthlySalary, MonthlySalary, MonthlySalaryStatus, MonthType } from 'app/shared/model/monthly-salary.model';\r\nimport { SalaryExtendedService } from 'app/entities/salary-extended';\r\nimport { MonthlySalaryExtendedService } from 'app/entities/monthly-salary-extended/monthly-salary-extended.service';\r\nimport { ITEMS_PER_PAGE } from 'app/shared';\r\n\r\n@Component({\r\n    selector: 'jhi-payroll-management',\r\n    templateUrl: './payroll-management.component.html'\r\n})\r\nexport class PayrollManagementComponent implements OnInit, OnDestroy {\r\n    year: number;\r\n    currentAccount: any;\r\n    eventSubscriber: Subscription;\r\n    currentSearch: string;\r\n    officeList: Office[];\r\n    designationList: Designation[];\r\n    predicate: any;\r\n    reverse: any;\r\n    page: number;\r\n    itemsPerPage: number;\r\n    employees: Employee[];\r\n    monthlySalaries: MonthlySalary[];\r\n    monthlySalaryMapWithEmployeeId: any;\r\n    links: any;\r\n    totalItems: any;\r\n    payrollGenerated: boolean;\r\n    previousPage: any;\r\n    routeData: any;\r\n\r\n    constructor(\r\n        protected jhiAlertService: JhiAlertService,\r\n        protected eventManager: JhiEventManager,\r\n        protected activatedRoute: ActivatedRoute,\r\n        protected accountService: AccountService,\r\n        protected officeService: OfficeService,\r\n        protected designationService: DesignationService,\r\n        protected employeeService: EmployeeService,\r\n        protected parseLinks: JhiParseLinks,\r\n        protected monthlySalaryService: MonthlySalaryExtendedService,\r\n        protected salaryService: SalaryExtendedService,\r\n        protected router: Router,\r\n        public payrollManagementService: PayrollManagementService\r\n    ) {\r\n        this.predicate = 'id';\r\n        this.reverse = false;\r\n        this.itemsPerPage = 5000;\r\n        this.routeData = this.activatedRoute.data.subscribe(data => {\r\n            this.page = data.pagingParams.page;\r\n            this.previousPage = data.pagingParams.page;\r\n            this.reverse = data.pagingParams.ascending;\r\n            this.predicate = data.pagingParams.predicate;\r\n        });\r\n        /*this.activatedRoute.data.subscribe(({ payrollManagement }) => {\r\n            this.payrollManagementService.payrollManagement = payrollManagement;\r\n        });*/\r\n        if (this.payrollManagementService.payrollManagement == null) {\r\n            this.payrollManagementService.payrollManagement = new PayrollManagement();\r\n        } else {\r\n            this.fetch();\r\n        }\r\n        /*       this.page = 1;\r\n        this.itemsPerPage = 15;*/\r\n    }\r\n\r\n    fetch() {\r\n        this.monthlySalaryMapWithEmployeeId = {};\r\n        if (this.payrollManagementService.payrollManagement.designationId) {\r\n            this.employeeService\r\n                .query({\r\n                    page: this.page - 1,\r\n                    size: this.itemsPerPage,\r\n                    'designationId.equals': this.payrollManagementService.payrollManagement.designationId!,\r\n                    'officeId.equals': this.payrollManagementService.payrollManagement.officeId,\r\n                    'employeeStatus.equals': 'ACTIVE'\r\n                })\r\n                .subscribe(\r\n                    (res: HttpResponse<IEmployee[]>) => {\r\n                        this.paginateEmployees(res.body, res.headers);\r\n                        this.getMonthlySalaries(res.body);\r\n                    },\r\n                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                );\r\n        } else {\r\n            this.employeeService\r\n                .query({\r\n                    page: this.page - 1,\r\n                    size: this.itemsPerPage,\r\n                    // 'designationId.equals': this.payrollManagementService.payrollManagement.designationId!,\r\n                    'officeId.equals': this.payrollManagementService.payrollManagement.officeId,\r\n                    'employeeStatus.equals': 'ACTIVE'\r\n                })\r\n                .subscribe(\r\n                    (res: HttpResponse<IEmployee[]>) => {\r\n                        this.paginateEmployees(res.body, res.headers);\r\n                        this.getMonthlySalaries(res.body);\r\n                    },\r\n                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                );\r\n        }\r\n    }\r\n\r\n    public downloadSalaryReport(): void {\r\n        this.salaryService.createPayrollReport(\r\n            this.payrollManagementService.payrollManagement.officeId,\r\n            this.year,\r\n            this.payrollManagementService.payrollManagement.monthType\r\n        );\r\n    }\r\n\r\n    public generateVouchers() {\r\n        this.monthlySalaryService\r\n            .createSalaryVouchers(\r\n                this.payrollManagementService.payrollManagement.officeId,\r\n                this.year,\r\n                this.payrollManagementService.payrollManagement.monthType\r\n            )\r\n            .subscribe((response: any) => {\r\n                this.jhiAlertService.success('Vouchers successfully generated for valid salaries');\r\n            });\r\n    }\r\n\r\n    public showGeneratedVouchers() {\r\n        const officeId = this.payrollManagementService.payrollManagement.officeId;\r\n        this.router.navigate([\r\n            '/salary-voucher-relation',\r\n            this.payrollManagementService.payrollManagement.officeId,\r\n            this.year,\r\n            this.payrollManagementService.payrollManagement.monthType,\r\n            'home'\r\n        ]);\r\n    }\r\n\r\n    public generatePayroll() {\r\n        this.salaryService\r\n            .generatePayroll(\r\n                this.payrollManagementService.payrollManagement.officeId,\r\n                this.payrollManagementService.payrollManagement.designationId,\r\n                this.year,\r\n                this.payrollManagementService.payrollManagement.monthType\r\n            )\r\n            .subscribe((res: any) => {\r\n                this.jhiAlertService.success('Payroll successfully generated');\r\n                this.fetch();\r\n            });\r\n    }\r\n\r\n    public generatePayrollEmployeeSpecific(employeeId: number, name: string) {\r\n        this.salaryService\r\n            .generatePayrollEmployeeSpecific(\r\n                this.payrollManagementService.payrollManagement.officeId,\r\n                this.year,\r\n                this.payrollManagementService.payrollManagement.monthType,\r\n                employeeId\r\n            )\r\n            .subscribe((res: any) => {\r\n                this.jhiAlertService.success('Payroll successfully generated for employee: ' + name);\r\n                this.fetch();\r\n            });\r\n    }\r\n\r\n    protected getMonthlySalaries(employees: IEmployee[]) {\r\n        const employeeIds: number[] = [];\r\n        employees.forEach(e => {\r\n            employeeIds.push(e.id);\r\n        });\r\n        this.monthlySalaryMapWithEmployeeId = {};\r\n\r\n        this.monthlySalaryService\r\n            .query({\r\n                'year.equals': this.year,\r\n                'month.equals': this.payrollManagementService.payrollManagement.monthType,\r\n                'employeeId.in': employeeIds\r\n            })\r\n            .subscribe(\r\n                (res: HttpResponse<IMonthlySalary[]>) => {\r\n                    if (res.body.length === 0) {\r\n                        this.payrollGenerated = false;\r\n                    } else {\r\n                        this.payrollGenerated = true;\r\n                        this.monthlySalaryMapWithEmployeeId = {};\r\n                        res.body.forEach(m => {\r\n                            this.monthlySalaryMapWithEmployeeId[m.employeeId] = m;\r\n                            console.log('###########');\r\n                            console.log(m);\r\n                        });\r\n                    }\r\n                },\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    protected paginateEmployees(data: IEmployee[], headers: HttpHeaders) {\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.employees = data;\r\n    }\r\n\r\n    loadPage(page: number) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    }\r\n\r\n    transition() {\r\n        this.router.navigate(['/payroll-managements'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                search: this.currentSearch,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    }\r\n\r\n    loadAll() {\r\n        this.reverse = true;\r\n        this.officeService\r\n            .query({\r\n                page: 0,\r\n                size: 200,\r\n                sort: this.sort()\r\n            })\r\n            .subscribe(\r\n                (res: HttpResponse<Office[]>) => {\r\n                    this.officeList = res.body;\r\n                    if (!this.payrollManagementService.payrollManagement.officeId)\r\n                        this.payrollManagementService.payrollManagement.officeId = this.officeList[0].id;\r\n                },\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n\r\n        this.designationService\r\n            .query({\r\n                page: 0,\r\n                size: 200,\r\n                sort: this.sort()\r\n            })\r\n            .subscribe(\r\n                (res: HttpResponse<Designation[]>) => {\r\n                    this.designationList = res.body;\r\n                },\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    ngOnInit() {\r\n        const date = new Date();\r\n        this.year = date.getFullYear();\r\n        this.loadAll();\r\n        this.accountService.identity().then(account => {\r\n            this.currentAccount = account;\r\n        });\r\n        this.registerChangeInPayrollManagements();\r\n        if (!this.payrollManagementService.payrollManagement.monthType)\r\n            this.payrollManagementService.payrollManagement.monthType = MonthType.AUGUST;\r\n    }\r\n\r\n    registerChangeInPayrollManagements() {\r\n        this.eventSubscriber = this.eventManager.subscribe('payrollManagementListModification', response => this.loadAll());\r\n    }\r\n\r\n    sort() {\r\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    approvedByManager(monthlySalary: IMonthlySalary) {\r\n        monthlySalary.status = MonthlySalaryStatus.APPROVED_BY_MANAGER;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe((res: HttpResponse<IMonthlySalary>) => {\r\n            monthlySalary = res.body;\r\n        });\r\n    }\r\n\r\n    approvedByAccounts(monthlySalary: IMonthlySalary) {\r\n        monthlySalary.status = MonthlySalaryStatus.APPROVED_BY_ACCOUNTS;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe((res: HttpResponse<IMonthlySalary>) => {\r\n            monthlySalary = res.body;\r\n        });\r\n    }\r\n\r\n    modificationRequestByAccounts(monthlySalary: IMonthlySalary) {\r\n        monthlySalary.status = MonthlySalaryStatus.MODIFICATION_REQUEST_BY_ACCOUNTS;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe((res: HttpResponse<IMonthlySalary>) => {\r\n            monthlySalary = res.body;\r\n        });\r\n    }\r\n\r\n    approvedByCFO(monthlySalary: IMonthlySalary) {\r\n        monthlySalary.status = MonthlySalaryStatus.APPROVED_BY_CFO;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe((res: HttpResponse<IMonthlySalary>) => {\r\n            monthlySalary = res.body;\r\n        });\r\n    }\r\n\r\n    modificationRequestByCFO(monthlySalary: IMonthlySalary) {\r\n        monthlySalary.status = MonthlySalaryStatus.MODIFICATION_REQUEST_BY_CFO;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe((res: HttpResponse<IMonthlySalary>) => {\r\n            monthlySalary = res.body;\r\n        });\r\n    }\r\n\r\n    approvedByMD(monthlySalary: IMonthlySalary) {\r\n        monthlySalary.status = MonthlySalaryStatus.APPROVED_BY_MD;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe((res: HttpResponse<IMonthlySalary>) => {\r\n            monthlySalary = res.body;\r\n        });\r\n    }\r\n\r\n    modificationRequestByMD(monthlySalary: IMonthlySalary) {\r\n        monthlySalary.status = MonthlySalaryStatus.APPROVED_BY_MD;\r\n        this.monthlySalaryService.update(monthlySalary).subscribe((res: HttpResponse<IMonthlySalary>) => {\r\n            monthlySalary = res.body;\r\n        });\r\n    }\r\n\r\n    approveAll(): void {\r\n        this.salaryService\r\n            .approveAll(\r\n                this.payrollManagementService.payrollManagement.officeId,\r\n                this.payrollManagementService.payrollManagement.designationId,\r\n                this.year,\r\n                this.payrollManagementService.payrollManagement.monthType\r\n            )\r\n            .subscribe(res => {\r\n                this.fetch();\r\n            });\r\n    }\r\n\r\n    rejectAll(): void {\r\n        this.salaryService\r\n            .rejectAll(\r\n                this.payrollManagementService.payrollManagement.officeId,\r\n                this.payrollManagementService.payrollManagement.designationId,\r\n                this.year,\r\n                this.payrollManagementService.payrollManagement.monthType\r\n            )\r\n            .subscribe(res => {\r\n                this.fetch();\r\n            });\r\n    }\r\n}\r\n"]}]}