{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\holiday-extended\\holiday-extended.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\holiday-extended\\holiday-extended.service.ts","mtime":1625565387055},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar holiday_1 = require(\"app/entities/holiday\");\r\nvar SoptorshiUtil_1 = require(\"app/shared/util/SoptorshiUtil\");\r\nvar HolidayExtendedService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HolidayExtendedService, _super);\r\n    function HolidayExtendedService(http) {\r\n        var _this = _super.call(this, http) || this;\r\n        _this.http = http;\r\n        _this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/extended/holidays';\r\n        _this.resourceSearchUrl = app_constants_1.SERVER_API_URL + 'api/_search/holidays';\r\n        return _this;\r\n    }\r\n    HolidayExtendedService.prototype.generateReport = function () {\r\n        return this.http\r\n            .get(this.resourceUrl + \"/report/all\", {\r\n            responseType: 'blob'\r\n        })\r\n            .subscribe(function (data) {\r\n            SoptorshiUtil_1.SoptorshiUtil.writeFileContent(data, 'application/pdf', 'Holidays');\r\n        });\r\n    };\r\n    HolidayExtendedService.prototype.generateReportByYear = function (pYear) {\r\n        return this.http\r\n            .get(this.resourceUrl + \"/report/year/\" + pYear, {\r\n            responseType: 'blob'\r\n        })\r\n            .subscribe(function (data) {\r\n            SoptorshiUtil_1.SoptorshiUtil.writeFileContent(data, 'application/pdf', \"Holidays of \" + pYear);\r\n        });\r\n    };\r\n    var _a;\r\n    HolidayExtendedService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], HolidayExtendedService);\r\n    return HolidayExtendedService;\r\n}(holiday_1.HolidayService));\r\nexports.HolidayExtendedService = HolidayExtendedService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\holiday-extended\\holiday-extended.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\holiday-extended\\holiday-extended.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAgE;AAEhE,mDAAmD;AAEnD,gDAAsD;AACtD,+DAA8D;AAM9D;IAA4C,kDAAc;IAItD,gCAAsB,IAAgB;QAAtC,YACI,kBAAM,IAAI,CAAC,SACd;QAFqB,UAAI,GAAJ,IAAI,CAAY;QAH/B,iBAAW,GAAG,8BAAc,GAAG,uBAAuB,CAAC;QACvD,uBAAiB,GAAG,8BAAc,GAAG,sBAAsB,CAAC;;IAInE,CAAC;IAED,+CAAc,GAAd;QACI,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAI,IAAI,CAAC,WAAW,gBAAa,EAAE;YACnC,YAAY,EAAE,MAAM;SACvB,CAAC;aACD,SAAS,CAAC,UAAC,IAAS;YACjB,6BAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,iBAAiB,EAAE,UAAU,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACX,CAAC;IAED,qDAAoB,GAApB,UAAqB,KAAa;QAC9B,OAAO,IAAI,CAAC,IAAI;aACX,GAAG,CAAI,IAAI,CAAC,WAAW,qBAAgB,KAAO,EAAE;YAC7C,YAAY,EAAE,MAAM;SACvB,CAAC;aACD,SAAS,CAAC,UAAC,IAAS;YACjB,6BAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,iBAAiB,EAAE,iBAAe,KAAO,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC;IACX,CAAC;;IA1BQ,sBAAsB;QADlC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAKH,iBAAU,oBAAV,iBAAU;OAJ7B,sBAAsB,CA2BlC;IAAD,6BAAC;CAAA,AA3BD,CAA4C,wBAAc,GA2BzD;AA3BY,wDAAsB","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { IHoliday } from 'app/shared/model/holiday.model';\r\nimport { HolidayService } from 'app/entities/holiday';\r\nimport { SoptorshiUtil } from 'app/shared/util/SoptorshiUtil';\r\n\r\ntype EntityResponseType = HttpResponse<IHoliday>;\r\ntype EntityArrayResponseType = HttpResponse<IHoliday[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HolidayExtendedService extends HolidayService {\r\n    public resourceUrl = SERVER_API_URL + 'api/extended/holidays';\r\n    public resourceSearchUrl = SERVER_API_URL + 'api/_search/holidays';\r\n\r\n    constructor(protected http: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    generateReport() {\r\n        return this.http\r\n            .get(`${this.resourceUrl}/report/all`, {\r\n                responseType: 'blob'\r\n            })\r\n            .subscribe((data: any) => {\r\n                SoptorshiUtil.writeFileContent(data, 'application/pdf', 'Holidays');\r\n            });\r\n    }\r\n\r\n    generateReportByYear(pYear: number) {\r\n        return this.http\r\n            .get(`${this.resourceUrl}/report/year/${pYear}`, {\r\n                responseType: 'blob'\r\n            })\r\n            .subscribe((data: any) => {\r\n                SoptorshiUtil.writeFileContent(data, 'application/pdf', `Holidays of ${pYear}`);\r\n            });\r\n    }\r\n}\r\n"]}]}