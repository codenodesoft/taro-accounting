{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\supply-zone-manager\\supply-zone-manager.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\supply-zone-manager\\supply-zone-manager.service.ts","mtime":1625565388096},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar moment = require(\"moment\");\r\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar SupplyZoneManagerService = /** @class */ (function () {\r\n    function SupplyZoneManagerService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/supply-zone-managers';\r\n        this.resourceSearchUrl = app_constants_1.SERVER_API_URL + 'api/_search/supply-zone-managers';\r\n    }\r\n    SupplyZoneManagerService.prototype.create = function (supplyZoneManager) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(supplyZoneManager);\r\n        return this.http\r\n            .post(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    SupplyZoneManagerService.prototype.update = function (supplyZoneManager) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(supplyZoneManager);\r\n        return this.http\r\n            .put(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    SupplyZoneManagerService.prototype.find = function (id) {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + \"/\" + id, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    SupplyZoneManagerService.prototype.query = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    SupplyZoneManagerService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    SupplyZoneManagerService.prototype.search = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceSearchUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    SupplyZoneManagerService.prototype.convertDateFromClient = function (supplyZoneManager) {\r\n        var copy = Object.assign({}, supplyZoneManager, {\r\n            endDate: supplyZoneManager.endDate != null && supplyZoneManager.endDate.isValid()\r\n                ? supplyZoneManager.endDate.format(input_constants_1.DATE_FORMAT)\r\n                : null,\r\n            createdOn: supplyZoneManager.createdOn != null && supplyZoneManager.createdOn.isValid() ? supplyZoneManager.createdOn.toJSON() : null,\r\n            updatedOn: supplyZoneManager.updatedOn != null && supplyZoneManager.updatedOn.isValid() ? supplyZoneManager.updatedOn.toJSON() : null\r\n        });\r\n        return copy;\r\n    };\r\n    SupplyZoneManagerService.prototype.convertDateFromServer = function (res) {\r\n        if (res.body) {\r\n            res.body.endDate = res.body.endDate != null ? moment(res.body.endDate) : null;\r\n            res.body.createdOn = res.body.createdOn != null ? moment(res.body.createdOn) : null;\r\n            res.body.updatedOn = res.body.updatedOn != null ? moment(res.body.updatedOn) : null;\r\n        }\r\n        return res;\r\n    };\r\n    SupplyZoneManagerService.prototype.convertDateArrayFromServer = function (res) {\r\n        if (res.body) {\r\n            res.body.forEach(function (supplyZoneManager) {\r\n                supplyZoneManager.endDate = supplyZoneManager.endDate != null ? moment(supplyZoneManager.endDate) : null;\r\n                supplyZoneManager.createdOn = supplyZoneManager.createdOn != null ? moment(supplyZoneManager.createdOn) : null;\r\n                supplyZoneManager.updatedOn = supplyZoneManager.updatedOn != null ? moment(supplyZoneManager.updatedOn) : null;\r\n            });\r\n        }\r\n        return res;\r\n    };\r\n    var _a;\r\n    SupplyZoneManagerService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], SupplyZoneManagerService);\r\n    return SupplyZoneManagerService;\r\n}());\r\nexports.SupplyZoneManagerService = SupplyZoneManagerService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\supply-zone-manager\\supply-zone-manager.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\supply-zone-manager\\supply-zone-manager.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { ISupplyZoneManager } from 'app/shared/model/supply-zone-manager.model';\r\n\r\ntype EntityResponseType = HttpResponse<ISupplyZoneManager>;\r\ntype EntityArrayResponseType = HttpResponse<ISupplyZoneManager[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SupplyZoneManagerService {\r\n    public resourceUrl = SERVER_API_URL + 'api/supply-zone-managers';\r\n    public resourceSearchUrl = SERVER_API_URL + 'api/_search/supply-zone-managers';\r\n\r\n    constructor(protected http: HttpClient) {}\r\n\r\n    create(supplyZoneManager: ISupplyZoneManager): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(supplyZoneManager);\r\n        return this.http\r\n            .post<ISupplyZoneManager>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(supplyZoneManager: ISupplyZoneManager): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(supplyZoneManager);\r\n        return this.http\r\n            .put<ISupplyZoneManager>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    find(id: number): Observable<EntityResponseType> {\r\n        return this.http\r\n            .get<ISupplyZoneManager>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    query(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<ISupplyZoneManager[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    search(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<ISupplyZoneManager[]>(this.resourceSearchUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    protected convertDateFromClient(supplyZoneManager: ISupplyZoneManager): ISupplyZoneManager {\r\n        const copy: ISupplyZoneManager = Object.assign({}, supplyZoneManager, {\r\n            endDate:\r\n                supplyZoneManager.endDate != null && supplyZoneManager.endDate.isValid()\r\n                    ? supplyZoneManager.endDate.format(DATE_FORMAT)\r\n                    : null,\r\n            createdOn:\r\n                supplyZoneManager.createdOn != null && supplyZoneManager.createdOn.isValid() ? supplyZoneManager.createdOn.toJSON() : null,\r\n            updatedOn:\r\n                supplyZoneManager.updatedOn != null && supplyZoneManager.updatedOn.isValid() ? supplyZoneManager.updatedOn.toJSON() : null\r\n        });\r\n        return copy;\r\n    }\r\n\r\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n        if (res.body) {\r\n            res.body.endDate = res.body.endDate != null ? moment(res.body.endDate) : null;\r\n            res.body.createdOn = res.body.createdOn != null ? moment(res.body.createdOn) : null;\r\n            res.body.updatedOn = res.body.updatedOn != null ? moment(res.body.updatedOn) : null;\r\n        }\r\n        return res;\r\n    }\r\n\r\n    protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n        if (res.body) {\r\n            res.body.forEach((supplyZoneManager: ISupplyZoneManager) => {\r\n                supplyZoneManager.endDate = supplyZoneManager.endDate != null ? moment(supplyZoneManager.endDate) : null;\r\n                supplyZoneManager.createdOn = supplyZoneManager.createdOn != null ? moment(supplyZoneManager.createdOn) : null;\r\n                supplyZoneManager.updatedOn = supplyZoneManager.updatedOn != null ? moment(supplyZoneManager.updatedOn) : null;\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n}\r\n"]}]}