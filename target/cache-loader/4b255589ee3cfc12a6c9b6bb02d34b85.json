{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-group-map-extended\\system-group-map-extended.route.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-group-map-extended\\system-group-map-extended.route.ts","mtime":1625565388154},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar system_group_map_model_1 = require(\"app/shared/model/system-group-map.model\");\r\nvar system_group_map_extended_service_1 = require(\"./system-group-map-extended.service\");\r\nvar system_group_map_extended_component_1 = require(\"./system-group-map-extended.component\");\r\nvar system_group_map_extended_detail_component_1 = require(\"./system-group-map-extended-detail.component\");\r\nvar system_group_map_extended_update_component_1 = require(\"./system-group-map-extended-update.component\");\r\nvar system_group_map_1 = require(\"app/entities/system-group-map\");\r\nvar SystemGroupMapExtendedResolve = /** @class */ (function () {\r\n    function SystemGroupMapExtendedResolve(service) {\r\n        this.service = service;\r\n    }\r\n    SystemGroupMapExtendedResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (systemGroupMap) { return systemGroupMap.body; }));\r\n        }\r\n        return rxjs_1.of(new system_group_map_model_1.SystemGroupMap());\r\n    };\r\n    var _a;\r\n    SystemGroupMapExtendedResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof system_group_map_extended_service_1.SystemGroupMapExtendedService !== \"undefined\" && system_group_map_extended_service_1.SystemGroupMapExtendedService) === \"function\" ? _a : Object])\r\n    ], SystemGroupMapExtendedResolve);\r\n    return SystemGroupMapExtendedResolve;\r\n}());\r\nexports.SystemGroupMapExtendedResolve = SystemGroupMapExtendedResolve;\r\nexports.systemGroupMapExtendedRoute = [\r\n    {\r\n        path: '',\r\n        component: system_group_map_extended_component_1.SystemGroupMapExtendedComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: system_group_map_extended_detail_component_1.SystemGroupMapExtendedDetailComponent,\r\n        resolve: {\r\n            systemGroupMap: SystemGroupMapExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: system_group_map_extended_update_component_1.SystemGroupMapExtendedUpdateComponent,\r\n        resolve: {\r\n            systemGroupMap: SystemGroupMapExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: system_group_map_extended_update_component_1.SystemGroupMapExtendedUpdateComponent,\r\n        resolve: {\r\n            systemGroupMap: SystemGroupMapExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.systemGroupMapExtendedPopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: system_group_map_1.SystemGroupMapDeletePopupComponent,\r\n        resolve: {\r\n            systemGroupMap: SystemGroupMapExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-group-map-extended\\system-group-map-extended.route.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-group-map-extended\\system-group-map-extended.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAAsC;AACtC,4CAA6C;AAC7C,kFAAyE;AACzE,yFAAoF;AACpF,6FAAwF;AACxF,2GAAqG;AACrG,2GAAqG;AAErG,kEAAmF;AAGnF;IACI,uCAAoB,OAAsC;QAAtC,YAAO,GAAP,OAAO,CAA+B;IAAG,CAAC;IAE9D,+CAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7B,kBAAM,CAAC,UAAC,QAAsC,IAAK,OAAA,QAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,EAC/D,eAAG,CAAC,UAAC,cAA4C,IAAK,OAAA,cAAc,CAAC,IAAI,EAAnB,CAAmB,CAAC,CAC7E,CAAC;SACL;QACD,OAAO,SAAE,CAAC,IAAI,uCAAc,EAAE,CAAC,CAAC;IACpC,CAAC;;IAZQ,6BAA6B;QADzC,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,iEAA6B,oBAA7B,iEAA6B;OADjD,6BAA6B,CAazC;IAAD,oCAAC;CAAA,AAbD,IAaC;AAbY,sEAA6B;AAe7B,QAAA,2BAA2B,GAAW;IAC/C;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAA+B;QAC1C,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,iBAAiB;SAC/B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,kFAAqC;QAChD,OAAO,EAAE;YACL,cAAc,EAAE,6BAA6B;SAChD;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,iBAAiB;SAC/B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,kFAAqC;QAChD,OAAO,EAAE;YACL,cAAc,EAAE,6BAA6B;SAChD;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,iBAAiB;SAC/B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,kFAAqC;QAChD,OAAO,EAAE;YACL,cAAc,EAAE,6BAA6B;SAChD;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,iBAAiB;SAC/B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,gCAAgC,GAAW;IACpD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,qDAAkC;QAC7C,OAAO,EAAE;YACL,cAAc,EAAE,6BAA6B;SAChD;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,iBAAiB;SAC/B;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\r\nimport { UserRouteAccessService } from 'app/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { SystemGroupMap } from 'app/shared/model/system-group-map.model';\r\nimport { SystemGroupMapExtendedService } from './system-group-map-extended.service';\r\nimport { SystemGroupMapExtendedComponent } from './system-group-map-extended.component';\r\nimport { SystemGroupMapExtendedDetailComponent } from './system-group-map-extended-detail.component';\r\nimport { SystemGroupMapExtendedUpdateComponent } from './system-group-map-extended-update.component';\r\nimport { ISystemGroupMap } from 'app/shared/model/system-group-map.model';\r\nimport { SystemGroupMapDeletePopupComponent } from 'app/entities/system-group-map';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SystemGroupMapExtendedResolve implements Resolve<ISystemGroupMap> {\r\n    constructor(private service: SystemGroupMapExtendedService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISystemGroupMap> {\r\n        const id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(\r\n                filter((response: HttpResponse<SystemGroupMap>) => response.ok),\r\n                map((systemGroupMap: HttpResponse<SystemGroupMap>) => systemGroupMap.body)\r\n            );\r\n        }\r\n        return of(new SystemGroupMap());\r\n    }\r\n}\r\n\r\nexport const systemGroupMapExtendedRoute: Routes = [\r\n    {\r\n        path: '',\r\n        component: SystemGroupMapExtendedComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: SystemGroupMapExtendedDetailComponent,\r\n        resolve: {\r\n            systemGroupMap: SystemGroupMapExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: SystemGroupMapExtendedUpdateComponent,\r\n        resolve: {\r\n            systemGroupMap: SystemGroupMapExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: SystemGroupMapExtendedUpdateComponent,\r\n        resolve: {\r\n            systemGroupMap: SystemGroupMapExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [UserRouteAccessService]\r\n    }\r\n];\r\n\r\nexport const systemGroupMapExtendedPopupRoute: Routes = [\r\n    {\r\n        path: ':id/delete',\r\n        component: SystemGroupMapDeletePopupComponent,\r\n        resolve: {\r\n            systemGroupMap: SystemGroupMapExtendedResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'SystemGroupMaps'\r\n        },\r\n        canActivate: [UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n"]}]}