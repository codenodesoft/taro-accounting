{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\leave-application-extended\\others-leave-application-history.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\leave-application-extended\\others-leave-application-history.component.ts","mtime":1625565387158},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"app/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar manager_1 = require(\"app/entities/manager\");\r\nvar moment = require(\"moment\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar leave_application_extended_service_1 = require(\"app/entities/leave-application-extended/leave-application-extended.service\");\r\nvar employee_extended_1 = require(\"app/entities/employee-extended\");\r\nvar OthersLeaveApplicationHistoryComponent = /** @class */ (function () {\r\n    function OthersLeaveApplicationHistoryComponent(leaveApplicationService, jhiAlertService, eventManager, parseLinks, activatedRoute, accountService, employeeService, managerService) {\r\n        this.leaveApplicationService = leaveApplicationService;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.eventManager = eventManager;\r\n        this.parseLinks = parseLinks;\r\n        this.activatedRoute = activatedRoute;\r\n        this.accountService = accountService;\r\n        this.employeeService = employeeService;\r\n        this.managerService = managerService;\r\n        this.days = shared_1.DAYS;\r\n        this.months = shared_1.MONTHS;\r\n        this.years = shared_1.YEARS();\r\n        this.fromDate = { day: new Date().getDate(), month: new Date().getMonth() + 1, year: new Date().getFullYear() };\r\n        this.toDate = { day: new Date().getDate(), month: new Date().getMonth() + 1, year: new Date().getFullYear() };\r\n        this.leaveApplications = [];\r\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\r\n        this.page = 0;\r\n        this.links = {\r\n            last: 0\r\n        };\r\n        this.predicate = 'id';\r\n        this.reverse = true;\r\n        this.currentSearch =\r\n            this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search']\r\n                ? this.activatedRoute.snapshot.params['search']\r\n                : '';\r\n    }\r\n    OthersLeaveApplicationHistoryComponent.prototype.loadAll = function () {\r\n        var _this = this;\r\n        if (this.accountService.hasAnyAuthority(['ROLE_ADMIN']) || this.accountService.hasAnyAuthority(['ROLE_LEAVE_ADMIN'])) {\r\n            if (this.fromDate.day &&\r\n                this.fromDate.month &&\r\n                this.fromDate.year &&\r\n                this.toDate.day &&\r\n                this.toDate.month &&\r\n                this.toDate.year &&\r\n                this.employee) {\r\n                var from = moment(new Date(this.fromDate.month + \"-\" + this.fromDate.day + \"-\" + this.fromDate.year));\r\n                var to = moment(new Date(this.toDate.month + \"-\" + this.toDate.day + \"-\" + this.toDate.year));\r\n                if (from.isBefore(to.add(1))) {\r\n                    this.leaveApplicationService\r\n                        .query({\r\n                        page: this.page,\r\n                        size: this.itemsPerPage,\r\n                        sort: this.sort(),\r\n                        'employeesId.equals': this.employee.id,\r\n                        'fromDate.greaterOrEqualThan': moment(new Date(this.fromDate.month + \"-\" + this.fromDate.day + \"-\" + this.fromDate.year)).format(shared_1.DATE_FORMAT),\r\n                        'toDate.lessOrEqualThan': moment(new Date(this.toDate.month + \"-\" + this.toDate.day + \"-\" + this.toDate.year)).format(shared_1.DATE_FORMAT)\r\n                    })\r\n                        .subscribe(function (ress) { return _this.paginateLeaveApplications(ress.body, ress.headers); }, function (ress) { return _this.onError(ress.message); });\r\n                }\r\n                else {\r\n                    this.onError('Invalid dates');\r\n                }\r\n            }\r\n            else {\r\n                this.onError('Invalid input');\r\n            }\r\n        }\r\n        else {\r\n            if (this.fromDate.day &&\r\n                this.fromDate.month &&\r\n                this.fromDate.year &&\r\n                this.toDate.day &&\r\n                this.toDate.month &&\r\n                this.toDate.year &&\r\n                this.employee) {\r\n                var from = moment(new Date(this.fromDate.month + \"-\" + this.fromDate.day + \"-\" + this.fromDate.year));\r\n                var to = moment(new Date(this.toDate.month + \"-\" + this.toDate.day + \"-\" + this.toDate.year));\r\n                if (from.isBefore(to.add(1))) {\r\n                    this.employeeService\r\n                        .query({\r\n                        'employeeId.equals': this.employee.employeeId\r\n                    })\r\n                        .subscribe(function (res) {\r\n                        _this.currentSearchAsEmployee = res.body[0];\r\n                        _this.managerService\r\n                            .query({\r\n                            'parentEmployeeId.equals': res.body[0].id\r\n                        })\r\n                            .subscribe(function (response) {\r\n                            if (response.body[0].employeeId === _this.currentEmployee.id) {\r\n                                _this.leaveApplicationService\r\n                                    .query({\r\n                                    page: _this.page,\r\n                                    size: _this.itemsPerPage,\r\n                                    sort: _this.sort(),\r\n                                    'employeesId.equals': _this.currentSearchAsEmployee.id,\r\n                                    'fromDate.greaterOrEqualThan': moment(new Date(_this.fromDate.month + \"-\" + _this.fromDate.day + \"-\" + _this.fromDate.year)).format(shared_1.DATE_FORMAT),\r\n                                    'toDate.lessOrEqualThan': moment(new Date(_this.toDate.month + \"-\" + _this.toDate.day + \"-\" + _this.toDate.year)).format(shared_1.DATE_FORMAT)\r\n                                })\r\n                                    .subscribe(function (ress) {\r\n                                    return _this.paginateLeaveApplications(ress.body, ress.headers);\r\n                                }, function (ress) { return _this.onError(ress.message); });\r\n                            }\r\n                        }, function (response) { return _this.onError(response.message); });\r\n                    }, function (res) { return _this.onError(res.message); });\r\n                }\r\n                else {\r\n                    this.onError('Invalid dates');\r\n                }\r\n            }\r\n            else {\r\n                this.onError('Invalid input');\r\n            }\r\n        }\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.reset = function () {\r\n        this.page = 0;\r\n        this.leaveApplications = [];\r\n        this.loadAll();\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.loadPage = function (page) {\r\n        this.page = page;\r\n        this.loadAll();\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.clear = function () {\r\n        this.leaveApplications = [];\r\n        this.links = {\r\n            last: 0\r\n        };\r\n        this.page = 0;\r\n        this.predicate = 'id';\r\n        this.reverse = true;\r\n        this.currentSearch = '';\r\n        this.loadAll();\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.search = function (query) {\r\n        if (!query) {\r\n            return this.clear();\r\n        }\r\n        this.leaveApplications = [];\r\n        this.links = {\r\n            last: 0\r\n        };\r\n        this.page = 0;\r\n        this.predicate = 'id';\r\n        this.reverse = false;\r\n        this.currentSearch = query;\r\n        this.loadAll();\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.trackEmployeeById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.accountService.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n            if (_this.accountService.hasAnyAuthority(['ROLE_ADMIN']) || _this.accountService.hasAnyAuthority(['ROLE_LEAVE_ADMIN'])) {\r\n                _this.employeeService\r\n                    .query()\r\n                    .pipe(operators_1.filter(function (mayBeOk) { return mayBeOk.ok; }), operators_1.map(function (response) { return response.body; }))\r\n                    .subscribe(function (res) { return (_this.employees = res); }, function (res) { return _this.onError(res.message); });\r\n            }\r\n            else {\r\n                _this.employeeService\r\n                    .query({\r\n                    'employeeId.equals': _this.currentAccount.login\r\n                })\r\n                    .subscribe(function (res) {\r\n                    _this.currentEmployee = res.body[0];\r\n                    _this.managerService\r\n                        .query({\r\n                        'employeeId.equals': _this.currentEmployee.id\r\n                    })\r\n                        .subscribe(function (res) {\r\n                        _this.employeesUnderSupervisor = res.body;\r\n                        var map = _this.employeesUnderSupervisor.map(function (val) { return val.parentEmployeeId; }).join(',');\r\n                        _this.employeeService\r\n                            .query({\r\n                            'id.in': [map]\r\n                        })\r\n                            .subscribe(function (res) { return (_this.employees = res.body); }, function (res) { return _this.onError(res.message); });\r\n                    }, function (res) { return _this.onError(res.message); });\r\n                }, function (res) { return _this.onError(res.message); });\r\n            }\r\n        });\r\n        this.registerChangeInLeaveApplications();\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.ngOnDestroy = function () {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.trackId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.registerChangeInLeaveApplications = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.eventManager.subscribe('leaveApplicationListModification', function (response) { return _this.reset(); });\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.sort = function () {\r\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.paginateLeaveApplications = function (data, headers) {\r\n        this.leaveApplications = [];\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        for (var i = 0; i < data.length; i++) {\r\n            this.leaveApplications.push(data[i]);\r\n        }\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.trackDayId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.trackMonthId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.trackYearId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    OthersLeaveApplicationHistoryComponent.prototype.generateReport = function () {\r\n        if (this.fromDate.day &&\r\n            this.fromDate.month &&\r\n            this.fromDate.year &&\r\n            this.toDate.day &&\r\n            this.toDate.month &&\r\n            this.toDate.year &&\r\n            this.employee) {\r\n            var from = moment(new Date(this.fromDate.month + \"-\" + this.fromDate.day + \"-\" + this.fromDate.year));\r\n            var to = moment(new Date(this.toDate.month + \"-\" + this.toDate.day + \"-\" + this.toDate.year));\r\n            if (from.isBefore(to.add(1))) {\r\n                this.leaveApplicationService.generateReportByFromDateAndToDateAndEmployeeId(from, to, this.employee.employeeId);\r\n            }\r\n            else {\r\n                this.onError('Invalid dates');\r\n            }\r\n        }\r\n        else if (this.fromDate.day &&\r\n            this.fromDate.month &&\r\n            this.fromDate.year &&\r\n            this.toDate.day &&\r\n            this.toDate.month &&\r\n            this.toDate.year) {\r\n            if (this.accountService.hasAnyAuthority(['ROLE_ADMIN', 'ROLE_LEAVE_ADMIN'])) {\r\n                var from = moment(new Date(this.fromDate.month + \"-\" + this.fromDate.day + \"-\" + this.fromDate.year));\r\n                var to = moment(new Date(this.toDate.month + \"-\" + this.toDate.day + \"-\" + this.toDate.year));\r\n                if (from.isBefore(to.add(1))) {\r\n                    this.leaveApplicationService.generateReportByFromDateAndToDate(from, to);\r\n                }\r\n                else {\r\n                    this.onError('Invalid dates');\r\n                }\r\n            }\r\n            else {\r\n                this.onError('Please fill up all the required information');\r\n            }\r\n        }\r\n        else {\r\n            this.onError('Invalid input');\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    OthersLeaveApplicationHistoryComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-others-leave-application-history',\r\n            templateUrl: './others-leave-application-history.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof leave_application_extended_service_1.LeaveApplicationExtendedService !== \"undefined\" && leave_application_extended_service_1.LeaveApplicationExtendedService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _c : Object, typeof (_d = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _f : Object, typeof (_g = typeof employee_extended_1.EmployeeExtendedService !== \"undefined\" && employee_extended_1.EmployeeExtendedService) === \"function\" ? _g : Object, typeof (_h = typeof manager_1.ManagerService !== \"undefined\" && manager_1.ManagerService) === \"function\" ? _h : Object])\r\n    ], OthersLeaveApplicationHistoryComponent);\r\n    return OthersLeaveApplicationHistoryComponent;\r\n}());\r\nexports.OthersLeaveApplicationHistoryComponent = OthersLeaveApplicationHistoryComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\leave-application-extended\\others-leave-application-history.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\leave-application-extended\\others-leave-application-history.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ILeaveApplication } from 'app/shared/model/leave-application.model';\r\nimport { Account, AccountService } from 'app/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { JhiAlertService, JhiEventManager, JhiParseLinks } from 'ng-jhipster';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DATE_FORMAT, DAYS, ITEMS_PER_PAGE, MONTHS, YEARS } from 'app/shared';\r\nimport { HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { IEmployee } from 'app/shared/model/employee.model';\r\nimport { ManagerService } from 'app/entities/manager';\r\nimport { IManager } from 'app/shared/model/manager.model';\r\nimport { IConstantsModel } from 'app/shared/model/constants-model';\r\nimport * as moment from 'moment';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { LeaveApplicationExtendedService } from 'app/entities/leave-application-extended/leave-application-extended.service';\r\nimport { EmployeeExtendedService } from 'app/entities/employee-extended';\r\n\r\n@Component({\r\n    selector: 'jhi-others-leave-application-history',\r\n    templateUrl: './others-leave-application-history.component.html'\r\n})\r\nexport class OthersLeaveApplicationHistoryComponent implements OnInit, OnDestroy {\r\n    leaveApplications: ILeaveApplication[];\r\n    currentAccount: Account;\r\n    eventSubscriber: Subscription;\r\n    itemsPerPage: number;\r\n    links: any;\r\n    page: any;\r\n    predicate: any;\r\n    reverse: any;\r\n    totalItems: number;\r\n    currentSearch: string;\r\n    currentSearchAsEmployee: IEmployee;\r\n    currentEmployee: IEmployee;\r\n    employees: IEmployee[];\r\n    employeesUnderSupervisor: IManager[];\r\n\r\n    days: IConstantsModel[] = DAYS;\r\n    months: IConstantsModel[] = MONTHS;\r\n    years: IConstantsModel[] = YEARS();\r\n    employee: IEmployee;\r\n\r\n    fromDate: {\r\n        day: number;\r\n        month: number;\r\n        year: number;\r\n    } = { day: new Date().getDate(), month: new Date().getMonth() + 1, year: new Date().getFullYear() };\r\n\r\n    toDate: {\r\n        day: number;\r\n        month: number;\r\n        year: number;\r\n    } = { day: new Date().getDate(), month: new Date().getMonth() + 1, year: new Date().getFullYear() };\r\n\r\n    constructor(\r\n        protected leaveApplicationService: LeaveApplicationExtendedService,\r\n        protected jhiAlertService: JhiAlertService,\r\n        protected eventManager: JhiEventManager,\r\n        protected parseLinks: JhiParseLinks,\r\n        protected activatedRoute: ActivatedRoute,\r\n        protected accountService: AccountService,\r\n        protected employeeService: EmployeeExtendedService,\r\n        protected managerService: ManagerService\r\n    ) {\r\n        this.leaveApplications = [];\r\n        this.itemsPerPage = ITEMS_PER_PAGE;\r\n        this.page = 0;\r\n        this.links = {\r\n            last: 0\r\n        };\r\n        this.predicate = 'id';\r\n        this.reverse = true;\r\n        this.currentSearch =\r\n            this.activatedRoute.snapshot && this.activatedRoute.snapshot.params['search']\r\n                ? this.activatedRoute.snapshot.params['search']\r\n                : '';\r\n    }\r\n\r\n    loadAll() {\r\n        if (this.accountService.hasAnyAuthority(['ROLE_ADMIN']) || this.accountService.hasAnyAuthority(['ROLE_LEAVE_ADMIN'])) {\r\n            if (\r\n                this.fromDate.day &&\r\n                this.fromDate.month &&\r\n                this.fromDate.year &&\r\n                this.toDate.day &&\r\n                this.toDate.month &&\r\n                this.toDate.year &&\r\n                this.employee\r\n            ) {\r\n                let from = moment(new Date(`${this.fromDate.month}-${this.fromDate.day}-${this.fromDate.year}`));\r\n                let to = moment(new Date(`${this.toDate.month}-${this.toDate.day}-${this.toDate.year}`));\r\n\r\n                if (from.isBefore(to.add(1))) {\r\n                    this.leaveApplicationService\r\n                        .query({\r\n                            page: this.page,\r\n                            size: this.itemsPerPage,\r\n                            sort: this.sort(),\r\n                            'employeesId.equals': this.employee.id,\r\n                            'fromDate.greaterOrEqualThan': moment(\r\n                                new Date(`${this.fromDate.month}-${this.fromDate.day}-${this.fromDate.year}`)\r\n                            ).format(DATE_FORMAT),\r\n                            'toDate.lessOrEqualThan': moment(\r\n                                new Date(`${this.toDate.month}-${this.toDate.day}-${this.toDate.year}`)\r\n                            ).format(DATE_FORMAT)\r\n                        })\r\n                        .subscribe(\r\n                            (ress: HttpResponse<ILeaveApplication[]>) => this.paginateLeaveApplications(ress.body, ress.headers),\r\n                            (ress: HttpErrorResponse) => this.onError(ress.message)\r\n                        );\r\n                } else {\r\n                    this.onError('Invalid dates');\r\n                }\r\n            } else {\r\n                this.onError('Invalid input');\r\n            }\r\n        } else {\r\n            if (\r\n                this.fromDate.day &&\r\n                this.fromDate.month &&\r\n                this.fromDate.year &&\r\n                this.toDate.day &&\r\n                this.toDate.month &&\r\n                this.toDate.year &&\r\n                this.employee\r\n            ) {\r\n                let from = moment(new Date(`${this.fromDate.month}-${this.fromDate.day}-${this.fromDate.year}`));\r\n                let to = moment(new Date(`${this.toDate.month}-${this.toDate.day}-${this.toDate.year}`));\r\n\r\n                if (from.isBefore(to.add(1))) {\r\n                    this.employeeService\r\n                        .query({\r\n                            'employeeId.equals': this.employee.employeeId\r\n                        })\r\n                        .subscribe(\r\n                            (res: HttpResponse<IEmployee[]>) => {\r\n                                this.currentSearchAsEmployee = res.body[0];\r\n                                this.managerService\r\n                                    .query({\r\n                                        'parentEmployeeId.equals': res.body[0].id\r\n                                    })\r\n                                    .subscribe(\r\n                                        (response: HttpResponse<IManager[]>) => {\r\n                                            if (response.body[0].employeeId === this.currentEmployee.id) {\r\n                                                this.leaveApplicationService\r\n                                                    .query({\r\n                                                        page: this.page,\r\n                                                        size: this.itemsPerPage,\r\n                                                        sort: this.sort(),\r\n                                                        'employeesId.equals': this.currentSearchAsEmployee.id,\r\n                                                        'fromDate.greaterOrEqualThan': moment(\r\n                                                            new Date(`${this.fromDate.month}-${this.fromDate.day}-${this.fromDate.year}`)\r\n                                                        ).format(DATE_FORMAT),\r\n                                                        'toDate.lessOrEqualThan': moment(\r\n                                                            new Date(`${this.toDate.month}-${this.toDate.day}-${this.toDate.year}`)\r\n                                                        ).format(DATE_FORMAT)\r\n                                                    })\r\n                                                    .subscribe(\r\n                                                        (ress: HttpResponse<ILeaveApplication[]>) =>\r\n                                                            this.paginateLeaveApplications(ress.body, ress.headers),\r\n                                                        (ress: HttpErrorResponse) => this.onError(ress.message)\r\n                                                    );\r\n                                            }\r\n                                        },\r\n                                        (response: HttpErrorResponse) => this.onError(response.message)\r\n                                    );\r\n                            },\r\n                            (res: HttpErrorResponse) => this.onError(res.message)\r\n                        );\r\n                } else {\r\n                    this.onError('Invalid dates');\r\n                }\r\n            } else {\r\n                this.onError('Invalid input');\r\n            }\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.page = 0;\r\n        this.leaveApplications = [];\r\n        this.loadAll();\r\n    }\r\n\r\n    loadPage(page) {\r\n        this.page = page;\r\n        this.loadAll();\r\n    }\r\n\r\n    clear() {\r\n        this.leaveApplications = [];\r\n        this.links = {\r\n            last: 0\r\n        };\r\n        this.page = 0;\r\n        this.predicate = 'id';\r\n        this.reverse = true;\r\n        this.currentSearch = '';\r\n        this.loadAll();\r\n    }\r\n\r\n    search(query) {\r\n        if (!query) {\r\n            return this.clear();\r\n        }\r\n        this.leaveApplications = [];\r\n        this.links = {\r\n            last: 0\r\n        };\r\n        this.page = 0;\r\n        this.predicate = 'id';\r\n        this.reverse = false;\r\n        this.currentSearch = query;\r\n        this.loadAll();\r\n    }\r\n\r\n    trackEmployeeById(index: number, item: IEmployee) {\r\n        return item.id;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.accountService.identity().then(account => {\r\n            this.currentAccount = account;\r\n            if (this.accountService.hasAnyAuthority(['ROLE_ADMIN']) || this.accountService.hasAnyAuthority(['ROLE_LEAVE_ADMIN'])) {\r\n                this.employeeService\r\n                    .query()\r\n                    .pipe(\r\n                        filter((mayBeOk: HttpResponse<IEmployee[]>) => mayBeOk.ok),\r\n                        map((response: HttpResponse<IEmployee[]>) => response.body)\r\n                    )\r\n                    .subscribe((res: IEmployee[]) => (this.employees = res), (res: HttpErrorResponse) => this.onError(res.message));\r\n            } else {\r\n                this.employeeService\r\n                    .query({\r\n                        'employeeId.equals': this.currentAccount.login\r\n                    })\r\n                    .subscribe(\r\n                        (res: HttpResponse<IEmployee[]>) => {\r\n                            this.currentEmployee = res.body[0];\r\n                            this.managerService\r\n                                .query({\r\n                                    'employeeId.equals': this.currentEmployee.id\r\n                                })\r\n                                .subscribe(\r\n                                    (res: HttpResponse<IManager[]>) => {\r\n                                        this.employeesUnderSupervisor = res.body;\r\n                                        const map: string = this.employeesUnderSupervisor.map(val => val.parentEmployeeId).join(',');\r\n                                        this.employeeService\r\n                                            .query({\r\n                                                'id.in': [map]\r\n                                            })\r\n                                            .subscribe(\r\n                                                (res: HttpResponse<IEmployee[]>) => (this.employees = res.body),\r\n                                                (res: HttpErrorResponse) => this.onError(res.message)\r\n                                            );\r\n                                    },\r\n                                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                                );\r\n                        },\r\n                        (res: HttpErrorResponse) => this.onError(res.message)\r\n                    );\r\n            }\r\n        });\r\n        this.registerChangeInLeaveApplications();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    }\r\n\r\n    trackId(index: number, item: ILeaveApplication) {\r\n        return item.id;\r\n    }\r\n\r\n    registerChangeInLeaveApplications() {\r\n        this.eventSubscriber = this.eventManager.subscribe('leaveApplicationListModification', response => this.reset());\r\n    }\r\n\r\n    sort() {\r\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected paginateLeaveApplications(data: ILeaveApplication[], headers: HttpHeaders) {\r\n        this.leaveApplications = [];\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        for (let i = 0; i < data.length; i++) {\r\n            this.leaveApplications.push(data[i]);\r\n        }\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    trackDayId(index: number, item: IConstantsModel) {\r\n        return item.id;\r\n    }\r\n\r\n    trackMonthId(index: number, item: IConstantsModel) {\r\n        return item.id;\r\n    }\r\n\r\n    trackYearId(index: number, item: IConstantsModel) {\r\n        return item.id;\r\n    }\r\n\r\n    generateReport() {\r\n        if (\r\n            this.fromDate.day &&\r\n            this.fromDate.month &&\r\n            this.fromDate.year &&\r\n            this.toDate.day &&\r\n            this.toDate.month &&\r\n            this.toDate.year &&\r\n            this.employee\r\n        ) {\r\n            let from = moment(new Date(`${this.fromDate.month}-${this.fromDate.day}-${this.fromDate.year}`));\r\n            let to = moment(new Date(`${this.toDate.month}-${this.toDate.day}-${this.toDate.year}`));\r\n\r\n            if (from.isBefore(to.add(1))) {\r\n                this.leaveApplicationService.generateReportByFromDateAndToDateAndEmployeeId(from, to, this.employee.employeeId);\r\n            } else {\r\n                this.onError('Invalid dates');\r\n            }\r\n        } else if (\r\n            this.fromDate.day &&\r\n            this.fromDate.month &&\r\n            this.fromDate.year &&\r\n            this.toDate.day &&\r\n            this.toDate.month &&\r\n            this.toDate.year\r\n        ) {\r\n            if (this.accountService.hasAnyAuthority(['ROLE_ADMIN', 'ROLE_LEAVE_ADMIN'])) {\r\n                let from = moment(new Date(`${this.fromDate.month}-${this.fromDate.day}-${this.fromDate.year}`));\r\n                let to = moment(new Date(`${this.toDate.month}-${this.toDate.day}-${this.toDate.year}`));\r\n\r\n                if (from.isBefore(to.add(1))) {\r\n                    this.leaveApplicationService.generateReportByFromDateAndToDate(from, to);\r\n                } else {\r\n                    this.onError('Invalid dates');\r\n                }\r\n            } else {\r\n                this.onError('Please fill up all the required information');\r\n            }\r\n        } else {\r\n            this.onError('Invalid input');\r\n        }\r\n    }\r\n}\r\n"]}]}