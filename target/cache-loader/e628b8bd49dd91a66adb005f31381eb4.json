{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\mst-group-extended\\mst-group-extended-update.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\mst-group-extended\\mst-group-extended-update.component.ts","mtime":1625565387311},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar mst_group_model_1 = require(\"app/shared/model/mst-group.model\");\r\nvar mst_group_extended_service_1 = require(\"./mst-group-extended.service\");\r\nvar mst_group_1 = require(\"app/entities/mst-group\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar MstGroupExtendedUpdateComponent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MstGroupExtendedUpdateComponent, _super);\r\n    function MstGroupExtendedUpdateComponent(mstGroupService, activatedRoute, mstGroupExtendedService) {\r\n        var _this = _super.call(this, mstGroupService, activatedRoute) || this;\r\n        _this.mstGroupService = mstGroupService;\r\n        _this.activatedRoute = activatedRoute;\r\n        _this.mstGroupExtendedService = mstGroupExtendedService;\r\n        _this.focus$ = new rxjs_1.Subject();\r\n        _this.click$ = new rxjs_1.Subject();\r\n        _this.search = function (text$) {\r\n            var debouncedText$ = text$.pipe(operators_1.debounceTime(200), operators_1.distinctUntilChanged());\r\n            var clicksWithClosedPopup$ = _this.click$.pipe(operators_1.filter(function () { return !_this.instance.isPopupOpen(); }));\r\n            var inputFocus$ = _this.focus$;\r\n            return rxjs_1.merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(operators_1.map(function (term) {\r\n                return (term === '' ? _this.groupNameList : _this.groupNameList.filter(function (v) { return v.toLowerCase().indexOf(term.toLowerCase()) > -1; })).slice(0, 10);\r\n            }));\r\n        };\r\n        return _this;\r\n    }\r\n    MstGroupExtendedUpdateComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var mstGroup = _a.mstGroup;\r\n            _this.mstGroup = mstGroup;\r\n            _this.mstGroup.reservedFlag = _this.mstGroup.reservedFlag === undefined ? mst_group_model_1.ReservedFlag.NOT_RESERVED : _this.mstGroup.reservedFlag;\r\n        });\r\n        this.mstGroupService\r\n            .query({\r\n            size: 2000\r\n        })\r\n            .subscribe(function (response) {\r\n            _this.groups = [];\r\n            _this.groups = response.body;\r\n            _this.groupNameMapId = {};\r\n            _this.groupIdMapName = {};\r\n            _this.groupNameList = [];\r\n            _this.groups.forEach(function (g) {\r\n                _this.groupNameList.push(g.name);\r\n                _this.groupNameMapId[g.name] = g;\r\n                _this.groupIdMapName[g.id] = g.name;\r\n                if (g.id == _this.mstGroup.mainGroup)\r\n                    _this.selectedGroupName = g.name;\r\n            });\r\n        });\r\n    };\r\n    MstGroupExtendedUpdateComponent.prototype.displayFn = function (mstGroup) {\r\n        return mstGroup ? mstGroup.name : undefined;\r\n    };\r\n    MstGroupExtendedUpdateComponent.prototype.save = function () {\r\n        this.isSaving = true;\r\n        this.mstGroup.mainGroup =\r\n            this.groupNameMapId[this.selectedGroupName] != undefined ? this.groupNameMapId[this.selectedGroupName].id : undefined;\r\n        if (this.mstGroup.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.mstGroupExtendedService.update(this.mstGroup));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.mstGroupExtendedService.create(this.mstGroup));\r\n        }\r\n    };\r\n    var _a, _b, _c, _d;\r\n    tslib_1.__decorate([\r\n        core_1.ViewChild('instance'),\r\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof ng_bootstrap_1.NgbTypeahead !== \"undefined\" && ng_bootstrap_1.NgbTypeahead) === \"function\" ? _a : Object)\r\n    ], MstGroupExtendedUpdateComponent.prototype, \"instance\", void 0);\r\n    MstGroupExtendedUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-mst-group-extended-update',\r\n            templateUrl: './mst-group-extended-update.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof mst_group_extended_service_1.MstGroupExtendedService !== \"undefined\" && mst_group_extended_service_1.MstGroupExtendedService) === \"function\" ? _b : Object, typeof (_c = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _c : Object, typeof (_d = typeof mst_group_extended_service_1.MstGroupExtendedService !== \"undefined\" && mst_group_extended_service_1.MstGroupExtendedService) === \"function\" ? _d : Object])\r\n    ], MstGroupExtendedUpdateComponent);\r\n    return MstGroupExtendedUpdateComponent;\r\n}(mst_group_1.MstGroupUpdateComponent));\r\nexports.MstGroupExtendedUpdateComponent = MstGroupExtendedUpdateComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\mst-group-extended\\mst-group-extended-update.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\mst-group-extended\\mst-group-extended-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { AfterContentInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\r\nimport { IMstGroup, ReservedFlag } from 'app/shared/model/mst-group.model';\r\nimport { MstGroupExtendedService } from './mst-group-extended.service';\r\nimport { MstGroupUpdateComponent } from 'app/entities/mst-group';\r\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n    selector: 'jhi-mst-group-extended-update',\r\n    templateUrl: './mst-group-extended-update.component.html'\r\n})\r\nexport class MstGroupExtendedUpdateComponent extends MstGroupUpdateComponent implements OnInit {\r\n    groups: IMstGroup[];\r\n    groupNameList: string[];\r\n    selectedGroupName: string;\r\n    groupNameMapId: any;\r\n    groupIdMapName: any;\r\n\r\n    @ViewChild('instance') instance: NgbTypeahead;\r\n    focus$ = new Subject<string>();\r\n    click$ = new Subject<string>();\r\n\r\n    constructor(\r\n        protected mstGroupService: MstGroupExtendedService,\r\n        protected activatedRoute: ActivatedRoute,\r\n        protected mstGroupExtendedService: MstGroupExtendedService\r\n    ) {\r\n        super(mstGroupService, activatedRoute);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ mstGroup }) => {\r\n            this.mstGroup = mstGroup;\r\n            this.mstGroup.reservedFlag = this.mstGroup.reservedFlag === undefined ? ReservedFlag.NOT_RESERVED : this.mstGroup.reservedFlag;\r\n        });\r\n\r\n        this.mstGroupService\r\n            .query({\r\n                size: 2000\r\n            })\r\n            .subscribe((response: HttpResponse<IMstGroup[]>) => {\r\n                this.groups = [];\r\n                this.groups = response.body;\r\n                this.groupNameMapId = {};\r\n                this.groupIdMapName = {};\r\n                this.groupNameList = [];\r\n                this.groups.forEach((g: IMstGroup) => {\r\n                    this.groupNameList.push(g.name);\r\n                    this.groupNameMapId[g.name] = g;\r\n                    this.groupIdMapName[g.id] = g.name;\r\n                    if (g.id == this.mstGroup.mainGroup) this.selectedGroupName = g.name;\r\n                });\r\n            });\r\n    }\r\n\r\n    displayFn(mstGroup?: IMstGroup) {\r\n        return mstGroup ? mstGroup.name : undefined;\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n        this.mstGroup.mainGroup =\r\n            this.groupNameMapId[this.selectedGroupName] != undefined ? this.groupNameMapId[this.selectedGroupName].id : undefined;\r\n        if (this.mstGroup.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.mstGroupExtendedService.update(this.mstGroup));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.mstGroupExtendedService.create(this.mstGroup));\r\n        }\r\n    }\r\n\r\n    search = (text$: Observable<string>) => {\r\n        const debouncedText$ = text$.pipe(\r\n            debounceTime(200),\r\n            distinctUntilChanged()\r\n        );\r\n        const clicksWithClosedPopup$ = this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\r\n        const inputFocus$ = this.focus$;\r\n\r\n        return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\r\n            map(term =>\r\n                (term === '' ? this.groupNameList : this.groupNameList.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1)).slice(\r\n                    0,\r\n                    10\r\n                )\r\n            )\r\n        );\r\n    };\r\n}\r\n"]}]}