{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\account\\sessions\\sessions.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\account\\sessions\\sessions.component.ts","mtime":1625565386396},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"app/core\");\r\nvar sessions_service_1 = require(\"./sessions.service\");\r\nvar SessionsComponent = /** @class */ (function () {\r\n    function SessionsComponent(sessionsService, accountService) {\r\n        this.sessionsService = sessionsService;\r\n        this.accountService = accountService;\r\n    }\r\n    SessionsComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.sessionsService.findAll().subscribe(function (sessions) { return (_this.sessions = sessions); });\r\n        this.accountService.identity().then(function (account) {\r\n            _this.account = account;\r\n        });\r\n    };\r\n    SessionsComponent.prototype.invalidate = function (series) {\r\n        var _this = this;\r\n        this.sessionsService.delete(encodeURIComponent(series)).subscribe(function (response) {\r\n            if (response.status === 200) {\r\n                _this.error = null;\r\n                _this.success = 'OK';\r\n                _this.sessionsService.findAll().subscribe(function (sessions) { return (_this.sessions = sessions); });\r\n            }\r\n            else {\r\n                _this.success = null;\r\n                _this.error = 'ERROR';\r\n            }\r\n        });\r\n    };\r\n    var _a, _b;\r\n    SessionsComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-sessions',\r\n            templateUrl: './sessions.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof sessions_service_1.SessionsService !== \"undefined\" && sessions_service_1.SessionsService) === \"function\" ? _a : Object, typeof (_b = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _b : Object])\r\n    ], SessionsComponent);\r\n    return SessionsComponent;\r\n}());\r\nexports.SessionsComponent = SessionsComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\account\\sessions\\sessions.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\account\\sessions\\sessions.component.ts"],"names":[],"mappings":";;;AAAA,sCAAkD;AAElD,iCAA0C;AAE1C,uDAAqD;AAMrD;IAMI,2BAAoB,eAAgC,EAAU,cAA8B;QAAxE,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEhG,oCAAQ,GAAR;QAAA,iBAMC;QALG,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,CAAC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAA1B,CAA0B,CAAC,CAAC;QAEjF,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YACvC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAU,GAAV,UAAW,MAAM;QAAjB,iBAWC;QAVG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,QAAQ;YACtE,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;gBACzB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAA,QAAQ,IAAI,OAAA,CAAC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,EAA1B,CAA0B,CAAC,CAAC;aACpF;iBAAM;gBACH,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;aACxB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;;IA3BQ,iBAAiB;QAJ7B,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,2BAA2B;SAC3C,CAAC;qEAOuC,kCAAe,oBAAf,kCAAe,oDAA0B,qBAAc,oBAAd,qBAAc;OANnF,iBAAiB,CA4B7B;IAAD,wBAAC;CAAA,AA5BD,IA4BC;AA5BY,8CAAiB","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AccountService } from 'app/core';\r\nimport { Session } from './session.model';\r\nimport { SessionsService } from './sessions.service';\r\n\r\n@Component({\r\n    selector: 'jhi-sessions',\r\n    templateUrl: './sessions.component.html'\r\n})\r\nexport class SessionsComponent implements OnInit {\r\n    account: any;\r\n    error: string;\r\n    success: string;\r\n    sessions: Session[];\r\n\r\n    constructor(private sessionsService: SessionsService, private accountService: AccountService) {}\r\n\r\n    ngOnInit() {\r\n        this.sessionsService.findAll().subscribe(sessions => (this.sessions = sessions));\r\n\r\n        this.accountService.identity().then(account => {\r\n            this.account = account;\r\n        });\r\n    }\r\n\r\n    invalidate(series) {\r\n        this.sessionsService.delete(encodeURIComponent(series)).subscribe(response => {\r\n            if (response.status === 200) {\r\n                this.error = null;\r\n                this.success = 'OK';\r\n                this.sessionsService.findAll().subscribe(sessions => (this.sessions = sessions));\r\n            } else {\r\n                this.success = null;\r\n                this.error = 'ERROR';\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}]}