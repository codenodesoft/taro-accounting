{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-account-map-extended\\system-account-map-extended-update.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-account-map-extended\\system-account-map-extended-update.component.ts","mtime":1625565388133},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar system_account_map_extended_service_1 = require(\"./system-account-map-extended.service\");\r\nvar mst_account_1 = require(\"app/entities/mst-account\");\r\nvar system_account_map_1 = require(\"app/entities/system-account-map\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar SystemAccountMapExtendedUpdateComponent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SystemAccountMapExtendedUpdateComponent, _super);\r\n    function SystemAccountMapExtendedUpdateComponent(jhiAlertService, systemAccountMapService, mstAccountService, activatedRoute) {\r\n        var _this = _super.call(this, jhiAlertService, systemAccountMapService, mstAccountService, activatedRoute) || this;\r\n        _this.jhiAlertService = jhiAlertService;\r\n        _this.systemAccountMapService = systemAccountMapService;\r\n        _this.mstAccountService = mstAccountService;\r\n        _this.activatedRoute = activatedRoute;\r\n        _this.accountNameList = [];\r\n        _this.focus$ = new rxjs_1.Subject();\r\n        _this.click$ = new rxjs_1.Subject();\r\n        _this.search = function (text$) {\r\n            var debouncedText$ = text$.pipe(operators_1.debounceTime(200), operators_1.distinctUntilChanged());\r\n            var clicksWithClosedPopup$ = _this.click$.pipe(operators_1.filter(function () { return !_this.instance.isPopupOpen(); }));\r\n            var inputFocus$ = _this.focus$;\r\n            return rxjs_1.merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(operators_1.map(function (term) {\r\n                return (term === ''\r\n                    ? _this.accountNameList\r\n                    : _this.accountNameList.filter(function (v) { return v.toLowerCase().indexOf(term.toLowerCase()) > -1; })).slice(0, 10);\r\n            }));\r\n        };\r\n        return _this;\r\n    }\r\n    SystemAccountMapExtendedUpdateComponent.prototype.accountSelected = function () {\r\n        var selectedAccount = this.accountNameMapAccount[this.selectedAccountName];\r\n        this.systemAccountMap.accountId = selectedAccount.id;\r\n    };\r\n    SystemAccountMapExtendedUpdateComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var systemAccountMap = _a.systemAccountMap;\r\n            _this.systemAccountMap = systemAccountMap;\r\n        });\r\n        this.mstaccounts = [];\r\n        this.mstAccountService\r\n            .query({\r\n            size: 5000\r\n        })\r\n            .pipe(operators_1.filter(function (mayBeOk) { return mayBeOk.ok; }), operators_1.map(function (response) { return response.body; }))\r\n            .subscribe(function (res) {\r\n            _this.mstaccounts = res;\r\n            _this.accountNameList = [];\r\n            _this.accountNameMapAccount = {};\r\n            _this.mstaccounts.forEach(function (a) {\r\n                var accountName = a.name + ' (' + a.groupName + ')';\r\n                _this.accountNameList.push(accountName);\r\n                _this.accountNameMapAccount[accountName] = a;\r\n                if (a.id == _this.systemAccountMap.accountId)\r\n                    _this.selectedAccountName = accountName;\r\n            });\r\n        });\r\n    };\r\n    var _a, _b, _c, _d, _e;\r\n    tslib_1.__decorate([\r\n        core_1.ViewChild('instance'),\r\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof ng_bootstrap_1.NgbTypeahead !== \"undefined\" && ng_bootstrap_1.NgbTypeahead) === \"function\" ? _a : Object)\r\n    ], SystemAccountMapExtendedUpdateComponent.prototype, \"instance\", void 0);\r\n    SystemAccountMapExtendedUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-system-account-map-update',\r\n            templateUrl: './system-account-map-extended-update.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _b : Object, typeof (_c = typeof system_account_map_extended_service_1.SystemAccountMapExtendedService !== \"undefined\" && system_account_map_extended_service_1.SystemAccountMapExtendedService) === \"function\" ? _c : Object, typeof (_d = typeof mst_account_1.MstAccountService !== \"undefined\" && mst_account_1.MstAccountService) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object])\r\n    ], SystemAccountMapExtendedUpdateComponent);\r\n    return SystemAccountMapExtendedUpdateComponent;\r\n}(system_account_map_1.SystemAccountMapUpdateComponent));\r\nexports.SystemAccountMapExtendedUpdateComponent = SystemAccountMapExtendedUpdateComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-account-map-extended\\system-account-map-extended-update.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\system-account-map-extended\\system-account-map-extended-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, filter, map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { JhiAlertService } from 'ng-jhipster';\r\nimport { ISystemAccountMap } from 'app/shared/model/system-account-map.model';\r\nimport { SystemAccountMapExtendedService } from './system-account-map-extended.service';\r\nimport { IMstAccount } from 'app/shared/model/mst-account.model';\r\nimport { MstAccountService } from 'app/entities/mst-account';\r\nimport { SystemAccountMapUpdateComponent } from 'app/entities/system-account-map';\r\nimport { NgbTypeahead } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GroupType } from 'app/shared/model/system-group-map.model';\r\n\r\n@Component({\r\n    selector: 'jhi-system-account-map-update',\r\n    templateUrl: './system-account-map-extended-update.component.html'\r\n})\r\nexport class SystemAccountMapExtendedUpdateComponent extends SystemAccountMapUpdateComponent implements OnInit {\r\n    groupTypeWithSystemGroupMap: any;\r\n    accountNameList: string[] = [];\r\n    accountNameMapAccount: any;\r\n    selectedAccountName: string;\r\n\r\n    @ViewChild('instance') instance: NgbTypeahead;\r\n    focus$ = new Subject<string>();\r\n    click$ = new Subject<string>();\r\n\r\n    constructor(\r\n        protected jhiAlertService: JhiAlertService,\r\n        protected systemAccountMapService: SystemAccountMapExtendedService,\r\n        protected mstAccountService: MstAccountService,\r\n        protected activatedRoute: ActivatedRoute\r\n    ) {\r\n        super(jhiAlertService, systemAccountMapService, mstAccountService, activatedRoute);\r\n    }\r\n\r\n    accountSelected() {\r\n        const selectedAccount: IMstAccount = this.accountNameMapAccount[this.selectedAccountName];\r\n        this.systemAccountMap.accountId = selectedAccount.id;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({ systemAccountMap }) => {\r\n            this.systemAccountMap = systemAccountMap;\r\n        });\r\n        this.mstaccounts = [];\r\n        this.mstAccountService\r\n            .query({\r\n                size: 5000\r\n            })\r\n            .pipe(\r\n                filter((mayBeOk: HttpResponse<IMstAccount[]>) => mayBeOk.ok),\r\n                map((response: HttpResponse<IMstAccount[]>) => response.body)\r\n            )\r\n            .subscribe((res: IMstAccount[]) => {\r\n                this.mstaccounts = res;\r\n                this.accountNameList = [];\r\n                this.accountNameMapAccount = {};\r\n                this.mstaccounts.forEach((a: IMstAccount) => {\r\n                    const accountName = a.name + ' (' + a.groupName + ')';\r\n                    this.accountNameList.push(accountName);\r\n                    this.accountNameMapAccount[accountName] = a;\r\n                    if (a.id == this.systemAccountMap.accountId) this.selectedAccountName = accountName;\r\n                });\r\n            });\r\n    }\r\n\r\n    search = (text$: Observable<string>) => {\r\n        const debouncedText$ = text$.pipe(\r\n            debounceTime(200),\r\n            distinctUntilChanged()\r\n        );\r\n        const clicksWithClosedPopup$ = this.click$.pipe(filter(() => !this.instance.isPopupOpen()));\r\n        const inputFocus$ = this.focus$;\r\n\r\n        return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\r\n            map(term =>\r\n                (term === ''\r\n                    ? this.accountNameList\r\n                    : this.accountNameList.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1)\r\n                ).slice(0, 10)\r\n            )\r\n        );\r\n    };\r\n}\r\n"]}]}