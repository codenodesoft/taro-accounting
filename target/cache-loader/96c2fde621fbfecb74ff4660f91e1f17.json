{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\salary-extended\\salary-extended.service.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\salary-extended\\salary-extended.service.ts","mtime":1625565387747},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar salary_1 = require(\"app/entities/salary\");\r\nvar SoptorshiUtil_1 = require(\"app/shared/util/SoptorshiUtil\");\r\nvar SalaryExtendedService = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SalaryExtendedService, _super);\r\n    function SalaryExtendedService(http) {\r\n        var _this = _super.call(this, http) || this;\r\n        _this.http = http;\r\n        _this.resourceUrlExtended = app_constants_1.SERVER_API_URL + 'api/extended/salaries';\r\n        _this.resourceSearchUrl = app_constants_1.SERVER_API_URL + 'api/_search/salaries';\r\n        return _this;\r\n    }\r\n    SalaryExtendedService.prototype.create = function (salary) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(salary);\r\n        return this.http\r\n            .post(this.resourceUrlExtended, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    SalaryExtendedService.prototype.update = function (salary) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(salary);\r\n        return this.http\r\n            .put(this.resourceUrlExtended, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    SalaryExtendedService.prototype.generatePayroll = function (officeId, designationId, year, monthType) {\r\n        designationId = designationId === undefined ? 9999 : designationId;\r\n        return this.http\r\n            .get(this.resourceUrlExtended + \"/generatePayRoll-all/\" + officeId + \"/\" + designationId + \"/\" + year + \"/\" + monthType.toString(), {\r\n            observe: 'response'\r\n        })\r\n            .pipe(operators_1.map(function (res) { return res; }));\r\n    };\r\n    SalaryExtendedService.prototype.createPayrollReport = function (officeId, year, monthType) {\r\n        return this.http\r\n            .get(this.resourceUrlExtended + \"/salary-report/\" + officeId + \"/\" + year + \"/\" + monthType, { responseType: 'blob' })\r\n            .subscribe(function (data) {\r\n            SoptorshiUtil_1.SoptorshiUtil.writeFileContent(data, 'application/pdf', 'Salary Report');\r\n        });\r\n    };\r\n    SalaryExtendedService.prototype.generatePayrollEmployeeSpecific = function (officeId, year, monthType, employeeId) {\r\n        return this.http\r\n            .get(this.resourceUrlExtended + \"/generatePayRoll-employee/\" + officeId + \"/\" + year + \"/\" + monthType.toString() + \"/\" + employeeId, {\r\n            observe: 'response'\r\n        })\r\n            .pipe(operators_1.map(function (res) { return res; }));\r\n    };\r\n    SalaryExtendedService.prototype.approveAll = function (officeId, designationId, year, month) {\r\n        designationId = designationId === undefined ? 9999 : designationId;\r\n        return this.http.put(this.resourceUrlExtended + \"/approveAll/office/\" + officeId + \"/designation/\" + designationId + \"/year/\" + year + \"/month/\" + month, {}, { observe: 'response' });\r\n    };\r\n    SalaryExtendedService.prototype.rejectAll = function (officeId, designationId, year, month) {\r\n        designationId = designationId === undefined ? 9999 : designationId;\r\n        return this.http.put(this.resourceUrlExtended + \"/rejectAll/office/\" + officeId + \"/designation/\" + designationId + \"/year/\" + year + \"/month/\" + month, {}, { observe: 'response' });\r\n    };\r\n    var _a;\r\n    SalaryExtendedService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], SalaryExtendedService);\r\n    return SalaryExtendedService;\r\n}(salary_1.SalaryService));\r\nexports.SalaryExtendedService = SalaryExtendedService;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\salary-extended\\salary-extended.service.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\salary-extended\\salary-extended.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { ISalary } from 'app/shared/model/salary.model';\r\nimport { MonthType } from 'app/shared/model/monthly-salary.model';\r\nimport { SalaryService } from 'app/entities/salary';\r\nimport { SoptorshiUtil } from 'app/shared/util/SoptorshiUtil';\r\n\r\ntype EntityResponseType = HttpResponse<ISalary>;\r\ntype EntityArrayResponseType = HttpResponse<ISalary[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SalaryExtendedService extends SalaryService {\r\n    public resourceUrlExtended = SERVER_API_URL + 'api/extended/salaries';\r\n    public resourceSearchUrl = SERVER_API_URL + 'api/_search/salaries';\r\n\r\n    constructor(protected http: HttpClient) {\r\n        super(http);\r\n    }\r\n\r\n    create(salary: ISalary): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(salary);\r\n        return this.http\r\n            .post<ISalary>(this.resourceUrlExtended, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(salary: ISalary): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(salary);\r\n        return this.http\r\n            .put<ISalary>(this.resourceUrlExtended, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    generatePayroll(officeId: number, designationId: number, year: number, monthType: MonthType): Observable<EntityResponseType> {\r\n        designationId = designationId === undefined ? 9999 : designationId;\r\n        return this.http\r\n            .get<any>(`${this.resourceUrlExtended}/generatePayRoll-all/${officeId}/${designationId}/${year}/${monthType.toString()}`, {\r\n                observe: 'response'\r\n            })\r\n            .pipe(map((res: any) => res));\r\n    }\r\n\r\n    createPayrollReport(officeId: number, year: number, monthType: MonthType) {\r\n        return this.http\r\n            .get(`${this.resourceUrlExtended}/salary-report/${officeId}/${year}/${monthType}`, { responseType: 'blob' })\r\n            .subscribe((data: any) => {\r\n                SoptorshiUtil.writeFileContent(data, 'application/pdf', 'Salary Report');\r\n            });\r\n    }\r\n\r\n    generatePayrollEmployeeSpecific(\r\n        officeId: number,\r\n        year: number,\r\n        monthType: MonthType,\r\n        employeeId: number\r\n    ): Observable<EntityResponseType> {\r\n        return this.http\r\n            .get<any>(`${this.resourceUrlExtended}/generatePayRoll-employee/${officeId}/${year}/${monthType.toString()}/${employeeId}`, {\r\n                observe: 'response'\r\n            })\r\n            .pipe(map((res: any) => res));\r\n    }\r\n\r\n    approveAll(officeId: number, designationId: number, year: number, month: MonthType): Observable<EntityResponseType> {\r\n        designationId = designationId === undefined ? 9999 : designationId;\r\n        return this.http.put(\r\n            `${this.resourceUrlExtended}/approveAll/office/${officeId}/designation/${designationId}/year/${year}/month/${month}`,\r\n            {},\r\n            { observe: 'response' }\r\n        );\r\n    }\r\n\r\n    rejectAll(officeId: number, designationId: number, year: number, month: MonthType): Observable<EntityResponseType> {\r\n        designationId = designationId === undefined ? 9999 : designationId;\r\n        return this.http.put(\r\n            `${this.resourceUrlExtended}/rejectAll/office/${officeId}/designation/${designationId}/year/${year}/month/${month}`,\r\n            {},\r\n            { observe: 'response' }\r\n        );\r\n    }\r\n}\r\n"]}]}