{"remainingRequest":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\leave-balance\\leave-balance.component.ts","dependencies":[{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\leave-balance\\leave-balance.component.ts","mtime":1625565387198},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar core_2 = require(\"app/core\");\r\nvar leave_balance_service_1 = require(\"app/entities/leave-balance/leave-balance.service\");\r\nvar employee_1 = require(\"app/entities/employee\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar LeaveBalanceComponent = /** @class */ (function () {\r\n    function LeaveBalanceComponent(leaveBalanceService, employeeService, jhiAlertService, eventManager, parseLinks, activatedRoute, accountService) {\r\n        this.leaveBalanceService = leaveBalanceService;\r\n        this.employeeService = employeeService;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.eventManager = eventManager;\r\n        this.parseLinks = parseLinks;\r\n        this.activatedRoute = activatedRoute;\r\n        this.accountService = accountService;\r\n        this.years = shared_1.YEARS();\r\n        this.fromDate = { year: new Date().getFullYear() };\r\n        this.leaveBalances = [];\r\n    }\r\n    LeaveBalanceComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.accountService.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n            _this.employeeService\r\n                .query({\r\n                'employeeId.equals': _this.currentAccount.login\r\n            })\r\n                .subscribe(function (res) {\r\n                _this.employee = res.body[0];\r\n                _this.getLeaveBalance(_this.employee.employeeId, _this.fromDate.year);\r\n            }, function (res) { return _this.onError(res.message); });\r\n        });\r\n    };\r\n    LeaveBalanceComponent.prototype.getLeaveBalance = function (employeeId, year) {\r\n        var _this = this;\r\n        this.leaveBalanceService\r\n            .find(employeeId, year)\r\n            .subscribe(function (res) { return _this.constructLeaveBalance(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    LeaveBalanceComponent.prototype.constructLeaveBalance = function (data, headers) {\r\n        this.leaveBalances = [];\r\n        for (var i = 0; i < data.length; i++) {\r\n            this.leaveBalances.push(data[i]);\r\n        }\r\n    };\r\n    LeaveBalanceComponent.prototype.trackId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    LeaveBalanceComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    LeaveBalanceComponent.prototype.trackYearId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    LeaveBalanceComponent.prototype.generateReport = function () {\r\n        if (this.fromDate.year) {\r\n            this.leaveBalanceService.generateReportByFromDateAndToDateAndEmployeeId(this.fromDate.year, this.employee.employeeId);\r\n        }\r\n        else {\r\n            this.onError('Invalid input');\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    LeaveBalanceComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-leave-balance',\r\n            templateUrl: './leave-balance.component.html',\r\n            styles: []\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof leave_balance_service_1.LeaveBalanceService !== \"undefined\" && leave_balance_service_1.LeaveBalanceService) === \"function\" ? _a : Object, typeof (_b = typeof employee_1.EmployeeService !== \"undefined\" && employee_1.EmployeeService) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _c : Object, typeof (_d = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _d : Object, typeof (_e = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _e : Object, typeof (_f = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _f : Object, typeof (_g = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _g : Object])\r\n    ], LeaveBalanceComponent);\r\n    return LeaveBalanceComponent;\r\n}());\r\nexports.LeaveBalanceComponent = LeaveBalanceComponent;\r\n",{"version":3,"file":"C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\leave-balance\\leave-balance.component.ts","sourceRoot":"","sources":["C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\node_modules\\tslint-loader\\index.js!C:\\Users\\hp\\Documents\\soptorshi-jhipster\\src\\main\\webapp\\app\\entities\\leave-balance\\leave-balance.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { JhiAlertService, JhiEventManager, JhiParseLinks } from 'ng-jhipster';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Account, AccountService } from 'app/core';\r\nimport { ILeaveApplication } from 'app/shared/model/leave-application.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { ILeaveBalance } from 'app/shared/model/leave-balance.model';\r\nimport { HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { LeaveBalanceService } from 'app/entities/leave-balance/leave-balance.service';\r\nimport { IEmployee } from 'app/shared/model/employee.model';\r\nimport { EmployeeService } from 'app/entities/employee';\r\nimport { IConstantsModel } from 'app/shared/model/constants-model';\r\nimport { YEARS } from 'app/shared';\r\n\r\n@Component({\r\n    selector: 'jhi-leave-balance',\r\n    templateUrl: './leave-balance.component.html',\r\n    styles: []\r\n})\r\nexport class LeaveBalanceComponent implements OnInit {\r\n    leaveBalances: ILeaveBalance[];\r\n    employee: IEmployee;\r\n    currentAccount: Account;\r\n    eventSubscriber: Subscription;\r\n\r\n    years: IConstantsModel[] = YEARS();\r\n\r\n    fromDate: {\r\n        year: number;\r\n    } = { year: new Date().getFullYear() };\r\n\r\n    constructor(\r\n        protected leaveBalanceService: LeaveBalanceService,\r\n        protected employeeService: EmployeeService,\r\n        protected jhiAlertService: JhiAlertService,\r\n        protected eventManager: JhiEventManager,\r\n        protected parseLinks: JhiParseLinks,\r\n        protected activatedRoute: ActivatedRoute,\r\n        protected accountService: AccountService\r\n    ) {\r\n        this.leaveBalances = [];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.accountService.identity().then(account => {\r\n            this.currentAccount = account;\r\n            this.employeeService\r\n                .query({\r\n                    'employeeId.equals': this.currentAccount.login\r\n                })\r\n                .subscribe(\r\n                    (res: HttpResponse<IEmployee[]>) => {\r\n                        this.employee = res.body[0];\r\n                        this.getLeaveBalance(this.employee.employeeId, this.fromDate.year);\r\n                    },\r\n                    (res: HttpErrorResponse) => this.onError(res.message)\r\n                );\r\n        });\r\n    }\r\n\r\n    getLeaveBalance(employeeId: string, year: number) {\r\n        this.leaveBalanceService\r\n            .find(employeeId, year)\r\n            .subscribe(\r\n                (res: HttpResponse<ILeaveBalance[]>) => this.constructLeaveBalance(res.body, res.headers),\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    protected constructLeaveBalance(data: ILeaveBalance[], headers: HttpHeaders) {\r\n        this.leaveBalances = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            this.leaveBalances.push(data[i]);\r\n        }\r\n    }\r\n\r\n    trackId(index: number, item: ILeaveApplication) {\r\n        return item.id;\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    trackYearId(index: number, item: IConstantsModel) {\r\n        return item.id;\r\n    }\r\n\r\n    generateReport() {\r\n        if (this.fromDate.year) {\r\n            this.leaveBalanceService.generateReportByFromDateAndToDateAndEmployeeId(this.fromDate.year, this.employee.employeeId);\r\n        } else {\r\n            this.onError('Invalid input');\r\n        }\r\n    }\r\n}\r\n"]}]}